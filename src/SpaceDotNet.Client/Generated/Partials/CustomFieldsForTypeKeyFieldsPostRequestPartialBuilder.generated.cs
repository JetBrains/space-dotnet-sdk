// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client.CustomFieldsForTypeKeyFieldsPostRequestPartialBuilder
{
    public static class CustomFieldsForTypeKeyFieldsPostRequestPartialExtensions
    {
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithName(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("name");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithDescription(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("description");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithType(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("type");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithType(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it, Func<Partial<CFType>, Partial<CFType>> partialBuilder)
            => it.AddFieldName("type", partialBuilder(new Partial<CFType>(it)));
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithConstraint(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("constraint");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithConstraint(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it, Func<Partial<CFConstraint>, Partial<CFConstraint>> partialBuilder)
            => it.AddFieldName("constraint", partialBuilder(new Partial<CFConstraint>(it)));
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithIsRequired(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("required");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithIsPrivate(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("private");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithAccess(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("access");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithAccess(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it, Func<Partial<AccessType>, Partial<AccessType>> partialBuilder)
            => it.AddFieldName("access", partialBuilder(new Partial<AccessType>(it)));
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithDefaultValue(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("defaultValue");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithDefaultValue(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it, Func<Partial<CFValue>, Partial<CFValue>> partialBuilder)
            => it.AddFieldName("defaultValue", partialBuilder(new Partial<CFValue>(it)));
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithScope(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it)
            => it.AddFieldName("scope");
        
        public static Partial<CustomFieldsForTypeKeyFieldsPostRequest> WithScope(this Partial<CustomFieldsForTypeKeyFieldsPostRequest> it, Func<Partial<ExtendedTypeScope>, Partial<ExtendedTypeScope>> partialBuilder)
            => it.AddFieldName("scope", partialBuilder(new Partial<ExtendedTypeScope>(it)));
        
    }
    
}
