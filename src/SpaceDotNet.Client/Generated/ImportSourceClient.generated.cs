// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public partial class ImportSourceClient
    {
        private readonly Connection _connection;
        
        public ImportSourceClient(Connection connection)
        {
            _connection = connection;
        }
        
        public async Task<ImportSourceDto> CreateImportSourceAsync(string name, string? importerPrincipal = null, Func<Partial<ImportSourceDto>, Partial<ImportSourceDto>>? partial = null)
            => await _connection.RequestResourceAsync<ImportSourcesRequest, ImportSourceDto>("POST", $"api/http/import-sources?$fields={(partial != null ? partial(new Partial<ImportSourceDto>()) : Partial<ImportSourceDto>.Default())}", new ImportSourcesRequest{ Name = name, ImporterPrincipal = importerPrincipal });
    
        public async Task<List<ImportSourceDto>> GetAllImportSourcesAsync(Func<Partial<ImportSourceDto>, Partial<ImportSourceDto>>? partial = null)
            => await _connection.RequestResourceAsync<List<ImportSourceDto>>("GET", $"api/http/import-sources?$fields={(partial != null ? partial(new Partial<ImportSourceDto>()) : Partial<ImportSourceDto>.Default())}");
    
        public async Task UpdateImportSourceAsync(string sourceId, string name, string importerPrincipal)
            => await _connection.RequestResourceAsync("PATCH", $"api/http/import-sources/{sourceId}", new ImportSourcesForSourceIdRequest{ Name = name, ImporterPrincipal = importerPrincipal });
    
        public async Task DeleteImportSourceAsync(string sourceId)
            => await _connection.RequestResourceAsync("DELETE", $"api/http/import-sources/{sourceId}");
    
    }
    
}
