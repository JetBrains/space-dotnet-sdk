// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public partial class ChatClient
    {
        private readonly Connection _connection;
        
        public ChatClient(Connection connection)
        {
            _connection = connection;
        }
        
        public ChannelClient Channels => new ChannelClient(_connection);
        
        public partial class ChannelClient
        {
            private readonly Connection _connection;
            
            public ChannelClient(Connection connection)
            {
                _connection = connection;
            }
            
            public async Task<M2ChannelRecordDto> GerOrCreateDirectMessagesChannelAsync(GerOrCreateDirectMessagesChannelRequest data, Func<Partial<M2ChannelRecordDto>, Partial<M2ChannelRecordDto>>? partial = null)
                => await _connection.RequestResourceAsync<GerOrCreateDirectMessagesChannelRequest, M2ChannelRecordDto>("POST", $"api/http/chats/channels/dm?$fields={(partial != null ? partial(new Partial<M2ChannelRecordDto>()) : Partial<M2ChannelRecordDto>.Default())}", data);
        
            public async Task<bool> IsNameFreeAsync(IsNameFreeRequest data)
                => await _connection.RequestResourceAsync<IsNameFreeRequest, bool>("POST", $"api/http/chats/channels/is-name-free", data);
        
            public async Task<List<string>> ImportMessageHistoryAsync(string channelId, ImportMessageHistoryRequest data)
                => await _connection.RequestResourceAsync<ImportMessageHistoryRequest, List<string>>("POST", $"api/http/chats/channels/{channelId}/import", data);
        
            public async Task RestoreArchivedChannelAsync(string channelId)
                => await _connection.RequestResourceAsync("POST", $"api/http/chats/channels/{channelId}/restore-archived");
        
            public async Task DeleteChannelAsync(string channelId)
                => await _connection.RequestResourceAsync("DELETE", $"api/http/chats/channels/{channelId}");
        
            public async Task ArchiveChannelAsync(string channelId)
                => await _connection.RequestResourceAsync("DELETE", $"api/http/chats/channels/{channelId}/archive");
        
            public MessageClient Messages => new MessageClient(_connection);
            
            public partial class MessageClient
            {
                private readonly Connection _connection;
                
                public MessageClient(Connection connection)
                {
                    _connection = connection;
                }
                
                public async Task<ChannelItemRecordDto> SendTextMessageAsync(string channelId, SendTextMessageRequest data, Func<Partial<ChannelItemRecordDto>, Partial<ChannelItemRecordDto>>? partial = null)
                    => await _connection.RequestResourceAsync<SendTextMessageRequest, ChannelItemRecordDto>("POST", $"api/http/chats/channels/{channelId}/messages?$fields={(partial != null ? partial(new Partial<ChannelItemRecordDto>()) : Partial<ChannelItemRecordDto>.Default())}", data);
            
            }
        
        }
    
        public MessageClient Messages => new MessageClient(_connection);
        
        public partial class MessageClient
        {
            private readonly Connection _connection;
            
            public MessageClient(Connection connection)
            {
                _connection = connection;
            }
            
            public async Task DeleteMessageAsync(DeleteMessageRequest data)
                => await _connection.RequestResourceAsync("POST", $"api/http/chats/messages/delete-message", data);
        
            public async Task EditMessageAsync(EditMessageRequest data)
                => await _connection.RequestResourceAsync("POST", $"api/http/chats/messages/edit-message", data);
        
            [Obsolete("Use POST chats/messages/edit-message (since 2020-06-06) (marked for removal)")]
            public async Task EditTextMessageAsync(EditTextMessageRequest data)
                => await _connection.RequestResourceAsync("POST", $"api/http/chats/messages/edit-text-message", data);
        
            [Obsolete("Use POST chats/channels/{channelId}/messages (since 2020-01-17) (marked for removal)")]
            public async Task<ChannelItemRecordDto> SendTextMessageAsync(SendTextMessageRequest data, Func<Partial<ChannelItemRecordDto>, Partial<ChannelItemRecordDto>>? partial = null)
                => await _connection.RequestResourceAsync<SendTextMessageRequest, ChannelItemRecordDto>("POST", $"api/http/chats/messages/send?$fields={(partial != null ? partial(new Partial<ChannelItemRecordDto>()) : Partial<ChannelItemRecordDto>.Default())}", data);
        
            public async Task<ChannelItemRecordDto> SendMessageAsync(SendMessageRequest data, Func<Partial<ChannelItemRecordDto>, Partial<ChannelItemRecordDto>>? partial = null)
                => await _connection.RequestResourceAsync<SendMessageRequest, ChannelItemRecordDto>("POST", $"api/http/chats/messages/send-message?$fields={(partial != null ? partial(new Partial<ChannelItemRecordDto>()) : Partial<ChannelItemRecordDto>.Default())}", data);
        
        }
    
    }
    
}
