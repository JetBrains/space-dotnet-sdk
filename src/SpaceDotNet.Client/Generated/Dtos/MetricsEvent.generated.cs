// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class MetricsEvent
         : IPropagatePropertyAccessPath
    {
        public MetricsEvent() { }
        
        public MetricsEvent(string id, long time, List<MetricsProp>? props = null, List<MetricsPoint>? points = null)
        {
            Id = id;
            Time = time;
            Props = props;
            Points = points;
        }
        
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(MetricsEvent), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get { return _id.GetValue(); }
            set { _id.SetValue(value); }
        }
    
        private PropertyValue<long> _time = new PropertyValue<long>(nameof(MetricsEvent), nameof(Time));
        
        [Required]
        [JsonPropertyName("time")]
        public long Time
        {
            get { return _time.GetValue(); }
            set { _time.SetValue(value); }
        }
    
        private PropertyValue<List<MetricsProp>?> _props = new PropertyValue<List<MetricsProp>?>(nameof(MetricsEvent), nameof(Props));
        
        [JsonPropertyName("props")]
        public List<MetricsProp>? Props
        {
            get { return _props.GetValue(); }
            set { _props.SetValue(value); }
        }
    
        private PropertyValue<List<MetricsPoint>?> _points = new PropertyValue<List<MetricsPoint>?>(nameof(MetricsEvent), nameof(Points));
        
        [JsonPropertyName("points")]
        public List<MetricsPoint>? Points
        {
            get { return _points.GetValue(); }
            set { _points.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path, validateHasBeenSet);
            _time.SetAccessPath(path, validateHasBeenSet);
            _props.SetAccessPath(path, validateHasBeenSet);
            _points.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
