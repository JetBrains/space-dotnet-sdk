// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class PlanItemDto
         : IPropagatePropertyAccessPath
    {
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(PlanItemDto), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get { return _id.GetValue(); }
            set { _id.SetValue(value); }
        }
    
        private PropertyValue<string> _checklistId = new PropertyValue<string>(nameof(PlanItemDto), nameof(ChecklistId));
        
        [Required]
        [JsonPropertyName("checklistId")]
        public string ChecklistId
        {
            get { return _checklistId.GetValue(); }
            set { _checklistId.SetValue(value); }
        }
    
        private PropertyValue<PlanningTagDto?> _tag = new PropertyValue<PlanningTagDto?>(nameof(PlanItemDto), nameof(Tag));
        
        [JsonPropertyName("tag")]
        public PlanningTagDto? Tag
        {
            get { return _tag.GetValue(); }
            set { _tag.SetValue(value); }
        }
    
        private PropertyValue<string?> _simpleText = new PropertyValue<string?>(nameof(PlanItemDto), nameof(SimpleText));
        
        [JsonPropertyName("simpleText")]
        public string? SimpleText
        {
            get { return _simpleText.GetValue(); }
            set { _simpleText.SetValue(value); }
        }
    
        private PropertyValue<bool?> _simpleDone = new PropertyValue<bool?>(nameof(PlanItemDto), nameof(SimpleDone));
        
        [JsonPropertyName("simpleDone")]
        public bool? SimpleDone
        {
            get { return _simpleDone.GetValue(); }
            set { _simpleDone.SetValue(value); }
        }
    
        private PropertyValue<IssueDto?> _issue = new PropertyValue<IssueDto?>(nameof(PlanItemDto), nameof(Issue));
        
        [JsonPropertyName("issue")]
        public IssueDto? Issue
        {
            get { return _issue.GetValue(); }
            set { _issue.SetValue(value); }
        }
    
        private PropertyValue<string?> _issueProblem = new PropertyValue<string?>(nameof(PlanItemDto), nameof(IssueProblem));
        
        [JsonPropertyName("issueProblem")]
        public string? IssueProblem
        {
            get { return _issueProblem.GetValue(); }
            set { _issueProblem.SetValue(value); }
        }
    
        private PropertyValue<bool?> _canEditIssue = new PropertyValue<bool?>(nameof(PlanItemDto), nameof(CanEditIssue));
        
        [JsonPropertyName("canEditIssue")]
        public bool? CanEditIssue
        {
            get { return _canEditIssue.GetValue(); }
            set { _canEditIssue.SetValue(value); }
        }
    
        private PropertyValue<bool> _hasChildren = new PropertyValue<bool>(nameof(PlanItemDto), nameof(HasChildren));
        
        [Required]
        [JsonPropertyName("hasChildren")]
        public bool HasChildren
        {
            get { return _hasChildren.GetValue(); }
            set { _hasChildren.SetValue(value); }
        }
    
        private PropertyValue<List<PlanItemDto>> _children = new PropertyValue<List<PlanItemDto>>(nameof(PlanItemDto), nameof(Children));
        
        [Required]
        [JsonPropertyName("children")]
        public List<PlanItemDto> Children
        {
            get { return _children.GetValue(); }
            set { _children.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path + "->WithId()", validateHasBeenSet);
            _checklistId.SetAccessPath(path + "->WithChecklistId()", validateHasBeenSet);
            _tag.SetAccessPath(path + "->WithTag()", validateHasBeenSet);
            _simpleText.SetAccessPath(path + "->WithSimpleText()", validateHasBeenSet);
            _simpleDone.SetAccessPath(path + "->WithSimpleDone()", validateHasBeenSet);
            _issue.SetAccessPath(path + "->WithIssue()", validateHasBeenSet);
            _issueProblem.SetAccessPath(path + "->WithIssueProblem()", validateHasBeenSet);
            _canEditIssue.SetAccessPath(path + "->WithCanEditIssue()", validateHasBeenSet);
            _hasChildren.SetAccessPath(path + "->WithHasChildren()", validateHasBeenSet);
            _children.SetAccessPath(path + "->WithChildren()", validateHasBeenSet);
        }
    
    }
    
}
