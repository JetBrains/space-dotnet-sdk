// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class IssueImportResult
         : IPropagatePropertyAccessPath
    {
        public IssueImportResult() { }
        
        public IssueImportResult(string message, List<IssueImportResultItem>? created = null, List<IssueImportResultItem>? updated = null, List<IssueImportResultItem>? skipped = null, List<string>? missingAttributes = null)
        {
            Message = message;
            Created = created;
            Updated = updated;
            Skipped = skipped;
            MissingAttributes = missingAttributes;
        }
        
        private PropertyValue<string> _message = new PropertyValue<string>(nameof(IssueImportResult), nameof(Message));
        
        [Required]
        [JsonPropertyName("message")]
        public string Message
        {
            get { return _message.GetValue(); }
            set { _message.SetValue(value); }
        }
    
        private PropertyValue<List<IssueImportResultItem>?> _created = new PropertyValue<List<IssueImportResultItem>?>(nameof(IssueImportResult), nameof(Created));
        
        [JsonPropertyName("created")]
        public List<IssueImportResultItem>? Created
        {
            get { return _created.GetValue(); }
            set { _created.SetValue(value); }
        }
    
        private PropertyValue<List<IssueImportResultItem>?> _updated = new PropertyValue<List<IssueImportResultItem>?>(nameof(IssueImportResult), nameof(Updated));
        
        [JsonPropertyName("updated")]
        public List<IssueImportResultItem>? Updated
        {
            get { return _updated.GetValue(); }
            set { _updated.SetValue(value); }
        }
    
        private PropertyValue<List<IssueImportResultItem>?> _skipped = new PropertyValue<List<IssueImportResultItem>?>(nameof(IssueImportResult), nameof(Skipped));
        
        [JsonPropertyName("skipped")]
        public List<IssueImportResultItem>? Skipped
        {
            get { return _skipped.GetValue(); }
            set { _skipped.SetValue(value); }
        }
    
        private PropertyValue<List<string>?> _missingAttributes = new PropertyValue<List<string>?>(nameof(IssueImportResult), nameof(MissingAttributes));
        
        [JsonPropertyName("missingAttributes")]
        public List<string>? MissingAttributes
        {
            get { return _missingAttributes.GetValue(); }
            set { _missingAttributes.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _message.SetAccessPath(path, validateHasBeenSet);
            _created.SetAccessPath(path, validateHasBeenSet);
            _updated.SetAccessPath(path, validateHasBeenSet);
            _skipped.SetAccessPath(path, validateHasBeenSet);
            _missingAttributes.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
