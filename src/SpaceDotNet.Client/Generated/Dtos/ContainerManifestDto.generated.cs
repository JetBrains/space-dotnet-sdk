// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class ContainerManifestDto
         : IPropagatePropertyAccessPath
    {
        public ContainerManifestDto() { }
        
        public ContainerManifestDto(string name, string digest, List<string> tags, long created, int schemaVersion, string mediaType, string manifestType, long totalSize, ContainerImageDto? image = null, ContainerHelmChartDto? chart = null)
        {
            Name = name;
            Digest = digest;
            Tags = tags;
            Created = created;
            SchemaVersion = schemaVersion;
            MediaType = mediaType;
            ManifestType = manifestType;
            TotalSize = totalSize;
            Image = image;
            Chart = chart;
        }
        
        private PropertyValue<string> _name = new PropertyValue<string>(nameof(ContainerManifestDto), nameof(Name));
        
        [Required]
        [JsonPropertyName("name")]
        public string Name
        {
            get { return _name.GetValue(); }
            set { _name.SetValue(value); }
        }
    
        private PropertyValue<string> _digest = new PropertyValue<string>(nameof(ContainerManifestDto), nameof(Digest));
        
        [Required]
        [JsonPropertyName("digest")]
        public string Digest
        {
            get { return _digest.GetValue(); }
            set { _digest.SetValue(value); }
        }
    
        private PropertyValue<List<string>> _tags = new PropertyValue<List<string>>(nameof(ContainerManifestDto), nameof(Tags));
        
        [Required]
        [JsonPropertyName("tags")]
        public List<string> Tags
        {
            get { return _tags.GetValue(); }
            set { _tags.SetValue(value); }
        }
    
        private PropertyValue<long> _created = new PropertyValue<long>(nameof(ContainerManifestDto), nameof(Created));
        
        [Required]
        [JsonPropertyName("created")]
        public long Created
        {
            get { return _created.GetValue(); }
            set { _created.SetValue(value); }
        }
    
        private PropertyValue<int> _schemaVersion = new PropertyValue<int>(nameof(ContainerManifestDto), nameof(SchemaVersion));
        
        [Required]
        [JsonPropertyName("schemaVersion")]
        public int SchemaVersion
        {
            get { return _schemaVersion.GetValue(); }
            set { _schemaVersion.SetValue(value); }
        }
    
        private PropertyValue<string> _mediaType = new PropertyValue<string>(nameof(ContainerManifestDto), nameof(MediaType));
        
        [Required]
        [JsonPropertyName("mediaType")]
        public string MediaType
        {
            get { return _mediaType.GetValue(); }
            set { _mediaType.SetValue(value); }
        }
    
        private PropertyValue<string> _manifestType = new PropertyValue<string>(nameof(ContainerManifestDto), nameof(ManifestType));
        
        [Required]
        [JsonPropertyName("manifestType")]
        public string ManifestType
        {
            get { return _manifestType.GetValue(); }
            set { _manifestType.SetValue(value); }
        }
    
        private PropertyValue<long> _totalSize = new PropertyValue<long>(nameof(ContainerManifestDto), nameof(TotalSize));
        
        [Required]
        [JsonPropertyName("totalSize")]
        public long TotalSize
        {
            get { return _totalSize.GetValue(); }
            set { _totalSize.SetValue(value); }
        }
    
        private PropertyValue<ContainerImageDto?> _image = new PropertyValue<ContainerImageDto?>(nameof(ContainerManifestDto), nameof(Image));
        
        [JsonPropertyName("image")]
        public ContainerImageDto? Image
        {
            get { return _image.GetValue(); }
            set { _image.SetValue(value); }
        }
    
        private PropertyValue<ContainerHelmChartDto?> _chart = new PropertyValue<ContainerHelmChartDto?>(nameof(ContainerManifestDto), nameof(Chart));
        
        [JsonPropertyName("chart")]
        public ContainerHelmChartDto? Chart
        {
            get { return _chart.GetValue(); }
            set { _chart.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _name.SetAccessPath(path, validateHasBeenSet);
            _digest.SetAccessPath(path, validateHasBeenSet);
            _tags.SetAccessPath(path, validateHasBeenSet);
            _created.SetAccessPath(path, validateHasBeenSet);
            _schemaVersion.SetAccessPath(path, validateHasBeenSet);
            _mediaType.SetAccessPath(path, validateHasBeenSet);
            _manifestType.SetAccessPath(path, validateHasBeenSet);
            _totalSize.SetAccessPath(path, validateHasBeenSet);
            _image.SetAccessPath(path, validateHasBeenSet);
            _chart.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
