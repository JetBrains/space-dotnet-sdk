// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class ArticleImportResult
         : IPropagatePropertyAccessPath
    {
        public ArticleImportResult() { }
        
        public ArticleImportResult(string? externalId = null, ArticleRecord? article = null, string? error = null)
        {
            ExternalId = externalId;
            Article = article;
            Error = error;
        }
        
        private PropertyValue<string?> _externalId = new PropertyValue<string?>(nameof(ArticleImportResult), nameof(ExternalId));
        
        [JsonPropertyName("externalId")]
        public string? ExternalId
        {
            get => _externalId.GetValue();
            set => _externalId.SetValue(value);
        }
    
        private PropertyValue<ArticleRecord?> _article = new PropertyValue<ArticleRecord?>(nameof(ArticleImportResult), nameof(Article));
        
        [JsonPropertyName("article")]
        public ArticleRecord? Article
        {
            get => _article.GetValue();
            set => _article.SetValue(value);
        }
    
        private PropertyValue<string?> _error = new PropertyValue<string?>(nameof(ArticleImportResult), nameof(Error));
        
        [JsonPropertyName("error")]
        public string? Error
        {
            get => _error.GetValue();
            set => _error.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _externalId.SetAccessPath(path, validateHasBeenSet);
            _article.SetAccessPath(path, validateHasBeenSet);
            _error.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
