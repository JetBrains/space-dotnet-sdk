// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class KBFolder
         : IPropagatePropertyAccessPath
    {
        public KBFolder() { }
        
        public KBFolder(string id, bool archived, string name, List<KBFolder> subfolders, List<KBArticle> articles, KBBook book, string alias, KBFolder? parent = null, KBArticle? cover = null)
        {
            Id = id;
            IsArchived = archived;
            Name = name;
            Parent = parent;
            Subfolders = subfolders;
            Articles = articles;
            Book = book;
            Cover = cover;
            Alias = alias;
        }
        
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(KBFolder), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get { return _id.GetValue(); }
            set { _id.SetValue(value); }
        }
    
        private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(KBFolder), nameof(IsArchived));
        
        [Required]
        [JsonPropertyName("archived")]
        public bool IsArchived
        {
            get { return _archived.GetValue(); }
            set { _archived.SetValue(value); }
        }
    
        private PropertyValue<string> _name = new PropertyValue<string>(nameof(KBFolder), nameof(Name));
        
        [Required]
        [JsonPropertyName("name")]
        public string Name
        {
            get { return _name.GetValue(); }
            set { _name.SetValue(value); }
        }
    
        private PropertyValue<KBFolder?> _parent = new PropertyValue<KBFolder?>(nameof(KBFolder), nameof(Parent));
        
        [JsonPropertyName("parent")]
        public KBFolder? Parent
        {
            get { return _parent.GetValue(); }
            set { _parent.SetValue(value); }
        }
    
        private PropertyValue<List<KBFolder>> _subfolders = new PropertyValue<List<KBFolder>>(nameof(KBFolder), nameof(Subfolders));
        
        [Required]
        [JsonPropertyName("subfolders")]
        public List<KBFolder> Subfolders
        {
            get { return _subfolders.GetValue(); }
            set { _subfolders.SetValue(value); }
        }
    
        private PropertyValue<List<KBArticle>> _articles = new PropertyValue<List<KBArticle>>(nameof(KBFolder), nameof(Articles));
        
        [Required]
        [JsonPropertyName("articles")]
        public List<KBArticle> Articles
        {
            get { return _articles.GetValue(); }
            set { _articles.SetValue(value); }
        }
    
        private PropertyValue<KBBook> _book = new PropertyValue<KBBook>(nameof(KBFolder), nameof(Book));
        
        [Required]
        [JsonPropertyName("book")]
        public KBBook Book
        {
            get { return _book.GetValue(); }
            set { _book.SetValue(value); }
        }
    
        private PropertyValue<KBArticle?> _cover = new PropertyValue<KBArticle?>(nameof(KBFolder), nameof(Cover));
        
        [JsonPropertyName("cover")]
        public KBArticle? Cover
        {
            get { return _cover.GetValue(); }
            set { _cover.SetValue(value); }
        }
    
        private PropertyValue<string> _alias = new PropertyValue<string>(nameof(KBFolder), nameof(Alias));
        
        [Required]
        [JsonPropertyName("alias")]
        public string Alias
        {
            get { return _alias.GetValue(); }
            set { _alias.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path, validateHasBeenSet);
            _archived.SetAccessPath(path, validateHasBeenSet);
            _name.SetAccessPath(path, validateHasBeenSet);
            _parent.SetAccessPath(path, validateHasBeenSet);
            _subfolders.SetAccessPath(path, validateHasBeenSet);
            _articles.SetAccessPath(path, validateHasBeenSet);
            _book.SetAccessPath(path, validateHasBeenSet);
            _cover.SetAccessPath(path, validateHasBeenSet);
            _alias.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
