// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class EmojiReactionRecordDto
    {
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(EmojiReactionRecordDto), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get { return _id.GetValue(); }
            set { _id.SetValue(value); }
        }
    
        private PropertyValue<string> _itemId = new PropertyValue<string>(nameof(EmojiReactionRecordDto), nameof(ItemId));
        
        [Required]
        [JsonPropertyName("itemId")]
        public string ItemId
        {
            get { return _itemId.GetValue(); }
            set { _itemId.SetValue(value); }
        }
    
        private PropertyValue<string> _emoji = new PropertyValue<string>(nameof(EmojiReactionRecordDto), nameof(Emoji));
        
        [Required]
        [JsonPropertyName("emoji")]
        public string Emoji
        {
            get { return _emoji.GetValue(); }
            set { _emoji.SetValue(value); }
        }
    
        private PropertyValue<int> _count = new PropertyValue<int>(nameof(EmojiReactionRecordDto), nameof(Count));
        
        [Required]
        [JsonPropertyName("count")]
        public int Count
        {
            get { return _count.GetValue(); }
            set { _count.SetValue(value); }
        }
    
        private PropertyValue<bool> _meReacted = new PropertyValue<bool>(nameof(EmojiReactionRecordDto), nameof(MeReacted));
        
        [Required]
        [JsonPropertyName("meReacted")]
        public bool MeReacted
        {
            get { return _meReacted.GetValue(); }
            set { _meReacted.SetValue(value); }
        }
    
        private PropertyValue<long> _order = new PropertyValue<long>(nameof(EmojiReactionRecordDto), nameof(Order));
        
        [Required]
        [JsonPropertyName("order")]
        public long Order
        {
            get { return _order.GetValue(); }
            set { _order.SetValue(value); }
        }
    
    }
    
}
