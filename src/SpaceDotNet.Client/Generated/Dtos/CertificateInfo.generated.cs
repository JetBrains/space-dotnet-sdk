// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class CertificateInfo
         : IPropagatePropertyAccessPath
    {
        public CertificateInfo() { }
        
        public CertificateInfo(string certificateType, int version, string serialNumber, string issuedBy, string issuedTo, SpaceTime validFrom, SpaceTime validTo, string algorithm, Fingerprint fingerprint)
        {
            CertificateType = certificateType;
            Version = version;
            SerialNumber = serialNumber;
            IssuedBy = issuedBy;
            IssuedTo = issuedTo;
            ValidFrom = validFrom;
            ValidTo = validTo;
            Algorithm = algorithm;
            Fingerprint = fingerprint;
        }
        
        private PropertyValue<string> _certificateType = new PropertyValue<string>(nameof(CertificateInfo), nameof(CertificateType));
        
        [Required]
        [JsonPropertyName("certificateType")]
        public string CertificateType
        {
            get { return _certificateType.GetValue(); }
            set { _certificateType.SetValue(value); }
        }
    
        private PropertyValue<int> _version = new PropertyValue<int>(nameof(CertificateInfo), nameof(Version));
        
        [Required]
        [JsonPropertyName("version")]
        public int Version
        {
            get { return _version.GetValue(); }
            set { _version.SetValue(value); }
        }
    
        private PropertyValue<string> _serialNumber = new PropertyValue<string>(nameof(CertificateInfo), nameof(SerialNumber));
        
        [Required]
        [JsonPropertyName("serialNumber")]
        public string SerialNumber
        {
            get { return _serialNumber.GetValue(); }
            set { _serialNumber.SetValue(value); }
        }
    
        private PropertyValue<string> _issuedBy = new PropertyValue<string>(nameof(CertificateInfo), nameof(IssuedBy));
        
        [Required]
        [JsonPropertyName("issuedBy")]
        public string IssuedBy
        {
            get { return _issuedBy.GetValue(); }
            set { _issuedBy.SetValue(value); }
        }
    
        private PropertyValue<string> _issuedTo = new PropertyValue<string>(nameof(CertificateInfo), nameof(IssuedTo));
        
        [Required]
        [JsonPropertyName("issuedTo")]
        public string IssuedTo
        {
            get { return _issuedTo.GetValue(); }
            set { _issuedTo.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime> _validFrom = new PropertyValue<SpaceTime>(nameof(CertificateInfo), nameof(ValidFrom));
        
        [Required]
        [JsonPropertyName("validFrom")]
        public SpaceTime ValidFrom
        {
            get { return _validFrom.GetValue(); }
            set { _validFrom.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime> _validTo = new PropertyValue<SpaceTime>(nameof(CertificateInfo), nameof(ValidTo));
        
        [Required]
        [JsonPropertyName("validTo")]
        public SpaceTime ValidTo
        {
            get { return _validTo.GetValue(); }
            set { _validTo.SetValue(value); }
        }
    
        private PropertyValue<string> _algorithm = new PropertyValue<string>(nameof(CertificateInfo), nameof(Algorithm));
        
        [Required]
        [JsonPropertyName("algorithm")]
        public string Algorithm
        {
            get { return _algorithm.GetValue(); }
            set { _algorithm.SetValue(value); }
        }
    
        private PropertyValue<Fingerprint> _fingerprint = new PropertyValue<Fingerprint>(nameof(CertificateInfo), nameof(Fingerprint));
        
        [Required]
        [JsonPropertyName("fingerprint")]
        public Fingerprint Fingerprint
        {
            get { return _fingerprint.GetValue(); }
            set { _fingerprint.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _certificateType.SetAccessPath(path, validateHasBeenSet);
            _version.SetAccessPath(path, validateHasBeenSet);
            _serialNumber.SetAccessPath(path, validateHasBeenSet);
            _issuedBy.SetAccessPath(path, validateHasBeenSet);
            _issuedTo.SetAccessPath(path, validateHasBeenSet);
            _validFrom.SetAccessPath(path, validateHasBeenSet);
            _validTo.SetAccessPath(path, validateHasBeenSet);
            _algorithm.SetAccessPath(path, validateHasBeenSet);
            _fingerprint.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
