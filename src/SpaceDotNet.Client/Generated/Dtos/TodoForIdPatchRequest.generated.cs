// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public class TodoForIdPatchRequest
         : IPropagatePropertyAccessPath
    {
        public TodoForIdPatchRequest() { }
        
        public TodoForIdPatchRequest(string? text = null, SpaceDate? dueDate = null, bool? open = null)
        {
            Text = text;
            DueDate = dueDate;
            IsOpen = open;
        }
        
        private PropertyValue<string?> _text = new PropertyValue<string?>(nameof(TodoForIdPatchRequest), nameof(Text));
        
        [JsonPropertyName("text")]
        public string? Text
        {
            get { return _text.GetValue(); }
            set { _text.SetValue(value); }
        }
    
        private PropertyValue<SpaceDate?> _dueDate = new PropertyValue<SpaceDate?>(nameof(TodoForIdPatchRequest), nameof(DueDate));
        
        [JsonPropertyName("dueDate")]
        public SpaceDate? DueDate
        {
            get { return _dueDate.GetValue(); }
            set { _dueDate.SetValue(value); }
        }
    
        private PropertyValue<bool?> _open = new PropertyValue<bool?>(nameof(TodoForIdPatchRequest), nameof(IsOpen));
        
        [JsonPropertyName("open")]
        public bool? IsOpen
        {
            get { return _open.GetValue(); }
            set { _open.SetValue(value); }
        }
    
        public virtual void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _text.SetAccessPath(path, validateHasBeenSet);
            _dueDate.SetAccessPath(path, validateHasBeenSet);
            _open.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
