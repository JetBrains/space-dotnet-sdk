// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class ChangeInReviewDto
         : IPropagatePropertyAccessPath
    {
        private PropertyValue<string> _repository = new PropertyValue<string>(nameof(ChangeInReviewDto), nameof(Repository));
        
        [Required]
        [JsonPropertyName("repository")]
        public string Repository
        {
            get { return _repository.GetValue(); }
            set { _repository.SetValue(value); }
        }
    
        private PropertyValue<GitCommitChangeDto> _change = new PropertyValue<GitCommitChangeDto>(nameof(ChangeInReviewDto), nameof(Change));
        
        [Required]
        [JsonPropertyName("change")]
        public GitCommitChangeDto Change
        {
            get { return _change.GetValue(); }
            set { _change.SetValue(value); }
        }
    
        private PropertyValue<bool> _read = new PropertyValue<bool>(nameof(ChangeInReviewDto), nameof(Read));
        
        [Required]
        [JsonPropertyName("read")]
        public bool Read
        {
            get { return _read.GetValue(); }
            set { _read.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _repository.SetAccessPath(path + "->WithRepository()", validateHasBeenSet);
            _change.SetAccessPath(path + "->WithChange()", validateHasBeenSet);
            _read.SetAccessPath(path + "->WithRead()", validateHasBeenSet);
        }
    
    }
    
}
