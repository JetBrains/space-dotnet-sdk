// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class ProjectHitDto
         : EntityHitDto, IClassNameConvertible
    {
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(ProjectHitDto), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id { get { return _id.GetValue(); } set { _id.SetValue(value); } }
    
        private PropertyValue<double> _score = new PropertyValue<double>(nameof(ProjectHitDto), nameof(Score));
        
        [Required]
        [JsonPropertyName("score")]
        public double Score { get { return _score.GetValue(); } set { _score.SetValue(value); } }
    
        private PropertyValue<string> _key = new PropertyValue<string>(nameof(ProjectHitDto), nameof(Key));
        
        [Required]
        [JsonPropertyName("key")]
        public string Key { get { return _key.GetValue(); } set { _key.SetValue(value); } }
    
        private PropertyValue<string> _name = new PropertyValue<string>(nameof(ProjectHitDto), nameof(Name));
        
        [Required]
        [JsonPropertyName("name")]
        public string Name { get { return _name.GetValue(); } set { _name.SetValue(value); } }
    
        private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(ProjectHitDto), nameof(Description));
        
        [JsonPropertyName("description")]
        public string? Description { get { return _description.GetValue(); } set { _description.SetValue(value); } }
    
        private PropertyValue<PRProjectDto> _ref = new PropertyValue<PRProjectDto>(nameof(ProjectHitDto), nameof(Ref));
        
        [Required]
        [JsonPropertyName("ref")]
        public PRProjectDto Ref { get { return _ref.GetValue(); } set { _ref.SetValue(value); } }
    
    }
    
}
