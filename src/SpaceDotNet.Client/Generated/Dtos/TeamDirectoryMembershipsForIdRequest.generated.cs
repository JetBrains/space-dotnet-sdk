// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public class TeamDirectoryMembershipsForIdRequest
         : IPropagatePropertyAccessPath
    {
        public TeamDirectoryMembershipsForIdRequest() { }
        
        public TeamDirectoryMembershipsForIdRequest(bool requiresApproval = false, string? memberId = null, string? teamId = null, string? roleId = null, bool? lead = null, string? managerId = null, SpaceTime? activeSince = null, SpaceTime? activeTill = null, string? previousMembershipId = null, List<CustomFieldValueDto>? customFieldValues = null)
        {
            MemberId = memberId;
            TeamId = teamId;
            RoleId = roleId;
            Lead = lead;
            ManagerId = managerId;
            ActiveSince = activeSince;
            ActiveTill = activeTill;
            PreviousMembershipId = previousMembershipId;
            RequiresApproval = requiresApproval;
            CustomFieldValues = customFieldValues;
        }
        
        private PropertyValue<string?> _memberId = new PropertyValue<string?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(MemberId));
        
        [JsonPropertyName("memberId")]
        public string? MemberId
        {
            get { return _memberId.GetValue(); }
            set { _memberId.SetValue(value); }
        }
    
        private PropertyValue<string?> _teamId = new PropertyValue<string?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(TeamId));
        
        [JsonPropertyName("teamId")]
        public string? TeamId
        {
            get { return _teamId.GetValue(); }
            set { _teamId.SetValue(value); }
        }
    
        private PropertyValue<string?> _roleId = new PropertyValue<string?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(RoleId));
        
        [JsonPropertyName("roleId")]
        public string? RoleId
        {
            get { return _roleId.GetValue(); }
            set { _roleId.SetValue(value); }
        }
    
        private PropertyValue<bool?> _lead = new PropertyValue<bool?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(Lead));
        
        [JsonPropertyName("lead")]
        public bool? Lead
        {
            get { return _lead.GetValue(); }
            set { _lead.SetValue(value); }
        }
    
        private PropertyValue<string?> _managerId = new PropertyValue<string?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(ManagerId));
        
        [JsonPropertyName("managerId")]
        public string? ManagerId
        {
            get { return _managerId.GetValue(); }
            set { _managerId.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime?> _activeSince = new PropertyValue<SpaceTime?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(ActiveSince));
        
        [JsonPropertyName("activeSince")]
        public SpaceTime? ActiveSince
        {
            get { return _activeSince.GetValue(); }
            set { _activeSince.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime?> _activeTill = new PropertyValue<SpaceTime?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(ActiveTill));
        
        [JsonPropertyName("activeTill")]
        public SpaceTime? ActiveTill
        {
            get { return _activeTill.GetValue(); }
            set { _activeTill.SetValue(value); }
        }
    
        private PropertyValue<string?> _previousMembershipId = new PropertyValue<string?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(PreviousMembershipId));
        
        [JsonPropertyName("previousMembershipId")]
        public string? PreviousMembershipId
        {
            get { return _previousMembershipId.GetValue(); }
            set { _previousMembershipId.SetValue(value); }
        }
    
        private PropertyValue<bool> _requiresApproval = new PropertyValue<bool>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(RequiresApproval));
        
        [JsonPropertyName("requiresApproval")]
        public bool RequiresApproval
        {
            get { return _requiresApproval.GetValue(); }
            set { _requiresApproval.SetValue(value); }
        }
    
        private PropertyValue<List<CustomFieldValueDto>?> _customFieldValues = new PropertyValue<List<CustomFieldValueDto>?>(nameof(TeamDirectoryMembershipsForIdRequest), nameof(CustomFieldValues));
        
        [JsonPropertyName("customFieldValues")]
        public List<CustomFieldValueDto>? CustomFieldValues
        {
            get { return _customFieldValues.GetValue(); }
            set { _customFieldValues.SetValue(value); }
        }
    
        public virtual void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _memberId.SetAccessPath(path, validateHasBeenSet);
            _teamId.SetAccessPath(path, validateHasBeenSet);
            _roleId.SetAccessPath(path, validateHasBeenSet);
            _lead.SetAccessPath(path, validateHasBeenSet);
            _managerId.SetAccessPath(path, validateHasBeenSet);
            _activeSince.SetAccessPath(path, validateHasBeenSet);
            _activeTill.SetAccessPath(path, validateHasBeenSet);
            _previousMembershipId.SetAccessPath(path, validateHasBeenSet);
            _requiresApproval.SetAccessPath(path, validateHasBeenSet);
            _customFieldValues.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
