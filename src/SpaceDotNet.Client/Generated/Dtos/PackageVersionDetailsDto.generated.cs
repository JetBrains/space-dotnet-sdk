// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public interface PackageVersionDetailsDto
         : IClassNameConvertible, IPropagatePropertyAccessPath
    {
        public static ContainerPackageVersionDetailsDto Container(PackageTypeDto type, string repository, string name, string version, long created, long downloads, long diskSize, Dictionary<string, string> metadata, int schemaVersion, string mediaType, string manifestType, List<string>? tags = null, long? accessed = null, CPrincipalDto? author = null, List<CPrincipalDto>? authors = null, ContainerImageDto? image = null, ContainerHelmChartDto? chart = null)
            => new ContainerPackageVersionDetailsDto(type: type, repository: repository, name: name, version: version, created: created, downloads: downloads, diskSize: diskSize, metadata: metadata, schemaVersion: schemaVersion, mediaType: mediaType, manifestType: manifestType, tags: null, accessed: null, author: null, authors: null, image: null, chart: null);
        
        public static MavenPackageVersionDetailsDto Maven(PackageTypeDto type, string repository, string name, string version, long created, long downloads, long diskSize, Dictionary<string, string> metadata, List<string> licenses, List<MavenPackageDependencyDto> dependencies, List<MavenPackageFileDto> files, List<string>? tags = null, long? accessed = null, CPrincipalDto? author = null, List<CPrincipalDto>? authors = null, string? packaging = null, string? packageName = null, string? description = null, string? url = null, string? scmUrl = null, List<KotlinPlatformDto>? kotlinPlatforms = null, MavenPackageParentDto? parent = null, string? pathPrefix = null)
            => new MavenPackageVersionDetailsDto(type: type, repository: repository, name: name, version: version, created: created, downloads: downloads, diskSize: diskSize, metadata: metadata, licenses: licenses, dependencies: dependencies, files: files, tags: null, accessed: null, author: null, authors: null, packaging: null, packageName: null, description: null, url: null, scmUrl: null, kotlinPlatforms: null, parent: null, pathPrefix: null);
        
        public static NpmPackageVersionDetailsDto Npm(PackageTypeDto type, string repository, string name, string version, long created, long downloads, long diskSize, Dictionary<string, string> metadata, List<NpmPackageDependencyDto> dependencies, List<string> keywords, List<string>? tags = null, long? accessed = null, CPrincipalDto? author = null, List<CPrincipalDto>? authors = null, string? description = null, string? license = null, string? projectUrl = null, string? repositoryUrl = null, string? repositoryRevision = null, string? readme = null)
            => new NpmPackageVersionDetailsDto(type: type, repository: repository, name: name, version: version, created: created, downloads: downloads, diskSize: diskSize, metadata: metadata, dependencies: dependencies, keywords: keywords, tags: null, accessed: null, author: null, authors: null, description: null, license: null, projectUrl: null, repositoryUrl: null, repositoryRevision: null, readme: null);
        
        public static NuGetPackageVersionDetailsDto NuGet(PackageTypeDto type, string repository, string name, string version, long created, long downloads, long diskSize, Dictionary<string, string> metadata, List<NuGetDependencyGroupDto> dependencies, List<string>? tags = null, long? accessed = null, CPrincipalDto? author = null, List<CPrincipalDto>? authors = null, string? description = null, string? projectUrl = null, string? license = null, string? licenseUrl = null, string? icon = null, string? title = null)
            => new NuGetPackageVersionDetailsDto(type: type, repository: repository, name: name, version: version, created: created, downloads: downloads, diskSize: diskSize, metadata: metadata, dependencies: dependencies, tags: null, accessed: null, author: null, authors: null, description: null, projectUrl: null, license: null, licenseUrl: null, icon: null, title: null);
        
    }
    
}
