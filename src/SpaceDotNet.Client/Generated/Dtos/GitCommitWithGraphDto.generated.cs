// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class GitCommitWithGraphDto
         : IPropagatePropertyAccessPath
    {
        private PropertyValue<string> _repositoryName = new PropertyValue<string>(nameof(GitCommitWithGraphDto), nameof(RepositoryName));
        
        [Required]
        [JsonPropertyName("repositoryName")]
        public string RepositoryName
        {
            get { return _repositoryName.GetValue(); }
            set { _repositoryName.SetValue(value); }
        }
    
        private PropertyValue<GitCommitInfoDto> _commit = new PropertyValue<GitCommitInfoDto>(nameof(GitCommitWithGraphDto), nameof(Commit));
        
        [Required]
        [JsonPropertyName("commit")]
        public GitCommitInfoDto Commit
        {
            get { return _commit.GetValue(); }
            set { _commit.SetValue(value); }
        }
    
        private PropertyValue<List<CodeReviewRecordDto>> _reviews = new PropertyValue<List<CodeReviewRecordDto>>(nameof(GitCommitWithGraphDto), nameof(Reviews));
        
        [Required]
        [JsonPropertyName("reviews")]
        public List<CodeReviewRecordDto> Reviews
        {
            get { return _reviews.GetValue(); }
            set { _reviews.SetValue(value); }
        }
    
        private PropertyValue<GitGraphLayoutLineDto?> _layout = new PropertyValue<GitGraphLayoutLineDto?>(nameof(GitCommitWithGraphDto), nameof(Layout));
        
        [JsonPropertyName("layout")]
        public GitGraphLayoutLineDto? Layout
        {
            get { return _layout.GetValue(); }
            set { _layout.SetValue(value); }
        }
    
        private PropertyValue<bool> _unreachable = new PropertyValue<bool>(nameof(GitCommitWithGraphDto), nameof(Unreachable));
        
        [Required]
        [JsonPropertyName("unreachable")]
        public bool Unreachable
        {
            get { return _unreachable.GetValue(); }
            set { _unreachable.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _repositoryName.SetAccessPath(path, validateHasBeenSet);
            _commit.SetAccessPath(path, validateHasBeenSet);
            _reviews.SetAccessPath(path, validateHasBeenSet);
            _layout.SetAccessPath(path, validateHasBeenSet);
            _unreachable.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
