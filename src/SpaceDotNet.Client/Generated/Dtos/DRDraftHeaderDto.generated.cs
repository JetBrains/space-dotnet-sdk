// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class DRDraftHeaderDto
         : IPropagatePropertyAccessPath
    {
        public DRDraftHeaderDto() { }
        
        public DRDraftHeaderDto(string id, string title, TDMemberProfileDto author, SpaceTime modified, bool shared, SpaceTime? created = null, DraftPublicationDetailsDto? publicationDetails = null, PublicationDetailsDto? publicationDetails2 = null, bool? deleted = null, DocumentFolderRecordDto? folder = null)
        {
            Id = id;
            Title = title;
            Author = author;
            Modified = modified;
            Created = created;
            Shared = shared;
            PublicationDetails = publicationDetails;
            PublicationDetails2 = publicationDetails2;
            Deleted = deleted;
            Folder = folder;
        }
        
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(DRDraftHeaderDto), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get { return _id.GetValue(); }
            set { _id.SetValue(value); }
        }
    
        private PropertyValue<string> _title = new PropertyValue<string>(nameof(DRDraftHeaderDto), nameof(Title));
        
        [Required]
        [JsonPropertyName("title")]
        public string Title
        {
            get { return _title.GetValue(); }
            set { _title.SetValue(value); }
        }
    
        private PropertyValue<TDMemberProfileDto> _author = new PropertyValue<TDMemberProfileDto>(nameof(DRDraftHeaderDto), nameof(Author));
        
        [Required]
        [JsonPropertyName("author")]
        public TDMemberProfileDto Author
        {
            get { return _author.GetValue(); }
            set { _author.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime> _modified = new PropertyValue<SpaceTime>(nameof(DRDraftHeaderDto), nameof(Modified));
        
        [Required]
        [JsonPropertyName("modified")]
        public SpaceTime Modified
        {
            get { return _modified.GetValue(); }
            set { _modified.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime?> _created = new PropertyValue<SpaceTime?>(nameof(DRDraftHeaderDto), nameof(Created));
        
        [JsonPropertyName("created")]
        public SpaceTime? Created
        {
            get { return _created.GetValue(); }
            set { _created.SetValue(value); }
        }
    
        private PropertyValue<bool> _shared = new PropertyValue<bool>(nameof(DRDraftHeaderDto), nameof(Shared));
        
        [Required]
        [JsonPropertyName("shared")]
        public bool Shared
        {
            get { return _shared.GetValue(); }
            set { _shared.SetValue(value); }
        }
    
        private PropertyValue<DraftPublicationDetailsDto?> _publicationDetails = new PropertyValue<DraftPublicationDetailsDto?>(nameof(DRDraftHeaderDto), nameof(PublicationDetails));
        
        [JsonPropertyName("publicationDetails")]
        public DraftPublicationDetailsDto? PublicationDetails
        {
            get { return _publicationDetails.GetValue(); }
            set { _publicationDetails.SetValue(value); }
        }
    
        private PropertyValue<PublicationDetailsDto?> _publicationDetails2 = new PropertyValue<PublicationDetailsDto?>(nameof(DRDraftHeaderDto), nameof(PublicationDetails2));
        
        [JsonPropertyName("publicationDetails2")]
        public PublicationDetailsDto? PublicationDetails2
        {
            get { return _publicationDetails2.GetValue(); }
            set { _publicationDetails2.SetValue(value); }
        }
    
        private PropertyValue<bool?> _deleted = new PropertyValue<bool?>(nameof(DRDraftHeaderDto), nameof(Deleted));
        
        [JsonPropertyName("deleted")]
        public bool? Deleted
        {
            get { return _deleted.GetValue(); }
            set { _deleted.SetValue(value); }
        }
    
        private PropertyValue<DocumentFolderRecordDto?> _folder = new PropertyValue<DocumentFolderRecordDto?>(nameof(DRDraftHeaderDto), nameof(Folder));
        
        [JsonPropertyName("folder")]
        public DocumentFolderRecordDto? Folder
        {
            get { return _folder.GetValue(); }
            set { _folder.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path, validateHasBeenSet);
            _title.SetAccessPath(path, validateHasBeenSet);
            _author.SetAccessPath(path, validateHasBeenSet);
            _modified.SetAccessPath(path, validateHasBeenSet);
            _created.SetAccessPath(path, validateHasBeenSet);
            _shared.SetAccessPath(path, validateHasBeenSet);
            _publicationDetails.SetAccessPath(path, validateHasBeenSet);
            _publicationDetails2.SetAccessPath(path, validateHasBeenSet);
            _deleted.SetAccessPath(path, validateHasBeenSet);
            _folder.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
