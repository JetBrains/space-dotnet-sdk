// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class FeatureFlagDto
         : IPropagatePropertyAccessPath
    {
        public FeatureFlagDto() { }
        
        public FeatureFlagDto(string name, string description, FeatureFlagStatus status, string owner, SpaceDate? introduced = null)
        {
            Name = name;
            Description = description;
            Status = status;
            Owner = owner;
            Introduced = introduced;
        }
        
        private PropertyValue<string> _name = new PropertyValue<string>(nameof(FeatureFlagDto), nameof(Name));
        
        [Required]
        [JsonPropertyName("name")]
        public string Name
        {
            get { return _name.GetValue(); }
            set { _name.SetValue(value); }
        }
    
        private PropertyValue<string> _description = new PropertyValue<string>(nameof(FeatureFlagDto), nameof(Description));
        
        [Required]
        [JsonPropertyName("description")]
        public string Description
        {
            get { return _description.GetValue(); }
            set { _description.SetValue(value); }
        }
    
        private PropertyValue<FeatureFlagStatus> _status = new PropertyValue<FeatureFlagStatus>(nameof(FeatureFlagDto), nameof(Status));
        
        [Required]
        [JsonPropertyName("status")]
        public FeatureFlagStatus Status
        {
            get { return _status.GetValue(); }
            set { _status.SetValue(value); }
        }
    
        private PropertyValue<string> _owner = new PropertyValue<string>(nameof(FeatureFlagDto), nameof(Owner));
        
        [Required]
        [JsonPropertyName("owner")]
        public string Owner
        {
            get { return _owner.GetValue(); }
            set { _owner.SetValue(value); }
        }
    
        private PropertyValue<SpaceDate?> _introduced = new PropertyValue<SpaceDate?>(nameof(FeatureFlagDto), nameof(Introduced));
        
        [JsonPropertyName("introduced")]
        public SpaceDate? Introduced
        {
            get { return _introduced.GetValue(); }
            set { _introduced.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _name.SetAccessPath(path, validateHasBeenSet);
            _description.SetAccessPath(path, validateHasBeenSet);
            _status.SetAccessPath(path, validateHasBeenSet);
            _owner.SetAccessPath(path, validateHasBeenSet);
            _introduced.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
