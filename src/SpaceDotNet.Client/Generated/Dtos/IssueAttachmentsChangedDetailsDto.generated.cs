// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class IssueAttachmentsChangedDetailsDto
         : IssueChangedM2DetailsDto, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        [JsonPropertyName("className")]
        public  string? ClassName => "IssueAttachmentsChangedDetails";
        
        public IssueAttachmentsChangedDetailsDto() { }
        
        public IssueAttachmentsChangedDetailsDto(List<string>? addedNames = null, List<string>? removedNames = null)
        {
            AddedNames = addedNames;
            RemovedNames = removedNames;
        }
        
        private PropertyValue<List<string>?> _addedNames = new PropertyValue<List<string>?>(nameof(IssueAttachmentsChangedDetailsDto), nameof(AddedNames));
        
        [JsonPropertyName("addedNames")]
        public List<string>? AddedNames
        {
            get { return _addedNames.GetValue(); }
            set { _addedNames.SetValue(value); }
        }
    
        private PropertyValue<List<string>?> _removedNames = new PropertyValue<List<string>?>(nameof(IssueAttachmentsChangedDetailsDto), nameof(RemovedNames));
        
        [JsonPropertyName("removedNames")]
        public List<string>? RemovedNames
        {
            get { return _removedNames.GetValue(); }
            set { _removedNames.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _addedNames.SetAccessPath(path, validateHasBeenSet);
            _removedNames.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
