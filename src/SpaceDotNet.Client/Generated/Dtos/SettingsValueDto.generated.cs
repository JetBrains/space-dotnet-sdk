// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class SettingsValueDto
         : IPropagatePropertyAccessPath
    {
        public SettingsValueDto() { }
        
        public SettingsValueDto(bool emailNotificationsEnabled, Weekday firstDayOfWeek, string? themeName = null, string? calendarView = null, TDProfileEmailDto? notificationEmail = null, DraftDocumentType? draftType = null, bool? todoFilters = null)
        {
            EmailNotificationsEnabled = emailNotificationsEnabled;
            FirstDayOfWeek = firstDayOfWeek;
            ThemeName = themeName;
            CalendarView = calendarView;
            NotificationEmail = notificationEmail;
            DraftType = draftType;
            TodoFilters = todoFilters;
        }
        
        private PropertyValue<bool> _emailNotificationsEnabled = new PropertyValue<bool>(nameof(SettingsValueDto), nameof(EmailNotificationsEnabled));
        
        [Required]
        [JsonPropertyName("emailNotificationsEnabled")]
        public bool EmailNotificationsEnabled
        {
            get { return _emailNotificationsEnabled.GetValue(); }
            set { _emailNotificationsEnabled.SetValue(value); }
        }
    
        private PropertyValue<Weekday> _firstDayOfWeek = new PropertyValue<Weekday>(nameof(SettingsValueDto), nameof(FirstDayOfWeek));
        
        [Required]
        [JsonPropertyName("firstDayOfWeek")]
        public Weekday FirstDayOfWeek
        {
            get { return _firstDayOfWeek.GetValue(); }
            set { _firstDayOfWeek.SetValue(value); }
        }
    
        private PropertyValue<string?> _themeName = new PropertyValue<string?>(nameof(SettingsValueDto), nameof(ThemeName));
        
        [JsonPropertyName("themeName")]
        public string? ThemeName
        {
            get { return _themeName.GetValue(); }
            set { _themeName.SetValue(value); }
        }
    
        private PropertyValue<string?> _calendarView = new PropertyValue<string?>(nameof(SettingsValueDto), nameof(CalendarView));
        
        [JsonPropertyName("calendarView")]
        public string? CalendarView
        {
            get { return _calendarView.GetValue(); }
            set { _calendarView.SetValue(value); }
        }
    
        private PropertyValue<TDProfileEmailDto?> _notificationEmail = new PropertyValue<TDProfileEmailDto?>(nameof(SettingsValueDto), nameof(NotificationEmail));
        
        [JsonPropertyName("notificationEmail")]
        public TDProfileEmailDto? NotificationEmail
        {
            get { return _notificationEmail.GetValue(); }
            set { _notificationEmail.SetValue(value); }
        }
    
        private PropertyValue<DraftDocumentType?> _draftType = new PropertyValue<DraftDocumentType?>(nameof(SettingsValueDto), nameof(DraftType));
        
        [JsonPropertyName("draftType")]
        public DraftDocumentType? DraftType
        {
            get { return _draftType.GetValue(); }
            set { _draftType.SetValue(value); }
        }
    
        private PropertyValue<bool?> _todoFilters = new PropertyValue<bool?>(nameof(SettingsValueDto), nameof(TodoFilters));
        
        [JsonPropertyName("todoFilters")]
        public bool? TodoFilters
        {
            get { return _todoFilters.GetValue(); }
            set { _todoFilters.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _emailNotificationsEnabled.SetAccessPath(path, validateHasBeenSet);
            _firstDayOfWeek.SetAccessPath(path, validateHasBeenSet);
            _themeName.SetAccessPath(path, validateHasBeenSet);
            _calendarView.SetAccessPath(path, validateHasBeenSet);
            _notificationEmail.SetAccessPath(path, validateHasBeenSet);
            _draftType.SetAccessPath(path, validateHasBeenSet);
            _todoFilters.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
