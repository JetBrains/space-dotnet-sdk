// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class TodoItemRecord
         : IPropagatePropertyAccessPath
    {
        public TodoItemRecord() { }
        
        public TodoItemRecord(string id, bool archived, SpaceTime created, SpaceTime updated, TodoItemContent content, string _status, SpaceDate? dueDate = null)
        {
            Id = id;
            IsArchived = archived;
            Created = created;
            Updated = updated;
            Content = content;
            Status = _status;
            DueDate = dueDate;
        }
        
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(TodoItemRecord), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get { return _id.GetValue(); }
            set { _id.SetValue(value); }
        }
    
        private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(TodoItemRecord), nameof(IsArchived));
        
        [Required]
        [JsonPropertyName("archived")]
        public bool IsArchived
        {
            get { return _archived.GetValue(); }
            set { _archived.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime> _created = new PropertyValue<SpaceTime>(nameof(TodoItemRecord), nameof(Created));
        
        [Required]
        [JsonPropertyName("created")]
        public SpaceTime Created
        {
            get { return _created.GetValue(); }
            set { _created.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime> _updated = new PropertyValue<SpaceTime>(nameof(TodoItemRecord), nameof(Updated));
        
        [Required]
        [JsonPropertyName("updated")]
        public SpaceTime Updated
        {
            get { return _updated.GetValue(); }
            set { _updated.SetValue(value); }
        }
    
        private PropertyValue<TodoItemContent> _content = new PropertyValue<TodoItemContent>(nameof(TodoItemRecord), nameof(Content));
        
        [Required]
        [JsonPropertyName("content")]
        public TodoItemContent Content
        {
            get { return _content.GetValue(); }
            set { _content.SetValue(value); }
        }
    
        private PropertyValue<string> __status = new PropertyValue<string>(nameof(TodoItemRecord), nameof(Status));
        
        [Required]
        [JsonPropertyName("_status")]
        public string Status
        {
            get { return __status.GetValue(); }
            set { __status.SetValue(value); }
        }
    
        private PropertyValue<SpaceDate?> _dueDate = new PropertyValue<SpaceDate?>(nameof(TodoItemRecord), nameof(DueDate));
        
        [JsonPropertyName("dueDate")]
        public SpaceDate? DueDate
        {
            get { return _dueDate.GetValue(); }
            set { _dueDate.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path, validateHasBeenSet);
            _archived.SetAccessPath(path, validateHasBeenSet);
            _created.SetAccessPath(path, validateHasBeenSet);
            _updated.SetAccessPath(path, validateHasBeenSet);
            _content.SetAccessPath(path, validateHasBeenSet);
            __status.SetAccessPath(path, validateHasBeenSet);
            _dueDate.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
