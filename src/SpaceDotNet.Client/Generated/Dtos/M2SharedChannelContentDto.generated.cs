// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class M2SharedChannelContentDto
         : M2ChannelContactInfoDto, M2ChannelContentInfoDto, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        [JsonPropertyName("className")]
        public  string? ClassName => "M2SharedChannelContent";
        
        public M2SharedChannelContentDto() { }
        
        public M2SharedChannelContentDto(string name, string group, M2Access access, string description, ChannelSpecificDefaultsDto notificationDefaults, int? membersCounter = null, string? iconId = null, List<TDTeamDto>? teams = null, bool? canEdit = null)
        {
            Name = name;
            Group = group;
            Access = access;
            Description = description;
            MembersCounter = membersCounter;
            IconId = iconId;
            NotificationDefaults = notificationDefaults;
            Teams = teams;
            CanEdit = canEdit;
        }
        
        private PropertyValue<string> _name = new PropertyValue<string>(nameof(M2SharedChannelContentDto), nameof(Name));
        
        [Required]
        [JsonPropertyName("name")]
        public string Name
        {
            get { return _name.GetValue(); }
            set { _name.SetValue(value); }
        }
    
        private PropertyValue<string> _group = new PropertyValue<string>(nameof(M2SharedChannelContentDto), nameof(Group));
        
        [Required]
        [JsonPropertyName("group")]
        public string Group
        {
            get { return _group.GetValue(); }
            set { _group.SetValue(value); }
        }
    
        private PropertyValue<M2Access> _access = new PropertyValue<M2Access>(nameof(M2SharedChannelContentDto), nameof(Access));
        
        [Required]
        [JsonPropertyName("access")]
        public M2Access Access
        {
            get { return _access.GetValue(); }
            set { _access.SetValue(value); }
        }
    
        private PropertyValue<string> _description = new PropertyValue<string>(nameof(M2SharedChannelContentDto), nameof(Description));
        
        [Required]
        [JsonPropertyName("description")]
        public string Description
        {
            get { return _description.GetValue(); }
            set { _description.SetValue(value); }
        }
    
        private PropertyValue<int?> _membersCounter = new PropertyValue<int?>(nameof(M2SharedChannelContentDto), nameof(MembersCounter));
        
        [JsonPropertyName("membersCounter")]
        public int? MembersCounter
        {
            get { return _membersCounter.GetValue(); }
            set { _membersCounter.SetValue(value); }
        }
    
        private PropertyValue<string?> _iconId = new PropertyValue<string?>(nameof(M2SharedChannelContentDto), nameof(IconId));
        
        [JsonPropertyName("iconId")]
        public string? IconId
        {
            get { return _iconId.GetValue(); }
            set { _iconId.SetValue(value); }
        }
    
        private PropertyValue<ChannelSpecificDefaultsDto> _notificationDefaults = new PropertyValue<ChannelSpecificDefaultsDto>(nameof(M2SharedChannelContentDto), nameof(NotificationDefaults));
        
        [Required]
        [JsonPropertyName("notificationDefaults")]
        public ChannelSpecificDefaultsDto NotificationDefaults
        {
            get { return _notificationDefaults.GetValue(); }
            set { _notificationDefaults.SetValue(value); }
        }
    
        private PropertyValue<List<TDTeamDto>?> _teams = new PropertyValue<List<TDTeamDto>?>(nameof(M2SharedChannelContentDto), nameof(Teams));
        
        [JsonPropertyName("teams")]
        public List<TDTeamDto>? Teams
        {
            get { return _teams.GetValue(); }
            set { _teams.SetValue(value); }
        }
    
        private PropertyValue<bool?> _canEdit = new PropertyValue<bool?>(nameof(M2SharedChannelContentDto), nameof(CanEdit));
        
        [JsonPropertyName("canEdit")]
        public bool? CanEdit
        {
            get { return _canEdit.GetValue(); }
            set { _canEdit.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _name.SetAccessPath(path, validateHasBeenSet);
            _group.SetAccessPath(path, validateHasBeenSet);
            _access.SetAccessPath(path, validateHasBeenSet);
            _description.SetAccessPath(path, validateHasBeenSet);
            _membersCounter.SetAccessPath(path, validateHasBeenSet);
            _iconId.SetAccessPath(path, validateHasBeenSet);
            _notificationDefaults.SetAccessPath(path, validateHasBeenSet);
            _teams.SetAccessPath(path, validateHasBeenSet);
            _canEdit.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
