// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class ChannelParticipantDto
         : IPropagatePropertyAccessPath
    {
        public ChannelParticipantDto() { }
        
        public ChannelParticipantDto(CPrincipalDto principal, int messageCount, int? pendingMessageCount = null)
        {
            Principal = principal;
            MessageCount = messageCount;
            PendingMessageCount = pendingMessageCount;
        }
        
        private PropertyValue<CPrincipalDto> _principal = new PropertyValue<CPrincipalDto>(nameof(ChannelParticipantDto), nameof(Principal));
        
        [Required]
        [JsonPropertyName("principal")]
        public CPrincipalDto Principal
        {
            get { return _principal.GetValue(); }
            set { _principal.SetValue(value); }
        }
    
        private PropertyValue<int> _messageCount = new PropertyValue<int>(nameof(ChannelParticipantDto), nameof(MessageCount));
        
        [Required]
        [JsonPropertyName("messageCount")]
        public int MessageCount
        {
            get { return _messageCount.GetValue(); }
            set { _messageCount.SetValue(value); }
        }
    
        private PropertyValue<int?> _pendingMessageCount = new PropertyValue<int?>(nameof(ChannelParticipantDto), nameof(PendingMessageCount));
        
        [JsonPropertyName("pendingMessageCount")]
        public int? PendingMessageCount
        {
            get { return _pendingMessageCount.GetValue(); }
            set { _pendingMessageCount.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _principal.SetAccessPath(path, validateHasBeenSet);
            _messageCount.SetAccessPath(path, validateHasBeenSet);
            _pendingMessageCount.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
