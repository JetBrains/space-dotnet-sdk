// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class RightTypeRight
         : IPropagatePropertyAccessPath
    {
        public RightTypeRight() { }
        
        public RightTypeRight(RightType rightType, List<FullRightWithoutType> rights)
        {
            RightType = rightType;
            Rights = rights;
        }
        
        private PropertyValue<RightType> _rightType = new PropertyValue<RightType>(nameof(RightTypeRight), nameof(RightType));
        
        [Required]
        [JsonPropertyName("rightType")]
        public RightType RightType
        {
            get => _rightType.GetValue();
            set => _rightType.SetValue(value);
        }
    
        private PropertyValue<List<FullRightWithoutType>> _rights = new PropertyValue<List<FullRightWithoutType>>(nameof(RightTypeRight), nameof(Rights));
        
        [Required]
        [JsonPropertyName("rights")]
        public List<FullRightWithoutType> Rights
        {
            get => _rights.GetValue();
            set => _rights.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _rightType.SetAccessPath(path, validateHasBeenSet);
            _rights.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
