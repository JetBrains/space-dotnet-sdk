// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class PollRecordDto
         : IPropagatePropertyAccessPath
    {
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(PollRecordDto), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get { return _id.GetValue(); }
            set { _id.SetValue(value); }
        }
    
        private PropertyValue<TDMemberProfileDto> _owner = new PropertyValue<TDMemberProfileDto>(nameof(PollRecordDto), nameof(Owner));
        
        [Required]
        [JsonPropertyName("owner")]
        public TDMemberProfileDto Owner
        {
            get { return _owner.GetValue(); }
            set { _owner.SetValue(value); }
        }
    
        private PropertyValue<string> _question = new PropertyValue<string>(nameof(PollRecordDto), nameof(Question));
        
        [Required]
        [JsonPropertyName("question")]
        public string Question
        {
            get { return _question.GetValue(); }
            set { _question.SetValue(value); }
        }
    
        private PropertyValue<bool> _meVote = new PropertyValue<bool>(nameof(PollRecordDto), nameof(MeVote));
        
        [Required]
        [JsonPropertyName("meVote")]
        public bool MeVote
        {
            get { return _meVote.GetValue(); }
            set { _meVote.SetValue(value); }
        }
    
        private PropertyValue<int> _countPeople = new PropertyValue<int>(nameof(PollRecordDto), nameof(CountPeople));
        
        [Required]
        [JsonPropertyName("countPeople")]
        public int CountPeople
        {
            get { return _countPeople.GetValue(); }
            set { _countPeople.SetValue(value); }
        }
    
        private PropertyValue<bool> _anonymous = new PropertyValue<bool>(nameof(PollRecordDto), nameof(Anonymous));
        
        [Required]
        [JsonPropertyName("anonymous")]
        public bool Anonymous
        {
            get { return _anonymous.GetValue(); }
            set { _anonymous.SetValue(value); }
        }
    
        private PropertyValue<bool> _closed = new PropertyValue<bool>(nameof(PollRecordDto), nameof(Closed));
        
        [Required]
        [JsonPropertyName("closed")]
        public bool Closed
        {
            get { return _closed.GetValue(); }
            set { _closed.SetValue(value); }
        }
    
        private PropertyValue<bool> _extendable = new PropertyValue<bool>(nameof(PollRecordDto), nameof(Extendable));
        
        [Required]
        [JsonPropertyName("extendable")]
        public bool Extendable
        {
            get { return _extendable.GetValue(); }
            set { _extendable.SetValue(value); }
        }
    
        private PropertyValue<bool> _multiChoice = new PropertyValue<bool>(nameof(PollRecordDto), nameof(MultiChoice));
        
        [Required]
        [JsonPropertyName("multiChoice")]
        public bool MultiChoice
        {
            get { return _multiChoice.GetValue(); }
            set { _multiChoice.SetValue(value); }
        }
    
        private PropertyValue<bool> _ended = new PropertyValue<bool>(nameof(PollRecordDto), nameof(Ended));
        
        [Required]
        [JsonPropertyName("ended")]
        public bool Ended
        {
            get { return _ended.GetValue(); }
            set { _ended.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime?> _expirationTime = new PropertyValue<SpaceTime?>(nameof(PollRecordDto), nameof(ExpirationTime));
        
        [JsonPropertyName("expirationTime")]
        public SpaceTime? ExpirationTime
        {
            get { return _expirationTime.GetValue(); }
            set { _expirationTime.SetValue(value); }
        }
    
        private PropertyValue<List<VoteGroupDto>> _votes = new PropertyValue<List<VoteGroupDto>>(nameof(PollRecordDto), nameof(Votes));
        
        [Required]
        [JsonPropertyName("votes")]
        public List<VoteGroupDto> Votes
        {
            get { return _votes.GetValue(); }
            set { _votes.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path + "->WithId()", validateHasBeenSet);
            _owner.SetAccessPath(path + "->WithOwner()", validateHasBeenSet);
            _question.SetAccessPath(path + "->WithQuestion()", validateHasBeenSet);
            _meVote.SetAccessPath(path + "->WithMeVote()", validateHasBeenSet);
            _countPeople.SetAccessPath(path + "->WithCountPeople()", validateHasBeenSet);
            _anonymous.SetAccessPath(path + "->WithAnonymous()", validateHasBeenSet);
            _closed.SetAccessPath(path + "->WithClosed()", validateHasBeenSet);
            _extendable.SetAccessPath(path + "->WithExtendable()", validateHasBeenSet);
            _multiChoice.SetAccessPath(path + "->WithMultiChoice()", validateHasBeenSet);
            _ended.SetAccessPath(path + "->WithEnded()", validateHasBeenSet);
            _expirationTime.SetAccessPath(path + "->WithExpirationTime()", validateHasBeenSet);
            _votes.SetAccessPath(path + "->WithVotes()", validateHasBeenSet);
        }
    
    }
    
}
