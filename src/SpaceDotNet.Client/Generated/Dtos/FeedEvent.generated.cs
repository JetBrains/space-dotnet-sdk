// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public interface FeedEvent
         : M2ItemContentDetails, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        public static CodeDiscussionAddedFeedEvent CodeDiscussionAdded(CodeDiscussionRecord codeDiscussion, CodeReviewRecord codeReview)
            => new CodeDiscussionAddedFeedEvent(codeDiscussion: codeDiscussion, codeReview: codeReview);
        
        public static CodeReviewDiscussionAddedFeedEvent CodeReviewDiscussionAdded(CodeReviewDiscussionRecord discussion)
            => new CodeReviewDiscussionAddedFeedEvent(discussion: discussion);
        
        public static MergeRequestBranchDeletedEvent MergeRequestBranchDeletedEvent(string repository, string branch, MergeRequestBranchType branchType)
            => new MergeRequestBranchDeletedEvent(repository: repository, branch: branch, branchType: branchType);
        
        public static MergeRequestBranchRestoredEvent MergeRequestBranchRestoredEvent(string repository, string branch, MergeRequestBranchType branchType)
            => new MergeRequestBranchRestoredEvent(repository: repository, branch: branch, branchType: branchType);
        
        public static MergeRequestMergedEvent MergeRequestMergedEvent(string repository, string sourceBranch, string targetBranch)
            => new MergeRequestMergedEvent(repository: repository, sourceBranch: sourceBranch, targetBranch: targetBranch);
        
        public static ReviewBranchTrackEvent ReviewBranchTrackEvent(string repository, string branch, bool track)
            => new ReviewBranchTrackEvent(repository: repository, branch: branch, track: track);
        
        public static ReviewCompletionStateChangedEvent ReviewCompletionStateChangedEvent(ReviewerState state)
            => new ReviewCompletionStateChangedEvent(state: state);
        
        public static ReviewRevisionsChangedEvent ReviewRevisionsChangedEvent(List<RepositoryCommitRecord> commits, ReviewRevisionsChangedType changeType, string? projectKey = null, CodeReviewRecord? review = null)
            => new ReviewRevisionsChangedEvent(commits: commits, changeType: changeType, projectKey: null, review: null);
        
        public static ReviewStateChangedEvent ReviewStateChangedEvent(CodeReviewState state, CodeReviewRecord? review = null)
            => new ReviewStateChangedEvent(state: state, review: null);
        
        public static ReviewTitleChangedEvent ReviewTitleChangedEvent(string oldTitle, string newTitle)
            => new ReviewTitleChangedEvent(oldTitle: oldTitle, newTitle: newTitle);
        
        public static ReviewerChangedEvent ReviewerChangedEvent(TDMemberProfile uid, ReviewerChangedType changeType)
            => new ReviewerChangedEvent(uid: uid, changeType: changeType);
        
    }
    
}
