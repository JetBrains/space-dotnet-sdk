// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class CodeDiscussionRecord
         : IPropagatePropertyAccessPath
    {
        public CodeDiscussionRecord() { }
        
        public CodeDiscussionRecord(string id, string projectId, CodeDiscussionAnchor anchor, SpaceTime created, M2ChannelRecord channel, bool resolved, bool archived, CodeDiscussionSnippet? snippet = null, bool? pending = null, CodeReviewRecord? review = null, string? feedItemId = null, List<CodeReviewRecord>? reviews = null)
        {
            Id = id;
            ProjectId = projectId;
            Anchor = anchor;
            Created = created;
            Channel = channel;
            IsResolved = resolved;
            Snippet = snippet;
            IsPending = pending;
            Review = review;
            FeedItemId = feedItemId;
            Reviews = reviews;
            IsArchived = archived;
        }
        
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(CodeDiscussionRecord), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get { return _id.GetValue(); }
            set { _id.SetValue(value); }
        }
    
        private PropertyValue<string> _projectId = new PropertyValue<string>(nameof(CodeDiscussionRecord), nameof(ProjectId));
        
        [Required]
        [JsonPropertyName("projectId")]
        public string ProjectId
        {
            get { return _projectId.GetValue(); }
            set { _projectId.SetValue(value); }
        }
    
        private PropertyValue<CodeDiscussionAnchor> _anchor = new PropertyValue<CodeDiscussionAnchor>(nameof(CodeDiscussionRecord), nameof(Anchor));
        
        [Required]
        [JsonPropertyName("anchor")]
        public CodeDiscussionAnchor Anchor
        {
            get { return _anchor.GetValue(); }
            set { _anchor.SetValue(value); }
        }
    
        private PropertyValue<SpaceTime> _created = new PropertyValue<SpaceTime>(nameof(CodeDiscussionRecord), nameof(Created));
        
        [Required]
        [JsonPropertyName("created")]
        public SpaceTime Created
        {
            get { return _created.GetValue(); }
            set { _created.SetValue(value); }
        }
    
        private PropertyValue<M2ChannelRecord> _channel = new PropertyValue<M2ChannelRecord>(nameof(CodeDiscussionRecord), nameof(Channel));
        
        [Required]
        [JsonPropertyName("channel")]
        public M2ChannelRecord Channel
        {
            get { return _channel.GetValue(); }
            set { _channel.SetValue(value); }
        }
    
        private PropertyValue<bool> _resolved = new PropertyValue<bool>(nameof(CodeDiscussionRecord), nameof(IsResolved));
        
        [Required]
        [JsonPropertyName("resolved")]
        public bool IsResolved
        {
            get { return _resolved.GetValue(); }
            set { _resolved.SetValue(value); }
        }
    
        private PropertyValue<CodeDiscussionSnippet?> _snippet = new PropertyValue<CodeDiscussionSnippet?>(nameof(CodeDiscussionRecord), nameof(Snippet));
        
        [JsonPropertyName("snippet")]
        public CodeDiscussionSnippet? Snippet
        {
            get { return _snippet.GetValue(); }
            set { _snippet.SetValue(value); }
        }
    
        private PropertyValue<bool?> _pending = new PropertyValue<bool?>(nameof(CodeDiscussionRecord), nameof(IsPending));
        
        [JsonPropertyName("pending")]
        public bool? IsPending
        {
            get { return _pending.GetValue(); }
            set { _pending.SetValue(value); }
        }
    
        private PropertyValue<CodeReviewRecord?> _review = new PropertyValue<CodeReviewRecord?>(nameof(CodeDiscussionRecord), nameof(Review));
        
        [JsonPropertyName("review")]
        public CodeReviewRecord? Review
        {
            get { return _review.GetValue(); }
            set { _review.SetValue(value); }
        }
    
        private PropertyValue<string?> _feedItemId = new PropertyValue<string?>(nameof(CodeDiscussionRecord), nameof(FeedItemId));
        
        [JsonPropertyName("feedItemId")]
        public string? FeedItemId
        {
            get { return _feedItemId.GetValue(); }
            set { _feedItemId.SetValue(value); }
        }
    
        private PropertyValue<List<CodeReviewRecord>?> _reviews = new PropertyValue<List<CodeReviewRecord>?>(nameof(CodeDiscussionRecord), nameof(Reviews));
        
        [JsonPropertyName("reviews")]
        public List<CodeReviewRecord>? Reviews
        {
            get { return _reviews.GetValue(); }
            set { _reviews.SetValue(value); }
        }
    
        private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(CodeDiscussionRecord), nameof(IsArchived));
        
        [Required]
        [JsonPropertyName("archived")]
        public bool IsArchived
        {
            get { return _archived.GetValue(); }
            set { _archived.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path, validateHasBeenSet);
            _projectId.SetAccessPath(path, validateHasBeenSet);
            _anchor.SetAccessPath(path, validateHasBeenSet);
            _created.SetAccessPath(path, validateHasBeenSet);
            _channel.SetAccessPath(path, validateHasBeenSet);
            _resolved.SetAccessPath(path, validateHasBeenSet);
            _snippet.SetAccessPath(path, validateHasBeenSet);
            _pending.SetAccessPath(path, validateHasBeenSet);
            _review.SetAccessPath(path, validateHasBeenSet);
            _feedItemId.SetAccessPath(path, validateHasBeenSet);
            _reviews.SetAccessPath(path, validateHasBeenSet);
            _archived.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
