// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class MessageContextDto
         : IPropagatePropertyAccessPath
    {
        public MessageContextDto() { }
        
        public MessageContextDto(string messageId, string channelId, string createdTime, string? messageData = null, ChatMessageDto? body = null, List<AttachmentDto>? attachments = null, string? externalId = null)
        {
            MessageId = messageId;
            ChannelId = channelId;
            MessageData = messageData;
            Body = body;
            Attachments = attachments;
            ExternalId = externalId;
            CreatedTime = createdTime;
        }
        
        private PropertyValue<string> _messageId = new PropertyValue<string>(nameof(MessageContextDto), nameof(MessageId));
        
        [Required]
        [JsonPropertyName("messageId")]
        public string MessageId
        {
            get { return _messageId.GetValue(); }
            set { _messageId.SetValue(value); }
        }
    
        private PropertyValue<string> _channelId = new PropertyValue<string>(nameof(MessageContextDto), nameof(ChannelId));
        
        [Required]
        [JsonPropertyName("channelId")]
        public string ChannelId
        {
            get { return _channelId.GetValue(); }
            set { _channelId.SetValue(value); }
        }
    
        private PropertyValue<string?> _messageData = new PropertyValue<string?>(nameof(MessageContextDto), nameof(MessageData));
        
        [JsonPropertyName("messageData")]
        public string? MessageData
        {
            get { return _messageData.GetValue(); }
            set { _messageData.SetValue(value); }
        }
    
        private PropertyValue<ChatMessageDto?> _body = new PropertyValue<ChatMessageDto?>(nameof(MessageContextDto), nameof(Body));
        
        [JsonPropertyName("body")]
        public ChatMessageDto? Body
        {
            get { return _body.GetValue(); }
            set { _body.SetValue(value); }
        }
    
        private PropertyValue<List<AttachmentDto>?> _attachments = new PropertyValue<List<AttachmentDto>?>(nameof(MessageContextDto), nameof(Attachments));
        
        [JsonPropertyName("attachments")]
        public List<AttachmentDto>? Attachments
        {
            get { return _attachments.GetValue(); }
            set { _attachments.SetValue(value); }
        }
    
        private PropertyValue<string?> _externalId = new PropertyValue<string?>(nameof(MessageContextDto), nameof(ExternalId));
        
        [JsonPropertyName("externalId")]
        public string? ExternalId
        {
            get { return _externalId.GetValue(); }
            set { _externalId.SetValue(value); }
        }
    
        private PropertyValue<string> _createdTime = new PropertyValue<string>(nameof(MessageContextDto), nameof(CreatedTime));
        
        [Required]
        [JsonPropertyName("createdTime")]
        public string CreatedTime
        {
            get { return _createdTime.GetValue(); }
            set { _createdTime.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _messageId.SetAccessPath(path, validateHasBeenSet);
            _channelId.SetAccessPath(path, validateHasBeenSet);
            _messageData.SetAccessPath(path, validateHasBeenSet);
            _body.SetAccessPath(path, validateHasBeenSet);
            _attachments.SetAccessPath(path, validateHasBeenSet);
            _externalId.SetAccessPath(path, validateHasBeenSet);
            _createdTime.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
