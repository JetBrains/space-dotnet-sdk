// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class MessageHitDetails
         : EntityHitDetails, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        [JsonPropertyName("className")]
        public  string? ClassName => "MessageHitDetails";
        
        public MessageHitDetails() { }
        
        public MessageHitDetails(ChannelItemRecord @ref, M2ChannelRecord channel, M2ChatReader readerRef, bool threadStarter, string? thread = null)
        {
            Ref = @ref;
            Channel = channel;
            ReaderRef = readerRef;
            IsThreadStarter = threadStarter;
            Thread = thread;
        }
        
        private PropertyValue<ChannelItemRecord> _ref = new PropertyValue<ChannelItemRecord>(nameof(MessageHitDetails), nameof(Ref));
        
        [Required]
        [JsonPropertyName("ref")]
        public ChannelItemRecord Ref
        {
            get => _ref.GetValue();
            set => _ref.SetValue(value);
        }
    
        private PropertyValue<M2ChannelRecord> _channel = new PropertyValue<M2ChannelRecord>(nameof(MessageHitDetails), nameof(Channel));
        
        [Required]
        [JsonPropertyName("channel")]
        public M2ChannelRecord Channel
        {
            get => _channel.GetValue();
            set => _channel.SetValue(value);
        }
    
        private PropertyValue<M2ChatReader> _readerRef = new PropertyValue<M2ChatReader>(nameof(MessageHitDetails), nameof(ReaderRef));
        
        [Required]
        [JsonPropertyName("readerRef")]
        public M2ChatReader ReaderRef
        {
            get => _readerRef.GetValue();
            set => _readerRef.SetValue(value);
        }
    
        private PropertyValue<bool> _threadStarter = new PropertyValue<bool>(nameof(MessageHitDetails), nameof(IsThreadStarter));
        
        [Required]
        [JsonPropertyName("threadStarter")]
        public bool IsThreadStarter
        {
            get => _threadStarter.GetValue();
            set => _threadStarter.SetValue(value);
        }
    
        private PropertyValue<string?> _thread = new PropertyValue<string?>(nameof(MessageHitDetails), nameof(Thread));
        
        [JsonPropertyName("thread")]
        public string? Thread
        {
            get => _thread.GetValue();
            set => _thread.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _ref.SetAccessPath(path, validateHasBeenSet);
            _channel.SetAccessPath(path, validateHasBeenSet);
            _readerRef.SetAccessPath(path, validateHasBeenSet);
            _threadStarter.SetAccessPath(path, validateHasBeenSet);
            _thread.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
