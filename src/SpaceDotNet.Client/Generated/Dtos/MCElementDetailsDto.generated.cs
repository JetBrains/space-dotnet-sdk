// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public interface MCElementDetailsDto
         : IClassNameConvertible, IPropagatePropertyAccessPath
    {
        public static MCButtonDto MCButton(string text, string style, MCActionDto action, bool? disabled = null)
            => new MCButtonDto(text: text, style: style, action: action, disabled: null);
        
        public static MCDividerDto MCDivider()
            => new MCDividerDto();
        
        public static MCFieldsDto MCFields(List<Pair<MCElementDto, MCElementDto>> fields)
            => new MCFieldsDto(fields: fields);
        
        public static MCGroupDto MCGroup(List<MCElementDto> elements)
            => new MCGroupDto(elements: elements);
        
        public static MCIconDto MCIcon(string name, string style)
            => new MCIconDto(name: name, style: style);
        
        public static MCImageDto MCImage(string src)
            => new MCImageDto(src: src);
        
        public static MCOutlineDto MCOutline(MCElementDto? icon = null, MCTextDto? text = null)
            => new MCOutlineDto(icon: null, text: null);
        
        public static MCSectionDto MCSection(List<MCElementDto> elements, MCTextDto? header = null, MCTextDto? footer = null)
            => new MCSectionDto(elements: elements, header: null, footer: null);
        
        public static MCTagDto MCTag(string text, string style)
            => new MCTagDto(text: text, style: style);
        
        public static MCTextDto MCText(string content, bool markdown, MCElementDto? accessory = null)
            => new MCTextDto(content: content, markdown: markdown, accessory: null);
        
    }
    
}
