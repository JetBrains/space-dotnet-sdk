// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class PermissionSnapshotEntry
         : IPropagatePropertyAccessPath
    {
        public PermissionSnapshotEntry() { }
        
        public PermissionSnapshotEntry(int principalIndex, int rightIndex, bool allTargets, List<int> targetIndices)
        {
            PrincipalIndex = principalIndex;
            RightIndex = rightIndex;
            IsAllTargets = allTargets;
            TargetIndices = targetIndices;
        }
        
        private PropertyValue<int> _principalIndex = new PropertyValue<int>(nameof(PermissionSnapshotEntry), nameof(PrincipalIndex));
        
        [Required]
        [JsonPropertyName("principalIndex")]
        public int PrincipalIndex
        {
            get { return _principalIndex.GetValue(); }
            set { _principalIndex.SetValue(value); }
        }
    
        private PropertyValue<int> _rightIndex = new PropertyValue<int>(nameof(PermissionSnapshotEntry), nameof(RightIndex));
        
        [Required]
        [JsonPropertyName("rightIndex")]
        public int RightIndex
        {
            get { return _rightIndex.GetValue(); }
            set { _rightIndex.SetValue(value); }
        }
    
        private PropertyValue<bool> _allTargets = new PropertyValue<bool>(nameof(PermissionSnapshotEntry), nameof(IsAllTargets));
        
        [Required]
        [JsonPropertyName("allTargets")]
        public bool IsAllTargets
        {
            get { return _allTargets.GetValue(); }
            set { _allTargets.SetValue(value); }
        }
    
        private PropertyValue<List<int>> _targetIndices = new PropertyValue<List<int>>(nameof(PermissionSnapshotEntry), nameof(TargetIndices));
        
        [Required]
        [JsonPropertyName("targetIndices")]
        public List<int> TargetIndices
        {
            get { return _targetIndices.GetValue(); }
            set { _targetIndices.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _principalIndex.SetAccessPath(path, validateHasBeenSet);
            _rightIndex.SetAccessPath(path, validateHasBeenSet);
            _allTargets.SetAccessPath(path, validateHasBeenSet);
            _targetIndices.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
