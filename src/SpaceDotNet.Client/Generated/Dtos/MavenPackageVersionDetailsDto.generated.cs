// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public sealed class MavenPackageVersionDetailsDto
         : PackageVersionDetailsDto, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        [JsonPropertyName("className")]
        public  string? ClassName => "MavenPackageVersionDetails";
        
        public MavenPackageVersionDetailsDto() { }
        
        public MavenPackageVersionDetailsDto(PackageTypeDto type, string repository, string name, string version, long created, long downloads, long diskSize, Dictionary<string, string> metadata, List<string> licenses, List<MavenPackageDependencyDto> dependencies, List<MavenPackageFileDto> files, List<string>? tags = null, long? accessed = null, CPrincipalDto? author = null, List<CPrincipalDto>? authors = null, string? packaging = null, string? packageName = null, string? description = null, string? url = null, string? scmUrl = null, List<KotlinPlatformDto>? kotlinPlatforms = null, MavenPackageParentDto? parent = null, string? pathPrefix = null)
        {
            Type = type;
            Repository = repository;
            Name = name;
            Version = version;
            Tags = tags;
            Created = created;
            Accessed = accessed;
            Downloads = downloads;
            DiskSize = diskSize;
            Author = author;
            Authors = authors;
            Metadata = metadata;
            Packaging = packaging;
            PackageName = packageName;
            Description = description;
            Url = url;
            Licenses = licenses;
            ScmUrl = scmUrl;
            Dependencies = dependencies;
            KotlinPlatforms = kotlinPlatforms;
            Parent = parent;
            PathPrefix = pathPrefix;
            Files = files;
        }
        
        private PropertyValue<PackageTypeDto> _type = new PropertyValue<PackageTypeDto>(nameof(MavenPackageVersionDetailsDto), nameof(Type));
        
        [Required]
        [JsonPropertyName("type")]
        public PackageTypeDto Type
        {
            get { return _type.GetValue(); }
            set { _type.SetValue(value); }
        }
    
        private PropertyValue<string> _repository = new PropertyValue<string>(nameof(MavenPackageVersionDetailsDto), nameof(Repository));
        
        [Required]
        [JsonPropertyName("repository")]
        public string Repository
        {
            get { return _repository.GetValue(); }
            set { _repository.SetValue(value); }
        }
    
        private PropertyValue<string> _name = new PropertyValue<string>(nameof(MavenPackageVersionDetailsDto), nameof(Name));
        
        [Required]
        [JsonPropertyName("name")]
        public string Name
        {
            get { return _name.GetValue(); }
            set { _name.SetValue(value); }
        }
    
        private PropertyValue<string> _version = new PropertyValue<string>(nameof(MavenPackageVersionDetailsDto), nameof(Version));
        
        [Required]
        [JsonPropertyName("version")]
        public string Version
        {
            get { return _version.GetValue(); }
            set { _version.SetValue(value); }
        }
    
        private PropertyValue<List<string>?> _tags = new PropertyValue<List<string>?>(nameof(MavenPackageVersionDetailsDto), nameof(Tags));
        
        [JsonPropertyName("tags")]
        public List<string>? Tags
        {
            get { return _tags.GetValue(); }
            set { _tags.SetValue(value); }
        }
    
        private PropertyValue<long> _created = new PropertyValue<long>(nameof(MavenPackageVersionDetailsDto), nameof(Created));
        
        [Required]
        [JsonPropertyName("created")]
        public long Created
        {
            get { return _created.GetValue(); }
            set { _created.SetValue(value); }
        }
    
        private PropertyValue<long?> _accessed = new PropertyValue<long?>(nameof(MavenPackageVersionDetailsDto), nameof(Accessed));
        
        [JsonPropertyName("accessed")]
        public long? Accessed
        {
            get { return _accessed.GetValue(); }
            set { _accessed.SetValue(value); }
        }
    
        private PropertyValue<long> _downloads = new PropertyValue<long>(nameof(MavenPackageVersionDetailsDto), nameof(Downloads));
        
        [Required]
        [JsonPropertyName("downloads")]
        public long Downloads
        {
            get { return _downloads.GetValue(); }
            set { _downloads.SetValue(value); }
        }
    
        private PropertyValue<long> _diskSize = new PropertyValue<long>(nameof(MavenPackageVersionDetailsDto), nameof(DiskSize));
        
        [Required]
        [JsonPropertyName("diskSize")]
        public long DiskSize
        {
            get { return _diskSize.GetValue(); }
            set { _diskSize.SetValue(value); }
        }
    
        private PropertyValue<CPrincipalDto?> _author = new PropertyValue<CPrincipalDto?>(nameof(MavenPackageVersionDetailsDto), nameof(Author));
        
        [JsonPropertyName("author")]
        public CPrincipalDto? Author
        {
            get { return _author.GetValue(); }
            set { _author.SetValue(value); }
        }
    
        private PropertyValue<List<CPrincipalDto>?> _authors = new PropertyValue<List<CPrincipalDto>?>(nameof(MavenPackageVersionDetailsDto), nameof(Authors));
        
        [JsonPropertyName("authors")]
        public List<CPrincipalDto>? Authors
        {
            get { return _authors.GetValue(); }
            set { _authors.SetValue(value); }
        }
    
        private PropertyValue<Dictionary<string, string>> _metadata = new PropertyValue<Dictionary<string, string>>(nameof(MavenPackageVersionDetailsDto), nameof(Metadata));
        
        [Required]
        [JsonPropertyName("metadata")]
        public Dictionary<string, string> Metadata
        {
            get { return _metadata.GetValue(); }
            set { _metadata.SetValue(value); }
        }
    
        private PropertyValue<string?> _packaging = new PropertyValue<string?>(nameof(MavenPackageVersionDetailsDto), nameof(Packaging));
        
        [JsonPropertyName("packaging")]
        public string? Packaging
        {
            get { return _packaging.GetValue(); }
            set { _packaging.SetValue(value); }
        }
    
        private PropertyValue<string?> _packageName = new PropertyValue<string?>(nameof(MavenPackageVersionDetailsDto), nameof(PackageName));
        
        [JsonPropertyName("packageName")]
        public string? PackageName
        {
            get { return _packageName.GetValue(); }
            set { _packageName.SetValue(value); }
        }
    
        private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(MavenPackageVersionDetailsDto), nameof(Description));
        
        [JsonPropertyName("description")]
        public string? Description
        {
            get { return _description.GetValue(); }
            set { _description.SetValue(value); }
        }
    
        private PropertyValue<string?> _url = new PropertyValue<string?>(nameof(MavenPackageVersionDetailsDto), nameof(Url));
        
        [JsonPropertyName("url")]
        public string? Url
        {
            get { return _url.GetValue(); }
            set { _url.SetValue(value); }
        }
    
        private PropertyValue<List<string>> _licenses = new PropertyValue<List<string>>(nameof(MavenPackageVersionDetailsDto), nameof(Licenses));
        
        [Required]
        [JsonPropertyName("licenses")]
        public List<string> Licenses
        {
            get { return _licenses.GetValue(); }
            set { _licenses.SetValue(value); }
        }
    
        private PropertyValue<string?> _scmUrl = new PropertyValue<string?>(nameof(MavenPackageVersionDetailsDto), nameof(ScmUrl));
        
        [JsonPropertyName("scmUrl")]
        public string? ScmUrl
        {
            get { return _scmUrl.GetValue(); }
            set { _scmUrl.SetValue(value); }
        }
    
        private PropertyValue<List<MavenPackageDependencyDto>> _dependencies = new PropertyValue<List<MavenPackageDependencyDto>>(nameof(MavenPackageVersionDetailsDto), nameof(Dependencies));
        
        [Required]
        [JsonPropertyName("dependencies")]
        public List<MavenPackageDependencyDto> Dependencies
        {
            get { return _dependencies.GetValue(); }
            set { _dependencies.SetValue(value); }
        }
    
        private PropertyValue<List<KotlinPlatformDto>?> _kotlinPlatforms = new PropertyValue<List<KotlinPlatformDto>?>(nameof(MavenPackageVersionDetailsDto), nameof(KotlinPlatforms));
        
        [JsonPropertyName("kotlinPlatforms")]
        public List<KotlinPlatformDto>? KotlinPlatforms
        {
            get { return _kotlinPlatforms.GetValue(); }
            set { _kotlinPlatforms.SetValue(value); }
        }
    
        private PropertyValue<MavenPackageParentDto?> _parent = new PropertyValue<MavenPackageParentDto?>(nameof(MavenPackageVersionDetailsDto), nameof(Parent));
        
        [JsonPropertyName("parent")]
        public MavenPackageParentDto? Parent
        {
            get { return _parent.GetValue(); }
            set { _parent.SetValue(value); }
        }
    
        private PropertyValue<string?> _pathPrefix = new PropertyValue<string?>(nameof(MavenPackageVersionDetailsDto), nameof(PathPrefix));
        
        [JsonPropertyName("pathPrefix")]
        public string? PathPrefix
        {
            get { return _pathPrefix.GetValue(); }
            set { _pathPrefix.SetValue(value); }
        }
    
        private PropertyValue<List<MavenPackageFileDto>> _files = new PropertyValue<List<MavenPackageFileDto>>(nameof(MavenPackageVersionDetailsDto), nameof(Files));
        
        [Required]
        [JsonPropertyName("files")]
        public List<MavenPackageFileDto> Files
        {
            get { return _files.GetValue(); }
            set { _files.SetValue(value); }
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _type.SetAccessPath(path, validateHasBeenSet);
            _repository.SetAccessPath(path, validateHasBeenSet);
            _name.SetAccessPath(path, validateHasBeenSet);
            _version.SetAccessPath(path, validateHasBeenSet);
            _tags.SetAccessPath(path, validateHasBeenSet);
            _created.SetAccessPath(path, validateHasBeenSet);
            _accessed.SetAccessPath(path, validateHasBeenSet);
            _downloads.SetAccessPath(path, validateHasBeenSet);
            _diskSize.SetAccessPath(path, validateHasBeenSet);
            _author.SetAccessPath(path, validateHasBeenSet);
            _authors.SetAccessPath(path, validateHasBeenSet);
            _metadata.SetAccessPath(path, validateHasBeenSet);
            _packaging.SetAccessPath(path, validateHasBeenSet);
            _packageName.SetAccessPath(path, validateHasBeenSet);
            _description.SetAccessPath(path, validateHasBeenSet);
            _url.SetAccessPath(path, validateHasBeenSet);
            _licenses.SetAccessPath(path, validateHasBeenSet);
            _scmUrl.SetAccessPath(path, validateHasBeenSet);
            _dependencies.SetAccessPath(path, validateHasBeenSet);
            _kotlinPlatforms.SetAccessPath(path, validateHasBeenSet);
            _parent.SetAccessPath(path, validateHasBeenSet);
            _pathPrefix.SetAccessPath(path, validateHasBeenSet);
            _files.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
