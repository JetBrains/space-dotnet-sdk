// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Json.Serialization.Polymorphism;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    [JsonConverter(typeof(EnumerationConverter))]
    public sealed class MenuId : Enumeration
    {
        private MenuId(string value) : base(value) { }
        
        public static class Channel
        {
            /// <summary>
            /// The "Channel.Attachment" menu.
            ///
            /// Expected webhook payload: <see cref="ChannelAttachmentMenuActionContext">.
            /// </summary>
            public static readonly MenuId Attachment = new MenuId("Channel.Attachment");
            
            /// <summary>
            /// The "Channel.Message" menu.
            ///
            /// Expected webhook payload: <see cref="ChannelMessageMenuActionContext">.
            /// </summary>
            public static readonly MenuId Message = new MenuId("Channel.Message");
            
        }
        
        public static class Global
        {
            /// <summary>
            /// The "Global.Add" menu.
            ///
            /// Expected webhook payload: <see cref="BaseMenuActionContext">.
            /// </summary>
            public static readonly MenuId Add = new MenuId("Global.Add");
            
            /// <summary>
            /// The "Global.Profile" menu.
            ///
            /// Expected webhook payload: <see cref="BaseMenuActionContext">.
            /// </summary>
            public static readonly MenuId Profile = new MenuId("Global.Profile");
            
            /// <summary>
            /// The "Global.Sections" menu.
            ///
            /// Expected webhook payload: <see cref="BaseMenuActionContext">.
            /// </summary>
            public static readonly MenuId Sections = new MenuId("Global.Sections");
            
        }
        
        public static class Internal
        {
            /// <summary>
            /// The "Internal.Samples" menu.
            ///
            /// Expected webhook payload: <see cref="BaseMenuActionContext">.
            /// </summary>
            public static readonly MenuId Samples = new MenuId("Internal.Samples");
            
            /// <summary>
            /// The "Internal.Settings" menu.
            ///
            /// Expected webhook payload: <see cref="BaseMenuActionContext">.
            /// </summary>
            public static readonly MenuId Settings = new MenuId("Internal.Settings");
            
            /// <summary>
            /// The "Internal.Tools" menu.
            ///
            /// Expected webhook payload: <see cref="BaseMenuActionContext">.
            /// </summary>
            public static readonly MenuId Tools = new MenuId("Internal.Tools");
            
            /// <summary>
            /// The "Internal.Ui" menu.
            /// </summary>
            public static readonly MenuId Ui = new MenuId("Internal.Ui");
            
        }
        
        public static class Project
        {
            /// <summary>
            /// The "Project.Settings" menu.
            ///
            /// Expected webhook payload: <see cref="ProjectMenuActionContext">.
            /// </summary>
            public static readonly MenuId Settings = new MenuId("Project.Settings");
            
            /// <summary>
            /// The "Project.Tools" menu.
            ///
            /// Expected webhook payload: <see cref="ProjectMenuActionContext">.
            /// </summary>
            public static readonly MenuId Tools = new MenuId("Project.Tools");
            
        }
        
        /// <summary>
        /// The "Repository" menu.
        /// </summary>
        public static readonly MenuId Repository = new MenuId("Repository");
        
        public static class Sidebar
        {
            public static class Administration
            {
                /// <summary>
                /// The "Sidebar.Administration.Access" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Access = new MenuId("Sidebar.Administration.Access");
                
                /// <summary>
                /// The "Sidebar.Administration.Customization" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Customization = new MenuId("Sidebar.Administration.Customization");
                
                /// <summary>
                /// The "Sidebar.Administration.Debug" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Debug = new MenuId("Sidebar.Administration.Debug");
                
                /// <summary>
                /// The "Sidebar.Administration.Extensions" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Extensions = new MenuId("Sidebar.Administration.Extensions");
                
                /// <summary>
                /// The "Sidebar.Administration.Integrations" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Integrations = new MenuId("Sidebar.Administration.Integrations");
                
                /// <summary>
                /// The "Sidebar.Administration.Organization" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Organization = new MenuId("Sidebar.Administration.Organization");
                
                /// <summary>
                /// The "Sidebar.Administration.Support" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Support = new MenuId("Sidebar.Administration.Support");
                
            }
            
            /// <summary>
            /// The "Sidebar.Location" menu.
            ///
            /// Expected webhook payload: <see cref="LocationMenuActionContext">.
            /// </summary>
            public static readonly MenuId Location = new MenuId("Sidebar.Location");
            
            public static class Profile
            {
                public static class Personal
                {
                    /// <summary>
                    /// The "Sidebar.Profile.Personal.Sidebar" menu.
                    /// </summary>
                    public static readonly MenuId Root = new MenuId("Sidebar.Profile.Personal.Sidebar");
                    
                    /// <summary>
                    /// The "Sidebar.Profile.Personal.My" menu.
                    ///
                    /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                    /// </summary>
                    public static readonly MenuId My = new MenuId("Sidebar.Profile.Personal.My");
                    
                }
                
                /// <summary>
                /// The "Sidebar.Profile.Schedule" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Schedule = new MenuId("Sidebar.Profile.Schedule");
                
                /// <summary>
                /// The "Sidebar.Profile.Security" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Security = new MenuId("Sidebar.Profile.Security");
                
                /// <summary>
                /// The "Sidebar.Profile.Workspace" menu.
                ///
                /// Expected webhook payload: <see cref="BaseMenuActionContext">.
                /// </summary>
                public static readonly MenuId Workspace = new MenuId("Sidebar.Profile.Workspace");
                
            }
            
            /// <summary>
            /// The "Sidebar.Team" menu.
            ///
            /// Expected webhook payload: <see cref="TeamMenuActionContext">.
            /// </summary>
            public static readonly MenuId Team = new MenuId("Sidebar.Team");
            
        }
        
    }
    
}
