// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using SpaceDotNet.Client.Internal;
using SpaceDotNet.Common;
using SpaceDotNet.Common.Json.Serialization;
using SpaceDotNet.Common.Types;

namespace SpaceDotNet.Client
{
    public partial class PermissionClient
    {
        private readonly Connection _connection;
        
        public PermissionClient(Connection connection)
        {
            _connection = connection;
        }
        
        public async Task<bool> CheckPermissionAsync(PrincipalInDto principal, string uniqueRightCode, PermissionTargetDto target)
            => await _connection.RequestResourceAsync<PermissionsCheckPermissionRequest, bool>("POST", $"api/http/permissions/check-permission", 
                new PermissionsCheckPermissionRequest { 
                    Principal = principal,
                    UniqueRightCode = uniqueRightCode,
                    Target = target,
                }
        );
    
        public async Task<DTORightsWithHierarchyDto> GetAllPermissionsAsync(Func<Partial<DTORightsWithHierarchyDto>, Partial<DTORightsWithHierarchyDto>>? partial = null)
            => await _connection.RequestResourceAsync<DTORightsWithHierarchyDto>("GET", $"api/http/permissions?$fields={(partial != null ? partial(new Partial<DTORightsWithHierarchyDto>()) : Partial<DTORightsWithHierarchyDto>.Default())}");
    
        public SnapshotClient Snapshots => new SnapshotClient(_connection);
        
        public partial class SnapshotClient
        {
            private readonly Connection _connection;
            
            public SnapshotClient(Connection connection)
            {
                _connection = connection;
            }
            
            public async Task<PermissionSnapshotDTODto> CreateSnapshotAsync(Func<Partial<PermissionSnapshotDTODto>, Partial<PermissionSnapshotDTODto>>? partial = null)
                => await _connection.RequestResourceAsync<PermissionSnapshotDTODto>("POST", $"api/http/permissions/snapshots?$fields={(partial != null ? partial(new Partial<PermissionSnapshotDTODto>()) : Partial<PermissionSnapshotDTODto>.Default())}");
        
            public async Task<List<PermissionSnapshotDTODto>> GetAllSnapshotsAsync(Func<Partial<PermissionSnapshotDTODto>, Partial<PermissionSnapshotDTODto>>? partial = null)
                => await _connection.RequestResourceAsync<List<PermissionSnapshotDTODto>>("GET", $"api/http/permissions/snapshots?$fields={(partial != null ? partial(new Partial<PermissionSnapshotDTODto>()) : Partial<PermissionSnapshotDTODto>.Default())}");
        
            public async Task<PermissionSnapshotContentDTODto> GetSnapshotAsync(string id, string? principal = null, string? right = null, Func<Partial<PermissionSnapshotContentDTODto>, Partial<PermissionSnapshotContentDTODto>>? partial = null)
                => await _connection.RequestResourceAsync<PermissionSnapshotContentDTODto>("GET", $"api/http/permissions/snapshots/{id}?principal={principal?.ToString() ?? "null"}&right={right?.ToString() ?? "null"}&$fields={(partial != null ? partial(new Partial<PermissionSnapshotContentDTODto>()) : Partial<PermissionSnapshotContentDTODto>.Default())}");
        
            public async Task DeleteSnapshotAsync(string id)
                => await _connection.RequestResourceAsync("DELETE", $"api/http/permissions/snapshots/{id}");
        
            public ComparisonClient Comparison => new ComparisonClient(_connection);
            
            public partial class ComparisonClient
            {
                private readonly Connection _connection;
                
                public ComparisonClient(Connection connection)
                {
                    _connection = connection;
                }
                
                public async Task<PermissionComparisonContentDTODto> GetComparisonAsync(string id1, string id2, Func<Partial<PermissionComparisonContentDTODto>, Partial<PermissionComparisonContentDTODto>>? partial = null)
                    => await _connection.RequestResourceAsync<PermissionComparisonContentDTODto>("GET", $"api/http/permissions/snapshots/comparison?id1={id1.ToString()}&id2={id2.ToString()}&$fields={(partial != null ? partial(new Partial<PermissionComparisonContentDTODto>()) : Partial<PermissionComparisonContentDTODto>.Default())}");
            
            }
        
            public PrincipalClient Principals => new PrincipalClient(_connection);
            
            public partial class PrincipalClient
            {
                private readonly Connection _connection;
                
                public PrincipalClient(Connection connection)
                {
                    _connection = connection;
                }
                
                public async Task<List<PermissionSnapshotPrincipalDTODto>> GetPrincipalAsync(string id, Func<Partial<PermissionSnapshotPrincipalDTODto>, Partial<PermissionSnapshotPrincipalDTODto>>? partial = null)
                    => await _connection.RequestResourceAsync<List<PermissionSnapshotPrincipalDTODto>>("GET", $"api/http/permissions/snapshots/{id}/principals?$fields={(partial != null ? partial(new Partial<PermissionSnapshotPrincipalDTODto>()) : Partial<PermissionSnapshotPrincipalDTODto>.Default())}");
            
            }
        
            public RightClient Rights => new RightClient(_connection);
            
            public partial class RightClient
            {
                private readonly Connection _connection;
                
                public RightClient(Connection connection)
                {
                    _connection = connection;
                }
                
                public async Task<List<PermissionSnapshotRightDTODto>> GetRightAsync(string id, Func<Partial<PermissionSnapshotRightDTODto>, Partial<PermissionSnapshotRightDTODto>>? partial = null)
                    => await _connection.RequestResourceAsync<List<PermissionSnapshotRightDTODto>>("GET", $"api/http/permissions/snapshots/{id}/rights?$fields={(partial != null ? partial(new Partial<PermissionSnapshotRightDTODto>()) : Partial<PermissionSnapshotRightDTODto>.Default())}");
            
            }
        
        }
    
    }
    
}
