// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client.GitMergedFilePartialBuilder;

public static class GitMergedFilePartialExtensions
{
    public static Partial<GitMergedFile> WithName(this Partial<GitMergedFile> it)
        => it.AddFieldName("name");
    
    public static Partial<GitMergedFile> WithOldName(this Partial<GitMergedFile> it)
        => it.AddFieldName("oldName");
    
    public static Partial<GitMergedFile> WithBaseId(this Partial<GitMergedFile> it)
        => it.AddFieldName("baseId");
    
    public static Partial<GitMergedFile> WithSourceId(this Partial<GitMergedFile> it)
        => it.AddFieldName("sourceId");
    
    public static Partial<GitMergedFile> WithTargetId(this Partial<GitMergedFile> it)
        => it.AddFieldName("targetId");
    
    public static Partial<GitMergedFile> WithDiffSize(this Partial<GitMergedFile> it)
        => it.AddFieldName("diffSize");
    
    public static Partial<GitMergedFile> WithDiffSize(this Partial<GitMergedFile> it, Func<Partial<GitDiffSize>, Partial<GitDiffSize>> partialBuilder)
        => it.AddFieldName("diffSize", partialBuilder(new Partial<GitDiffSize>(it)));
    
    public static Partial<GitMergedFile> WithEntryType(this Partial<GitMergedFile> it)
        => it.AddFieldName("entryType");
    
    public static Partial<GitMergedFile> WithEntryType(this Partial<GitMergedFile> it, Func<Partial<GitEntryType>, Partial<GitEntryType>> partialBuilder)
        => it.AddFieldName("entryType", partialBuilder(new Partial<GitEntryType>(it)));
    
    public static Partial<GitMergedFile> WithIsConflicting(this Partial<GitMergedFile> it)
        => it.AddFieldName("conflicting");
    
    public static Partial<GitMergedFile> WithProperties(this Partial<GitMergedFile> it)
        => it.AddFieldName("properties");
    
    public static Partial<GitMergedFile> WithProperties(this Partial<GitMergedFile> it, Func<Partial<GitFileProperties>, Partial<GitFileProperties>> partialBuilder)
        => it.AddFieldName("properties", partialBuilder(new Partial<GitFileProperties>(it)));
    
    public static Partial<GitMergedFile> WithOldProperties(this Partial<GitMergedFile> it)
        => it.AddFieldName("oldProperties");
    
    public static Partial<GitMergedFile> WithOldProperties(this Partial<GitMergedFile> it, Func<Partial<GitFileProperties>, Partial<GitFileProperties>> partialBuilder)
        => it.AddFieldName("oldProperties", partialBuilder(new Partial<GitFileProperties>(it)));
    
}

