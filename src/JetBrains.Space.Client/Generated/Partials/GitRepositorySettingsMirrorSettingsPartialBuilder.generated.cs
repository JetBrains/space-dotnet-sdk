// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client.GitRepositorySettingsMirrorSettingsPartialBuilder;

public static class GitRepositorySettingsMirrorSettingsPartialExtensions
{
    public static Partial<GitRepositorySettingsMirrorSettings> WithUrl(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("url");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithRefsSpec(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("refsSpec");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithIsDetachHEAD(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("detachHEAD");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithUsername(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("username");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithPassword(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("password");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithIsUseKeyAuth(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("useKeyAuth");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithKey(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("key");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithKeyPassphrase(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("keyPassphrase");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithKeyError(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("keyError");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithPublicKey(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("publicKey");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithKeyFingerprints(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("keyFingerprints");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithIsFetchPeriodically(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("fetchPeriodically");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithIsFetchBeforeGitCall(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("fetchBeforeGitCall");
    
    public static Partial<GitRepositorySettingsMirrorSettings> WithIsAllowAtomicPush(this Partial<GitRepositorySettingsMirrorSettings> it)
        => it.AddFieldName("allowAtomicPush");
    
}

