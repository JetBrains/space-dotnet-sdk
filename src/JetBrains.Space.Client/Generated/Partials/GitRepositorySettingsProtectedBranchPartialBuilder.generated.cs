// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client.GitRepositorySettingsProtectedBranchPartialBuilder;

public static class GitRepositorySettingsProtectedBranchPartialExtensions
{
    public static Partial<GitRepositorySettingsProtectedBranch> WithPattern(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("pattern");
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithIsRegex(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("regex");
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithAllowCreate(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("allowCreate");
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithAllowPush(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("allowPush");
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithAllowDelete(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("allowDelete");
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithAllowForcePush(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("allowForcePush");
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithQualityGate(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("qualityGate");
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithQualityGate(this Partial<GitRepositorySettingsProtectedBranch> it, Func<Partial<GitRepositorySettingsQualityGate>, Partial<GitRepositorySettingsQualityGate>> partialBuilder)
        => it.AddFieldName("qualityGate", partialBuilder(new Partial<GitRepositorySettingsQualityGate>(it)));
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithSafeMerge(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("safeMerge");
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithSafeMerge(this Partial<GitRepositorySettingsProtectedBranch> it, Func<Partial<GitRepositorySettingsSafeMerge>, Partial<GitRepositorySettingsSafeMerge>> partialBuilder)
        => it.AddFieldName("safeMerge", partialBuilder(new Partial<GitRepositorySettingsSafeMerge>(it)));
    
    public static Partial<GitRepositorySettingsProtectedBranch> WithIsLinearHistory(this Partial<GitRepositorySettingsProtectedBranch> it)
        => it.AddFieldName("linearHistory");
    
}

