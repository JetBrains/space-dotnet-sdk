// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client.FileContentPartialBuilder;

public static class FileContentPartialExtensions
{
    public static Partial<FileContent> WithType(this Partial<FileContent> it)
        => it.AddFieldName("type");
    
    public static Partial<FileContent> WithType(this Partial<FileContent> it, Func<Partial<GitFileType>, Partial<GitFileType>> partialBuilder)
        => it.AddFieldName("type", partialBuilder(new Partial<GitFileType>(it)));
    
    public static Partial<FileContent> WithLineEnding(this Partial<FileContent> it)
        => it.AddFieldName("lineEnding");
    
    public static Partial<FileContent> WithLineEnding(this Partial<FileContent> it, Func<Partial<LineEnding>, Partial<LineEnding>> partialBuilder)
        => it.AddFieldName("lineEnding", partialBuilder(new Partial<LineEnding>(it)));
    
    public static Partial<FileContent> WithBom(this Partial<FileContent> it)
        => it.AddFieldName("bom");
    
    public static Partial<FileContent> WithBom(this Partial<FileContent> it, Func<Partial<FileBOM>, Partial<FileBOM>> partialBuilder)
        => it.AddFieldName("bom", partialBuilder(new Partial<FileBOM>(it)));
    
    public static Partial<FileContent> WithLines(this Partial<FileContent> it)
        => it.AddFieldName("lines");
    
    public static Partial<FileContent> WithLines(this Partial<FileContent> it, Func<Partial<CodeLine>, Partial<CodeLine>> partialBuilder)
        => it.AddFieldName("lines", partialBuilder(new Partial<CodeLine>(it)));
    
    public static Partial<FileContent> WithWidgets(this Partial<FileContent> it)
        => it.AddFieldName("widgets");
    
    public static Partial<FileContent> WithWidgets(this Partial<FileContent> it, Func<Partial<CodeMDWidget>, Partial<CodeMDWidget>> partialBuilder)
        => it.AddFieldName("widgets", partialBuilder(new Partial<CodeMDWidget>(it)));
    
    public static Partial<FileContent> WithFolds(this Partial<FileContent> it)
        => it.AddFieldName("folds");
    
    public static Partial<FileContent> WithFolds(this Partial<FileContent> it, Func<Partial<CodeFold>, Partial<CodeFold>> partialBuilder)
        => it.AddFieldName("folds", partialBuilder(new Partial<CodeFold>(it)));
    
    public static Partial<FileContent> WithScopes(this Partial<FileContent> it)
        => it.AddFieldName("scopes");
    
    public static Partial<FileContent> WithScopes(this Partial<FileContent> it, Func<Partial<CodeScopeRange>, Partial<CodeScopeRange>> partialBuilder)
        => it.AddFieldName("scopes", partialBuilder(new Partial<CodeScopeRange>(it)));
    
}

