// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Client.Internal;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public partial class SlackImportClient : ISpaceClient
    {
        private readonly Connection _connection;
        
        public SlackImportClient(Connection connection)
        {
            _connection = connection;
        }
        
        public async Task ResetAccessTokenAsync(CancellationToken cancellationToken = default)
            => await _connection.RequestResourceAsync("POST", $"api/http/slack-import/reset-token", cancellationToken);
    
        public async Task SetAccessTokenAsync(string token, CancellationToken cancellationToken = default)
            => await _connection.RequestResourceAsync("POST", $"api/http/slack-import/set-token", 
                new SlackImportSetTokenPostRequest { 
                    Token = token,
                }
        , cancellationToken);
    
        /// <summary>
        /// Redirect URI for Space Slack App authentication method
        /// </summary>
        public async Task SlackOauthRedirectEndpointAsync(string code, string? state = null, CancellationToken cancellationToken = default)
            => await _connection.RequestResourceAsync("GET", $"api/http/slack-import/oauth?code={code.ToString()}&state={state?.ToString() ?? "null"}", cancellationToken);
    
    }
    
}
