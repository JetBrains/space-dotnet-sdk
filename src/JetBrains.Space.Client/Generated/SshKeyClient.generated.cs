// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public partial class SshKeyClient : ISpaceClient
    {
        private readonly Connection _connection;
        
        public SshKeyClient(Connection connection)
        {
            _connection = connection;
        }
        
        /// <summary>
        /// List SSH public keys associated with profile
        /// </summary>
        public async Task<List<SshKeyData>> GetAllSshKeyAsync(ProfileIdentifier profile, Func<Partial<SshKeyData>, Partial<SshKeyData>>? partial = null, CancellationToken cancellationToken = default)
        {
            var queryParameters = new NameValueCollection();
            queryParameters.Append("$fields", (partial != null ? partial(new Partial<SshKeyData>()) : Partial<SshKeyData>.Default()).ToString());
            
            return await _connection.RequestResourceAsync<List<SshKeyData>>("GET", $"api/http/ssh-key/{profile}{queryParameters.ToQueryString()}", cancellationToken);
        }
        
    
    }
    
}
