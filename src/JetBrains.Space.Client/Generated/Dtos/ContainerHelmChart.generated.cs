// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ContainerHelmChart
     : IPropagatePropertyAccessPath
{
    public ContainerHelmChart() { }
    
    public ContainerHelmChart(List<ContainerHelmChartDependency> dependencies, string? name = null, string? description = null, List<string>? tags = null, string? projectUrl = null, string? sourceUrl = null, string? version = null, string? apiVersion = null, string? appVersion = null, string? type = null)
    {
        Name = name;
        Description = description;
        Tags = tags;
        ProjectUrl = projectUrl;
        SourceUrl = sourceUrl;
        Version = version;
        ApiVersion = apiVersion;
        AppVersion = appVersion;
        Dependencies = dependencies;
        Type = type;
    }
    
    private PropertyValue<string?> _name = new PropertyValue<string?>(nameof(ContainerHelmChart), nameof(Name), "name");
    
    [JsonPropertyName("name")]
    public string? Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(ContainerHelmChart), nameof(Description), "description");
    
    [JsonPropertyName("description")]
    public string? Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<List<string>?> _tags = new PropertyValue<List<string>?>(nameof(ContainerHelmChart), nameof(Tags), "tags");
    
    [JsonPropertyName("tags")]
    public List<string>? Tags
    {
        get => _tags.GetValue(InlineErrors);
        set => _tags.SetValue(value);
    }

    private PropertyValue<string?> _projectUrl = new PropertyValue<string?>(nameof(ContainerHelmChart), nameof(ProjectUrl), "projectUrl");
    
    [JsonPropertyName("projectUrl")]
    public string? ProjectUrl
    {
        get => _projectUrl.GetValue(InlineErrors);
        set => _projectUrl.SetValue(value);
    }

    private PropertyValue<string?> _sourceUrl = new PropertyValue<string?>(nameof(ContainerHelmChart), nameof(SourceUrl), "sourceUrl");
    
    [JsonPropertyName("sourceUrl")]
    public string? SourceUrl
    {
        get => _sourceUrl.GetValue(InlineErrors);
        set => _sourceUrl.SetValue(value);
    }

    private PropertyValue<string?> _version = new PropertyValue<string?>(nameof(ContainerHelmChart), nameof(Version), "version");
    
    [JsonPropertyName("version")]
    public string? Version
    {
        get => _version.GetValue(InlineErrors);
        set => _version.SetValue(value);
    }

    private PropertyValue<string?> _apiVersion = new PropertyValue<string?>(nameof(ContainerHelmChart), nameof(ApiVersion), "apiVersion");
    
    [JsonPropertyName("apiVersion")]
    public string? ApiVersion
    {
        get => _apiVersion.GetValue(InlineErrors);
        set => _apiVersion.SetValue(value);
    }

    private PropertyValue<string?> _appVersion = new PropertyValue<string?>(nameof(ContainerHelmChart), nameof(AppVersion), "appVersion");
    
    [JsonPropertyName("appVersion")]
    public string? AppVersion
    {
        get => _appVersion.GetValue(InlineErrors);
        set => _appVersion.SetValue(value);
    }

    private PropertyValue<List<ContainerHelmChartDependency>> _dependencies = new PropertyValue<List<ContainerHelmChartDependency>>(nameof(ContainerHelmChart), nameof(Dependencies), "dependencies", new List<ContainerHelmChartDependency>());
    
    [Required]
    [JsonPropertyName("dependencies")]
    public List<ContainerHelmChartDependency> Dependencies
    {
        get => _dependencies.GetValue(InlineErrors);
        set => _dependencies.SetValue(value);
    }

    private PropertyValue<string?> _type = new PropertyValue<string?>(nameof(ContainerHelmChart), nameof(Type), "type");
    
    [JsonPropertyName("type")]
    public string? Type
    {
        get => _type.GetValue(InlineErrors);
        set => _type.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _tags.SetAccessPath(parentChainPath, validateHasBeenSet);
        _projectUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _sourceUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _version.SetAccessPath(parentChainPath, validateHasBeenSet);
        _apiVersion.SetAccessPath(parentChainPath, validateHasBeenSet);
        _appVersion.SetAccessPath(parentChainPath, validateHasBeenSet);
        _dependencies.SetAccessPath(parentChainPath, validateHasBeenSet);
        _type.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

