// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class AllChannelsListEntry
     : IPropagatePropertyAccessPath
{
    public AllChannelsListEntry() { }
    
    public AllChannelsListEntry(string channelId, string name, string description, M2Access access, DateTime created, int subscribers, bool subscribed, bool archived, string? icon = null)
    {
        ChannelId = channelId;
        Name = name;
        Description = description;
        Access = access;
        Icon = icon;
        Created = created;
        Subscribers = subscribers;
        IsSubscribed = subscribed;
        IsArchived = archived;
    }
    
    private PropertyValue<string> _channelId = new PropertyValue<string>(nameof(AllChannelsListEntry), nameof(ChannelId), "channelId");
    
    [Required]
    [JsonPropertyName("channelId")]
    public string ChannelId
    {
        get => _channelId.GetValue(InlineErrors);
        set => _channelId.SetValue(value);
    }

    private PropertyValue<string> _name = new PropertyValue<string>(nameof(AllChannelsListEntry), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string> _description = new PropertyValue<string>(nameof(AllChannelsListEntry), nameof(Description), "description");
    
    [Required]
    [JsonPropertyName("description")]
    public string Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<M2Access> _access = new PropertyValue<M2Access>(nameof(AllChannelsListEntry), nameof(Access), "access");
    
    [Required]
    [JsonPropertyName("access")]
    public M2Access Access
    {
        get => _access.GetValue(InlineErrors);
        set => _access.SetValue(value);
    }

    private PropertyValue<string?> _icon = new PropertyValue<string?>(nameof(AllChannelsListEntry), nameof(Icon), "icon");
    
    [JsonPropertyName("icon")]
    public string? Icon
    {
        get => _icon.GetValue(InlineErrors);
        set => _icon.SetValue(value);
    }

    private PropertyValue<DateTime> _created = new PropertyValue<DateTime>(nameof(AllChannelsListEntry), nameof(Created), "created");
    
    [Required]
    [JsonPropertyName("created")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime Created
    {
        get => _created.GetValue(InlineErrors);
        set => _created.SetValue(value);
    }

    private PropertyValue<int> _subscribers = new PropertyValue<int>(nameof(AllChannelsListEntry), nameof(Subscribers), "subscribers");
    
    [Required]
    [JsonPropertyName("subscribers")]
    public int Subscribers
    {
        get => _subscribers.GetValue(InlineErrors);
        set => _subscribers.SetValue(value);
    }

    private PropertyValue<bool> _subscribed = new PropertyValue<bool>(nameof(AllChannelsListEntry), nameof(IsSubscribed), "subscribed");
    
    [Required]
    [JsonPropertyName("subscribed")]
    public bool IsSubscribed
    {
        get => _subscribed.GetValue(InlineErrors);
        set => _subscribed.SetValue(value);
    }

    private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(AllChannelsListEntry), nameof(IsArchived), "archived");
    
    [Required]
    [JsonPropertyName("archived")]
    public bool IsArchived
    {
        get => _archived.GetValue(InlineErrors);
        set => _archived.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _channelId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _access.SetAccessPath(parentChainPath, validateHasBeenSet);
        _icon.SetAccessPath(parentChainPath, validateHasBeenSet);
        _created.SetAccessPath(parentChainPath, validateHasBeenSet);
        _subscribers.SetAccessPath(parentChainPath, validateHasBeenSet);
        _subscribed.SetAccessPath(parentChainPath, validateHasBeenSet);
        _archived.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

