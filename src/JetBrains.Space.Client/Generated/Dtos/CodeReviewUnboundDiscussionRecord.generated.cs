// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CodeReviewUnboundDiscussionRecord
     : IPropagatePropertyAccessPath
{
    public CodeReviewUnboundDiscussionRecord() { }
    
    public CodeReviewUnboundDiscussionRecord(string id, CodeReviewRecord review, ChannelItemRecord item, bool pending, bool archived, bool? resolved = null)
    {
        Id = id;
        Review = review;
        Item = item;
        IsResolved = resolved;
        IsPending = pending;
        IsArchived = archived;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(CodeReviewUnboundDiscussionRecord), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<CodeReviewRecord> _review = new PropertyValue<CodeReviewRecord>(nameof(CodeReviewUnboundDiscussionRecord), nameof(Review), "review");
    
    [Required]
    [JsonPropertyName("review")]
    public CodeReviewRecord Review
    {
        get => _review.GetValue(InlineErrors);
        set => _review.SetValue(value);
    }

    private PropertyValue<ChannelItemRecord> _item = new PropertyValue<ChannelItemRecord>(nameof(CodeReviewUnboundDiscussionRecord), nameof(Item), "item");
    
    [Required]
    [JsonPropertyName("item")]
    public ChannelItemRecord Item
    {
        get => _item.GetValue(InlineErrors);
        set => _item.SetValue(value);
    }

    private PropertyValue<bool?> _resolved = new PropertyValue<bool?>(nameof(CodeReviewUnboundDiscussionRecord), nameof(IsResolved), "resolved");
    
    [JsonPropertyName("resolved")]
    public bool? IsResolved
    {
        get => _resolved.GetValue(InlineErrors);
        set => _resolved.SetValue(value);
    }

    private PropertyValue<bool> _pending = new PropertyValue<bool>(nameof(CodeReviewUnboundDiscussionRecord), nameof(IsPending), "pending");
    
    [Required]
    [JsonPropertyName("pending")]
    public bool IsPending
    {
        get => _pending.GetValue(InlineErrors);
        set => _pending.SetValue(value);
    }

    private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(CodeReviewUnboundDiscussionRecord), nameof(IsArchived), "archived");
    
    [Required]
    [JsonPropertyName("archived")]
    public bool IsArchived
    {
        get => _archived.GetValue(InlineErrors);
        set => _archived.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _review.SetAccessPath(parentChainPath, validateHasBeenSet);
        _item.SetAccessPath(parentChainPath, validateHasBeenSet);
        _resolved.SetAccessPath(parentChainPath, validateHasBeenSet);
        _pending.SetAccessPath(parentChainPath, validateHasBeenSet);
        _archived.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

