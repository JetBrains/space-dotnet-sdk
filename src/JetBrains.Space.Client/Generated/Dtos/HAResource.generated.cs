// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class HAResource
     : IPropagatePropertyAccessPath
{
    public HAResource() { }
    
    public HAResource(string id, HAPath path, string displaySingular, string displayPlural, List<HAEndpoint> endpoints, List<HAResource> nestedResources, HAResource? parentResource = null)
    {
        Id = id;
        Path = path;
        DisplaySingular = displaySingular;
        DisplayPlural = displayPlural;
        ParentResource = parentResource;
        Endpoints = endpoints;
        NestedResources = nestedResources;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(HAResource), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<HAPath> _path = new PropertyValue<HAPath>(nameof(HAResource), nameof(Path), "path");
    
    [Required]
    [JsonPropertyName("path")]
    public HAPath Path
    {
        get => _path.GetValue(InlineErrors);
        set => _path.SetValue(value);
    }

    private PropertyValue<string> _displaySingular = new PropertyValue<string>(nameof(HAResource), nameof(DisplaySingular), "displaySingular");
    
    [Required]
    [JsonPropertyName("displaySingular")]
    public string DisplaySingular
    {
        get => _displaySingular.GetValue(InlineErrors);
        set => _displaySingular.SetValue(value);
    }

    private PropertyValue<string> _displayPlural = new PropertyValue<string>(nameof(HAResource), nameof(DisplayPlural), "displayPlural");
    
    [Required]
    [JsonPropertyName("displayPlural")]
    public string DisplayPlural
    {
        get => _displayPlural.GetValue(InlineErrors);
        set => _displayPlural.SetValue(value);
    }

    private PropertyValue<HAResource?> _parentResource = new PropertyValue<HAResource?>(nameof(HAResource), nameof(ParentResource), "parentResource");
    
    [JsonPropertyName("parentResource")]
    public HAResource? ParentResource
    {
        get => _parentResource.GetValue(InlineErrors);
        set => _parentResource.SetValue(value);
    }

    private PropertyValue<List<HAEndpoint>> _endpoints = new PropertyValue<List<HAEndpoint>>(nameof(HAResource), nameof(Endpoints), "endpoints", new List<HAEndpoint>());
    
    [Required]
    [JsonPropertyName("endpoints")]
    public List<HAEndpoint> Endpoints
    {
        get => _endpoints.GetValue(InlineErrors);
        set => _endpoints.SetValue(value);
    }

    private PropertyValue<List<HAResource>> _nestedResources = new PropertyValue<List<HAResource>>(nameof(HAResource), nameof(NestedResources), "nestedResources", new List<HAResource>());
    
    [Required]
    [JsonPropertyName("nestedResources")]
    public List<HAResource> NestedResources
    {
        get => _nestedResources.GetValue(InlineErrors);
        set => _nestedResources.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _path.SetAccessPath(parentChainPath, validateHasBeenSet);
        _displaySingular.SetAccessPath(parentChainPath, validateHasBeenSet);
        _displayPlural.SetAccessPath(parentChainPath, validateHasBeenSet);
        _parentResource.SetAccessPath(parentChainPath, validateHasBeenSet);
        _endpoints.SetAccessPath(parentChainPath, validateHasBeenSet);
        _nestedResources.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

