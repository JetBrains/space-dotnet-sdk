// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class Invitation
     : IPropagatePropertyAccessPath
{
    public Invitation() { }
    
    public Invitation(string id, DateTime expiresAt, string inviteeEmail, bool inviteeEmailBlocked, CPrincipal inviter, string? inviteeEmailBlockedReason = null, string? inviteeFirstName = null, string? inviteeLastName = null, TDMemberProfile? invitee = null, TDTeam? team = null, TDRole? role = null, PRProject? project = null, ProjectTeamRole? projectRole = null, bool? revoked = null)
    {
        Id = id;
        ExpiresAt = expiresAt;
        InviteeEmail = inviteeEmail;
        IsInviteeEmailBlocked = inviteeEmailBlocked;
        InviteeEmailBlockedReason = inviteeEmailBlockedReason;
        InviteeFirstName = inviteeFirstName;
        InviteeLastName = inviteeLastName;
        Invitee = invitee;
        Inviter = inviter;
        Team = team;
        Role = role;
        Project = project;
        ProjectRole = projectRole;
        IsRevoked = revoked;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(Invitation), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<DateTime> _expiresAt = new PropertyValue<DateTime>(nameof(Invitation), nameof(ExpiresAt), "expiresAt");
    
    [Required]
    [JsonPropertyName("expiresAt")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime ExpiresAt
    {
        get => _expiresAt.GetValue(InlineErrors);
        set => _expiresAt.SetValue(value);
    }

    private PropertyValue<string> _inviteeEmail = new PropertyValue<string>(nameof(Invitation), nameof(InviteeEmail), "inviteeEmail");
    
    [Required]
    [JsonPropertyName("inviteeEmail")]
    public string InviteeEmail
    {
        get => _inviteeEmail.GetValue(InlineErrors);
        set => _inviteeEmail.SetValue(value);
    }

    private PropertyValue<bool> _inviteeEmailBlocked = new PropertyValue<bool>(nameof(Invitation), nameof(IsInviteeEmailBlocked), "inviteeEmailBlocked");
    
    [Required]
    [JsonPropertyName("inviteeEmailBlocked")]
    public bool IsInviteeEmailBlocked
    {
        get => _inviteeEmailBlocked.GetValue(InlineErrors);
        set => _inviteeEmailBlocked.SetValue(value);
    }

    private PropertyValue<string?> _inviteeEmailBlockedReason = new PropertyValue<string?>(nameof(Invitation), nameof(InviteeEmailBlockedReason), "inviteeEmailBlockedReason");
    
    [JsonPropertyName("inviteeEmailBlockedReason")]
    public string? InviteeEmailBlockedReason
    {
        get => _inviteeEmailBlockedReason.GetValue(InlineErrors);
        set => _inviteeEmailBlockedReason.SetValue(value);
    }

    private PropertyValue<string?> _inviteeFirstName = new PropertyValue<string?>(nameof(Invitation), nameof(InviteeFirstName), "inviteeFirstName");
    
    [JsonPropertyName("inviteeFirstName")]
    public string? InviteeFirstName
    {
        get => _inviteeFirstName.GetValue(InlineErrors);
        set => _inviteeFirstName.SetValue(value);
    }

    private PropertyValue<string?> _inviteeLastName = new PropertyValue<string?>(nameof(Invitation), nameof(InviteeLastName), "inviteeLastName");
    
    [JsonPropertyName("inviteeLastName")]
    public string? InviteeLastName
    {
        get => _inviteeLastName.GetValue(InlineErrors);
        set => _inviteeLastName.SetValue(value);
    }

    private PropertyValue<TDMemberProfile?> _invitee = new PropertyValue<TDMemberProfile?>(nameof(Invitation), nameof(Invitee), "invitee");
    
    [JsonPropertyName("invitee")]
    public TDMemberProfile? Invitee
    {
        get => _invitee.GetValue(InlineErrors);
        set => _invitee.SetValue(value);
    }

    private PropertyValue<CPrincipal> _inviter = new PropertyValue<CPrincipal>(nameof(Invitation), nameof(Inviter), "inviter");
    
    [Required]
    [JsonPropertyName("inviter")]
    public CPrincipal Inviter
    {
        get => _inviter.GetValue(InlineErrors);
        set => _inviter.SetValue(value);
    }

    private PropertyValue<TDTeam?> _team = new PropertyValue<TDTeam?>(nameof(Invitation), nameof(Team), "team");
    
    [JsonPropertyName("team")]
    public TDTeam? Team
    {
        get => _team.GetValue(InlineErrors);
        set => _team.SetValue(value);
    }

    private PropertyValue<TDRole?> _role = new PropertyValue<TDRole?>(nameof(Invitation), nameof(Role), "role");
    
    [JsonPropertyName("role")]
    public TDRole? Role
    {
        get => _role.GetValue(InlineErrors);
        set => _role.SetValue(value);
    }

    private PropertyValue<PRProject?> _project = new PropertyValue<PRProject?>(nameof(Invitation), nameof(Project), "project");
    
    [JsonPropertyName("project")]
    public PRProject? Project
    {
        get => _project.GetValue(InlineErrors);
        set => _project.SetValue(value);
    }

    private PropertyValue<ProjectTeamRole?> _projectRole = new PropertyValue<ProjectTeamRole?>(nameof(Invitation), nameof(ProjectRole), "projectRole");
    
    [JsonPropertyName("projectRole")]
    public ProjectTeamRole? ProjectRole
    {
        get => _projectRole.GetValue(InlineErrors);
        set => _projectRole.SetValue(value);
    }

    private PropertyValue<bool?> _revoked = new PropertyValue<bool?>(nameof(Invitation), nameof(IsRevoked), "revoked");
    
    [JsonPropertyName("revoked")]
    public bool? IsRevoked
    {
        get => _revoked.GetValue(InlineErrors);
        set => _revoked.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _expiresAt.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inviteeEmail.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inviteeEmailBlocked.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inviteeEmailBlockedReason.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inviteeFirstName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inviteeLastName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _invitee.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inviter.SetAccessPath(parentChainPath, validateHasBeenSet);
        _team.SetAccessPath(parentChainPath, validateHasBeenSet);
        _role.SetAccessPath(parentChainPath, validateHasBeenSet);
        _project.SetAccessPath(parentChainPath, validateHasBeenSet);
        _projectRole.SetAccessPath(parentChainPath, validateHasBeenSet);
        _revoked.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

