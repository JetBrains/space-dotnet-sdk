// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class M2ChannelRecord
     : IPropagatePropertyAccessPath
{
    public M2ChannelRecord() { }
    
    public M2ChannelRecord(string id, M2ChannelContact contact, int totalMessages, bool archived, MessageInfo? lastMessage = null, List<ChannelParticipant>? participants = null, bool? channelArchived = null, M2ChannelContentInfo? content = null, List<ChannelItemRecord>? pinnedMessages = null)
    {
        Id = id;
        Contact = contact;
        TotalMessages = totalMessages;
        LastMessage = lastMessage;
        Participants = participants;
        IsChannelArchived = channelArchived;
        IsArchived = archived;
        Content = content;
        PinnedMessages = pinnedMessages;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(M2ChannelRecord), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<M2ChannelContact> _contact = new PropertyValue<M2ChannelContact>(nameof(M2ChannelRecord), nameof(Contact), "contact");
    
    [Required]
    [JsonPropertyName("contact")]
    public M2ChannelContact Contact
    {
        get => _contact.GetValue(InlineErrors);
        set => _contact.SetValue(value);
    }

    private PropertyValue<int> _totalMessages = new PropertyValue<int>(nameof(M2ChannelRecord), nameof(TotalMessages), "totalMessages");
    
    [Required]
    [JsonPropertyName("totalMessages")]
    public int TotalMessages
    {
        get => _totalMessages.GetValue(InlineErrors);
        set => _totalMessages.SetValue(value);
    }

    private PropertyValue<MessageInfo?> _lastMessage = new PropertyValue<MessageInfo?>(nameof(M2ChannelRecord), nameof(LastMessage), "lastMessage");
    
    [JsonPropertyName("lastMessage")]
    public MessageInfo? LastMessage
    {
        get => _lastMessage.GetValue(InlineErrors);
        set => _lastMessage.SetValue(value);
    }

    private PropertyValue<List<ChannelParticipant>?> _participants = new PropertyValue<List<ChannelParticipant>?>(nameof(M2ChannelRecord), nameof(Participants), "participants");
    
    [JsonPropertyName("participants")]
    public List<ChannelParticipant>? Participants
    {
        get => _participants.GetValue(InlineErrors);
        set => _participants.SetValue(value);
    }

    private PropertyValue<bool?> _channelArchived = new PropertyValue<bool?>(nameof(M2ChannelRecord), nameof(IsChannelArchived), "channelArchived");
    
    [JsonPropertyName("channelArchived")]
    public bool? IsChannelArchived
    {
        get => _channelArchived.GetValue(InlineErrors);
        set => _channelArchived.SetValue(value);
    }

    private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(M2ChannelRecord), nameof(IsArchived), "archived");
    
    [Required]
    [JsonPropertyName("archived")]
    public bool IsArchived
    {
        get => _archived.GetValue(InlineErrors);
        set => _archived.SetValue(value);
    }

    private PropertyValue<M2ChannelContentInfo?> _content = new PropertyValue<M2ChannelContentInfo?>(nameof(M2ChannelRecord), nameof(Content), "content");
    
    [JsonPropertyName("content")]
    public M2ChannelContentInfo? Content
    {
        get => _content.GetValue(InlineErrors);
        set => _content.SetValue(value);
    }

    private PropertyValue<List<ChannelItemRecord>?> _pinnedMessages = new PropertyValue<List<ChannelItemRecord>?>(nameof(M2ChannelRecord), nameof(PinnedMessages), "pinnedMessages");
    
    [JsonPropertyName("pinnedMessages")]
    public List<ChannelItemRecord>? PinnedMessages
    {
        get => _pinnedMessages.GetValue(InlineErrors);
        set => _pinnedMessages.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _contact.SetAccessPath(parentChainPath, validateHasBeenSet);
        _totalMessages.SetAccessPath(parentChainPath, validateHasBeenSet);
        _lastMessage.SetAccessPath(parentChainPath, validateHasBeenSet);
        _participants.SetAccessPath(parentChainPath, validateHasBeenSet);
        _channelArchived.SetAccessPath(parentChainPath, validateHasBeenSet);
        _archived.SetAccessPath(parentChainPath, validateHasBeenSet);
        _content.SetAccessPath(parentChainPath, validateHasBeenSet);
        _pinnedMessages.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

