// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class AutomationJobUnfurlDetails
     : AttachmentUnfurlDetails, InlineUnfurlDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "AutomationJobUnfurlDetails";
    
    public AutomationJobUnfurlDetails() { }
    
    public AutomationJobUnfurlDetails(string jobId, string jobName, PRProject projectRef, string repoName, JobExecutionDisplayStatus? jobExecutionDisplayStatusFilter = null, JobTriggerType? jobTriggerFilter = null, Branch? branch = null)
    {
        JobId = jobId;
        JobName = jobName;
        ProjectRef = projectRef;
        RepoName = repoName;
        JobExecutionDisplayStatusFilter = jobExecutionDisplayStatusFilter;
        JobTriggerFilter = jobTriggerFilter;
        Branch = branch;
    }
    
    private PropertyValue<string> _jobId = new PropertyValue<string>(nameof(AutomationJobUnfurlDetails), nameof(JobId), "jobId");
    
    [Required]
    [JsonPropertyName("jobId")]
    public string JobId
    {
        get => _jobId.GetValue(InlineErrors);
        set => _jobId.SetValue(value);
    }

    private PropertyValue<string> _jobName = new PropertyValue<string>(nameof(AutomationJobUnfurlDetails), nameof(JobName), "jobName");
    
    [Required]
    [JsonPropertyName("jobName")]
    public string JobName
    {
        get => _jobName.GetValue(InlineErrors);
        set => _jobName.SetValue(value);
    }

    private PropertyValue<PRProject> _projectRef = new PropertyValue<PRProject>(nameof(AutomationJobUnfurlDetails), nameof(ProjectRef), "projectRef");
    
    [Required]
    [JsonPropertyName("projectRef")]
    public PRProject ProjectRef
    {
        get => _projectRef.GetValue(InlineErrors);
        set => _projectRef.SetValue(value);
    }

    private PropertyValue<string> _repoName = new PropertyValue<string>(nameof(AutomationJobUnfurlDetails), nameof(RepoName), "repoName");
    
    [Required]
    [JsonPropertyName("repoName")]
    public string RepoName
    {
        get => _repoName.GetValue(InlineErrors);
        set => _repoName.SetValue(value);
    }

    private PropertyValue<JobExecutionDisplayStatus?> _jobExecutionDisplayStatusFilter = new PropertyValue<JobExecutionDisplayStatus?>(nameof(AutomationJobUnfurlDetails), nameof(JobExecutionDisplayStatusFilter), "jobExecutionDisplayStatusFilter");
    
    [JsonPropertyName("jobExecutionDisplayStatusFilter")]
    public JobExecutionDisplayStatus? JobExecutionDisplayStatusFilter
    {
        get => _jobExecutionDisplayStatusFilter.GetValue(InlineErrors);
        set => _jobExecutionDisplayStatusFilter.SetValue(value);
    }

    private PropertyValue<JobTriggerType?> _jobTriggerFilter = new PropertyValue<JobTriggerType?>(nameof(AutomationJobUnfurlDetails), nameof(JobTriggerFilter), "jobTriggerFilter");
    
    [JsonPropertyName("jobTriggerFilter")]
    public JobTriggerType? JobTriggerFilter
    {
        get => _jobTriggerFilter.GetValue(InlineErrors);
        set => _jobTriggerFilter.SetValue(value);
    }

    private PropertyValue<Branch?> _branch = new PropertyValue<Branch?>(nameof(AutomationJobUnfurlDetails), nameof(Branch), "branch");
    
    [JsonPropertyName("branch")]
    public Branch? Branch
    {
        get => _branch.GetValue(InlineErrors);
        set => _branch.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _jobId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _jobName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _projectRef.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repoName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _jobExecutionDisplayStatusFilter.SetAccessPath(parentChainPath, validateHasBeenSet);
        _jobTriggerFilter.SetAccessPath(parentChainPath, validateHasBeenSet);
        _branch.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

