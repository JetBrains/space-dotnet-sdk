// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class StickerContentDetails
         : M2ItemContentDetails, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        [JsonPropertyName("className")]
        public  string? ClassName => "StickerContentDetails";
        
        public StickerContentDetails() { }
        
        public StickerContentDetails(Sticker sticker, StickerPackInfo? pack = null)
        {
            Sticker = sticker;
            Pack = pack;
        }
        
        private PropertyValue<Sticker> _sticker = new PropertyValue<Sticker>(nameof(StickerContentDetails), nameof(Sticker));
        
        [Required]
        [JsonPropertyName("sticker")]
        public Sticker Sticker
        {
            get => _sticker.GetValue();
            set => _sticker.SetValue(value);
        }
    
        private PropertyValue<StickerPackInfo?> _pack = new PropertyValue<StickerPackInfo?>(nameof(StickerContentDetails), nameof(Pack));
        
        [JsonPropertyName("pack")]
        public StickerPackInfo? Pack
        {
            get => _pack.GetValue();
            set => _pack.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _sticker.SetAccessPath(path, validateHasBeenSet);
            _pack.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
