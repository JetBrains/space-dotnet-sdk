// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class PersonalSubscriptionTarget
     : IPropagatePropertyAccessPath
{
    public PersonalSubscriptionTarget() { }
    
    public PersonalSubscriptionTarget(string subjectCode, string targetCode, string description, List<PersonalSubscriptionEvent> events, string? featureFlag = null)
    {
        SubjectCode = subjectCode;
        TargetCode = targetCode;
        Description = description;
        Events = events;
        FeatureFlag = featureFlag;
    }
    
    private PropertyValue<string> _subjectCode = new PropertyValue<string>(nameof(PersonalSubscriptionTarget), nameof(SubjectCode), "subjectCode");
    
    [Required]
    [JsonPropertyName("subjectCode")]
    public string SubjectCode
    {
        get => _subjectCode.GetValue(InlineErrors);
        set => _subjectCode.SetValue(value);
    }

    private PropertyValue<string> _targetCode = new PropertyValue<string>(nameof(PersonalSubscriptionTarget), nameof(TargetCode), "targetCode");
    
    [Required]
    [JsonPropertyName("targetCode")]
    public string TargetCode
    {
        get => _targetCode.GetValue(InlineErrors);
        set => _targetCode.SetValue(value);
    }

    private PropertyValue<string> _description = new PropertyValue<string>(nameof(PersonalSubscriptionTarget), nameof(Description), "description");
    
    [Required]
    [JsonPropertyName("description")]
    public string Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<List<PersonalSubscriptionEvent>> _events = new PropertyValue<List<PersonalSubscriptionEvent>>(nameof(PersonalSubscriptionTarget), nameof(Events), "events", new List<PersonalSubscriptionEvent>());
    
    [Required]
    [JsonPropertyName("events")]
    public List<PersonalSubscriptionEvent> Events
    {
        get => _events.GetValue(InlineErrors);
        set => _events.SetValue(value);
    }

    private PropertyValue<string?> _featureFlag = new PropertyValue<string?>(nameof(PersonalSubscriptionTarget), nameof(FeatureFlag), "featureFlag");
    
    [JsonPropertyName("featureFlag")]
    public string? FeatureFlag
    {
        get => _featureFlag.GetValue(InlineErrors);
        set => _featureFlag.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _subjectCode.SetAccessPath(parentChainPath, validateHasBeenSet);
        _targetCode.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _events.SetAccessPath(parentChainPath, validateHasBeenSet);
        _featureFlag.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

