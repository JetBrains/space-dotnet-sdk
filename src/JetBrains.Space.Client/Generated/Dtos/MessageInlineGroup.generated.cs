// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

#if NET6_0_OR_GREATER
[Obsolete("This part of API is not supported yet on mobile clients. Messages using it will be replaced with stubs on iOS and Android.", DiagnosticId = "SPC001")]
#else
[Obsolete("This part of API is not supported yet on mobile clients. Messages using it will be replaced with stubs on iOS and Android.")]
#endif

public sealed class MessageInlineGroup
     : MessageElement, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "MessageInlineGroup";
    
    public MessageInlineGroup() { }
    
    public MessageInlineGroup(List<MessageInlineElement> elements, MessageAccessoryElement? accessory = null, MessageTextSize? textSize = null, MessageStyle? textStyle = null, MessageStyle? elementsStyle = null)
    {
        Accessory = accessory;
        Elements = elements;
        TextSize = textSize;
        TextStyle = textStyle;
        ElementsStyle = elementsStyle;
    }
    
    private PropertyValue<MessageAccessoryElement?> _accessory = new PropertyValue<MessageAccessoryElement?>(nameof(MessageInlineGroup), nameof(Accessory), "accessory");
    
    [JsonPropertyName("accessory")]
    public MessageAccessoryElement? Accessory
    {
        get => _accessory.GetValue(InlineErrors);
        set => _accessory.SetValue(value);
    }

    private PropertyValue<List<MessageInlineElement>> _elements = new PropertyValue<List<MessageInlineElement>>(nameof(MessageInlineGroup), nameof(Elements), "elements", new List<MessageInlineElement>());
    
    [Required]
    [JsonPropertyName("elements")]
    public List<MessageInlineElement> Elements
    {
        get => _elements.GetValue(InlineErrors);
        set => _elements.SetValue(value);
    }

    private PropertyValue<MessageTextSize?> _textSize = new PropertyValue<MessageTextSize?>(nameof(MessageInlineGroup), nameof(TextSize), "textSize");
    
    [JsonPropertyName("textSize")]
    public MessageTextSize? TextSize
    {
        get => _textSize.GetValue(InlineErrors);
        set => _textSize.SetValue(value);
    }

    private PropertyValue<MessageStyle?> _textStyle = new PropertyValue<MessageStyle?>(nameof(MessageInlineGroup), nameof(TextStyle), "textStyle");
    
    [JsonPropertyName("textStyle")]
    public MessageStyle? TextStyle
    {
        get => _textStyle.GetValue(InlineErrors);
        set => _textStyle.SetValue(value);
    }

    private PropertyValue<MessageStyle?> _elementsStyle = new PropertyValue<MessageStyle?>(nameof(MessageInlineGroup), nameof(ElementsStyle), "elementsStyle");
    
    [JsonPropertyName("elementsStyle")]
    public MessageStyle? ElementsStyle
    {
        get => _elementsStyle.GetValue(InlineErrors);
        set => _elementsStyle.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _accessory.SetAccessPath(parentChainPath, validateHasBeenSet);
        _elements.SetAccessPath(parentChainPath, validateHasBeenSet);
        _textSize.SetAccessPath(parentChainPath, validateHasBeenSet);
        _textStyle.SetAccessPath(parentChainPath, validateHasBeenSet);
        _elementsStyle.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

