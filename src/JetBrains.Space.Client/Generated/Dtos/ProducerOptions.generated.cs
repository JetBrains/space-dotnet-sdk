// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ProducerOptions
     : IPropagatePropertyAccessPath
{
    public ProducerOptions() { }
    
    public ProducerOptions(SFUProducerOptions sfuOptions, long userConnectionId, string routerId, MediaSource source)
    {
        SfuOptions = sfuOptions;
        UserConnectionId = userConnectionId;
        RouterId = routerId;
        Source = source;
    }
    
    private PropertyValue<SFUProducerOptions> _sfuOptions = new PropertyValue<SFUProducerOptions>(nameof(ProducerOptions), nameof(SfuOptions), "sfuOptions");
    
    [Required]
    [JsonPropertyName("sfuOptions")]
    public SFUProducerOptions SfuOptions
    {
        get => _sfuOptions.GetValue(InlineErrors);
        set => _sfuOptions.SetValue(value);
    }

    private PropertyValue<long> _userConnectionId = new PropertyValue<long>(nameof(ProducerOptions), nameof(UserConnectionId), "userConnectionId");
    
    [Required]
    [JsonPropertyName("userConnectionId")]
    public long UserConnectionId
    {
        get => _userConnectionId.GetValue(InlineErrors);
        set => _userConnectionId.SetValue(value);
    }

    private PropertyValue<string> _routerId = new PropertyValue<string>(nameof(ProducerOptions), nameof(RouterId), "routerId");
    
    [Required]
    [JsonPropertyName("routerId")]
    public string RouterId
    {
        get => _routerId.GetValue(InlineErrors);
        set => _routerId.SetValue(value);
    }

    private PropertyValue<MediaSource> _source = new PropertyValue<MediaSource>(nameof(ProducerOptions), nameof(Source), "source");
    
    [Required]
    [JsonPropertyName("source")]
    public MediaSource Source
    {
        get => _source.GetValue(InlineErrors);
        set => _source.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _sfuOptions.SetAccessPath(parentChainPath, validateHasBeenSet);
        _userConnectionId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _routerId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _source.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

