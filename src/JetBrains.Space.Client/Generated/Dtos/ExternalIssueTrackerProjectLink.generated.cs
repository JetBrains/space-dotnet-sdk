// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ExternalIssueTrackerProjectLink
     : IPropagatePropertyAccessPath
{
    public ExternalIssueTrackerProjectLink() { }
    
    public ExternalIssueTrackerProjectLink(PRProject spaceProject, DateTime linkedAt, IssueStatus? targetStatusForMergeRequestMerge = null)
    {
        SpaceProject = spaceProject;
        TargetStatusForMergeRequestMerge = targetStatusForMergeRequestMerge;
        LinkedAt = linkedAt;
    }
    
    private PropertyValue<PRProject> _spaceProject = new PropertyValue<PRProject>(nameof(ExternalIssueTrackerProjectLink), nameof(SpaceProject), "spaceProject");
    
    [Required]
    [JsonPropertyName("spaceProject")]
    public PRProject SpaceProject
    {
        get => _spaceProject.GetValue(InlineErrors);
        set => _spaceProject.SetValue(value);
    }

    private PropertyValue<IssueStatus?> _targetStatusForMergeRequestMerge = new PropertyValue<IssueStatus?>(nameof(ExternalIssueTrackerProjectLink), nameof(TargetStatusForMergeRequestMerge), "targetStatusForMergeRequestMerge");
    
    [JsonPropertyName("targetStatusForMergeRequestMerge")]
    public IssueStatus? TargetStatusForMergeRequestMerge
    {
        get => _targetStatusForMergeRequestMerge.GetValue(InlineErrors);
        set => _targetStatusForMergeRequestMerge.SetValue(value);
    }

    private PropertyValue<DateTime> _linkedAt = new PropertyValue<DateTime>(nameof(ExternalIssueTrackerProjectLink), nameof(LinkedAt), "linkedAt");
    
    [Required]
    [JsonPropertyName("linkedAt")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime LinkedAt
    {
        get => _linkedAt.GetValue(InlineErrors);
        set => _linkedAt.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _spaceProject.SetAccessPath(parentChainPath, validateHasBeenSet);
        _targetStatusForMergeRequestMerge.SetAccessPath(parentChainPath, validateHasBeenSet);
        _linkedAt.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

