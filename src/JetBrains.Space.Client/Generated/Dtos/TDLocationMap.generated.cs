// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class TDLocationMap
     : IPropagatePropertyAccessPath
{
    public TDLocationMap() { }
    
    public TDLocationMap(string id, string picture, DateTime created, int? width = null, int? height = null)
    {
        Id = id;
        Picture = picture;
        Created = created;
        Width = width;
        Height = height;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(TDLocationMap), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _picture = new PropertyValue<string>(nameof(TDLocationMap), nameof(Picture), "picture");
    
    [Required]
    [JsonPropertyName("picture")]
    public string Picture
    {
        get => _picture.GetValue(InlineErrors);
        set => _picture.SetValue(value);
    }

    private PropertyValue<DateTime> _created = new PropertyValue<DateTime>(nameof(TDLocationMap), nameof(Created), "created");
    
    [Required]
    [JsonPropertyName("created")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime Created
    {
        get => _created.GetValue(InlineErrors);
        set => _created.SetValue(value);
    }

    private PropertyValue<int?> _width = new PropertyValue<int?>(nameof(TDLocationMap), nameof(Width), "width");
    
    [JsonPropertyName("width")]
    public int? Width
    {
        get => _width.GetValue(InlineErrors);
        set => _width.SetValue(value);
    }

    private PropertyValue<int?> _height = new PropertyValue<int?>(nameof(TDLocationMap), nameof(Height), "height");
    
    [JsonPropertyName("height")]
    public int? Height
    {
        get => _height.GetValue(InlineErrors);
        set => _height.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _picture.SetAccessPath(parentChainPath, validateHasBeenSet);
        _created.SetAccessPath(parentChainPath, validateHasBeenSet);
        _width.SetAccessPath(parentChainPath, validateHasBeenSet);
        _height.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

