// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ExternalLinkPattern
     : IPropagatePropertyAccessPath
{
    public ExternalLinkPattern() { }
    
    public ExternalLinkPattern(string id, bool archived, string prefix, string linkReplacement)
    {
        Id = id;
        IsArchived = archived;
        Prefix = prefix;
        LinkReplacement = linkReplacement;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(ExternalLinkPattern), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(ExternalLinkPattern), nameof(IsArchived), "archived");
    
    [Required]
    [JsonPropertyName("archived")]
    public bool IsArchived
    {
        get => _archived.GetValue(InlineErrors);
        set => _archived.SetValue(value);
    }

    private PropertyValue<string> _prefix = new PropertyValue<string>(nameof(ExternalLinkPattern), nameof(Prefix), "prefix");
    
    /// <summary>
    /// Prefix that is used in the external IDs and that will be recognised by Space to generate links
    /// </summary>
    [Required]
    [JsonPropertyName("prefix")]
    public string Prefix
    {
        get => _prefix.GetValue(InlineErrors);
        set => _prefix.SetValue(value);
    }

    private PropertyValue<string> _linkReplacement = new PropertyValue<string>(nameof(ExternalLinkPattern), nameof(LinkReplacement), "linkReplacement");
    
    /// <summary>
    /// URL of the external resource ending with *&lt;?&gt;* which is a variable for a number that follows the prefix
    /// </summary>
    [Required]
    [JsonPropertyName("linkReplacement")]
    public string LinkReplacement
    {
        get => _linkReplacement.GetValue(InlineErrors);
        set => _linkReplacement.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _archived.SetAccessPath(parentChainPath, validateHasBeenSet);
        _prefix.SetAccessPath(parentChainPath, validateHasBeenSet);
        _linkReplacement.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

