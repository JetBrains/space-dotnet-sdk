// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class MessageButton
     : MessageControlElement, MessageInlineElement, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "MessageButton";
    
    public MessageButton() { }
    
    public MessageButton(string text, MessageButtonStyle style, MessageAction action, bool? disabled = null)
    {
        Text = text;
        Style = style;
        Action = action;
        IsDisabled = disabled;
    }
    
    private PropertyValue<string> _text = new PropertyValue<string>(nameof(MessageButton), nameof(Text), "text");
    
    [Required]
    [JsonPropertyName("text")]
    public string Text
    {
        get => _text.GetValue(InlineErrors);
        set => _text.SetValue(value);
    }

    private PropertyValue<MessageButtonStyle> _style = new PropertyValue<MessageButtonStyle>(nameof(MessageButton), nameof(Style), "style");
    
    [Required]
    [JsonPropertyName("style")]
    public MessageButtonStyle Style
    {
        get => _style.GetValue(InlineErrors);
        set => _style.SetValue(value);
    }

    private PropertyValue<MessageAction> _action = new PropertyValue<MessageAction>(nameof(MessageButton), nameof(Action), "action");
    
    [Required]
    [JsonPropertyName("action")]
    public MessageAction Action
    {
        get => _action.GetValue(InlineErrors);
        set => _action.SetValue(value);
    }

    private PropertyValue<bool?> _disabled = new PropertyValue<bool?>(nameof(MessageButton), nameof(IsDisabled), "disabled");
    
    [JsonPropertyName("disabled")]
    public bool? IsDisabled
    {
        get => _disabled.GetValue(InlineErrors);
        set => _disabled.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _text.SetAccessPath(parentChainPath, validateHasBeenSet);
        _style.SetAccessPath(parentChainPath, validateHasBeenSet);
        _action.SetAccessPath(parentChainPath, validateHasBeenSet);
        _disabled.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

