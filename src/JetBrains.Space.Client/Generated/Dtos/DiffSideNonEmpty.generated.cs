// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class DiffSideNonEmpty
     : DiffSide, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public override string? ClassName => "DiffSide.NonEmpty";
    
    public DiffSideNonEmpty() { }
    
    public DiffSideNonEmpty(string revision, string path)
    {
        Revision = revision;
        Path = path;
    }
    
    private PropertyValue<string> _revision = new PropertyValue<string>(nameof(DiffSideNonEmpty), nameof(Revision));
    
    [Required]
    [JsonPropertyName("revision")]
    public string Revision
    {
        get => _revision.GetValue();
        set => _revision.SetValue(value);
    }

    private PropertyValue<string> _path = new PropertyValue<string>(nameof(DiffSideNonEmpty), nameof(Path));
    
    [Required]
    [JsonPropertyName("path")]
    public string Path
    {
        get => _path.GetValue();
        set => _path.SetValue(value);
    }

    public override void SetAccessPath(string path, bool validateHasBeenSet)
    {
        _revision.SetAccessPath(path, validateHasBeenSet);
        _path.SetAccessPath(path, validateHasBeenSet);
    }

}

