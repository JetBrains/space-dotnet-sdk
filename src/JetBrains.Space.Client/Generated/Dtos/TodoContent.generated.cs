// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class TodoContent
     : TodoItemContent, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "TodoContent";
    
    public TodoContent() { }
    
    public TodoContent(string originalText, string text, string? link = null, TodoItemContentKind? kind = null, CPrincipal? principal = null, long? time = null, string? extId = null)
    {
        OriginalText = originalText;
        Link = link;
        Kind = kind;
        Principal = principal;
        Time = time;
        Text = text;
        ExtId = extId;
    }
    
    private PropertyValue<string> _originalText = new PropertyValue<string>(nameof(TodoContent), nameof(OriginalText), "originalText");
    
    [Required]
    [JsonPropertyName("originalText")]
    public string OriginalText
    {
        get => _originalText.GetValue(InlineErrors);
        set => _originalText.SetValue(value);
    }

    private PropertyValue<string?> _link = new PropertyValue<string?>(nameof(TodoContent), nameof(Link), "link");
    
    [JsonPropertyName("link")]
    public string? Link
    {
        get => _link.GetValue(InlineErrors);
        set => _link.SetValue(value);
    }

    private PropertyValue<TodoItemContentKind?> _kind = new PropertyValue<TodoItemContentKind?>(nameof(TodoContent), nameof(Kind), "kind");
    
    [JsonPropertyName("kind")]
    public TodoItemContentKind? Kind
    {
        get => _kind.GetValue(InlineErrors);
        set => _kind.SetValue(value);
    }

    private PropertyValue<CPrincipal?> _principal = new PropertyValue<CPrincipal?>(nameof(TodoContent), nameof(Principal), "principal");
    
    [JsonPropertyName("principal")]
    public CPrincipal? Principal
    {
        get => _principal.GetValue(InlineErrors);
        set => _principal.SetValue(value);
    }

    private PropertyValue<long?> _time = new PropertyValue<long?>(nameof(TodoContent), nameof(Time), "time");
    
    [JsonPropertyName("time")]
    public long? Time
    {
        get => _time.GetValue(InlineErrors);
        set => _time.SetValue(value);
    }

    private PropertyValue<string> _text = new PropertyValue<string>(nameof(TodoContent), nameof(Text), "text");
    
    [Required]
    [JsonPropertyName("text")]
    public string Text
    {
        get => _text.GetValue(InlineErrors);
        set => _text.SetValue(value);
    }

    private PropertyValue<string?> _extId = new PropertyValue<string?>(nameof(TodoContent), nameof(ExtId), "extId");
    
    [JsonPropertyName("extId")]
    public string? ExtId
    {
        get => _extId.GetValue(InlineErrors);
        set => _extId.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _originalText.SetAccessPath(parentChainPath, validateHasBeenSet);
        _link.SetAccessPath(parentChainPath, validateHasBeenSet);
        _kind.SetAccessPath(parentChainPath, validateHasBeenSet);
        _principal.SetAccessPath(parentChainPath, validateHasBeenSet);
        _time.SetAccessPath(parentChainPath, validateHasBeenSet);
        _text.SetAccessPath(parentChainPath, validateHasBeenSet);
        _extId.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

