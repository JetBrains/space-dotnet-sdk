// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CodeEmbeddingMatch
     : IPropagatePropertyAccessPath
{
    public CodeEmbeddingMatch() { }
    
    public CodeEmbeddingMatch(string repository, string filename, IntRange range, string? codeSnippet = null, double? similarity = null)
    {
        Repository = repository;
        Filename = filename;
        Range = range;
        CodeSnippet = codeSnippet;
        Similarity = similarity;
    }
    
    private PropertyValue<string> _repository = new PropertyValue<string>(nameof(CodeEmbeddingMatch), nameof(Repository), "repository");
    
    [Required]
    [JsonPropertyName("repository")]
    public string Repository
    {
        get => _repository.GetValue(InlineErrors);
        set => _repository.SetValue(value);
    }

    private PropertyValue<string> _filename = new PropertyValue<string>(nameof(CodeEmbeddingMatch), nameof(Filename), "filename");
    
    [Required]
    [JsonPropertyName("filename")]
    public string Filename
    {
        get => _filename.GetValue(InlineErrors);
        set => _filename.SetValue(value);
    }

    private PropertyValue<IntRange> _range = new PropertyValue<IntRange>(nameof(CodeEmbeddingMatch), nameof(Range), "range");
    
    [Required]
    [JsonPropertyName("range")]
    public IntRange Range
    {
        get => _range.GetValue(InlineErrors);
        set => _range.SetValue(value);
    }

    private PropertyValue<string?> _codeSnippet = new PropertyValue<string?>(nameof(CodeEmbeddingMatch), nameof(CodeSnippet), "codeSnippet");
    
    [JsonPropertyName("codeSnippet")]
    public string? CodeSnippet
    {
        get => _codeSnippet.GetValue(InlineErrors);
        set => _codeSnippet.SetValue(value);
    }

    private PropertyValue<double?> _similarity = new PropertyValue<double?>(nameof(CodeEmbeddingMatch), nameof(Similarity), "similarity");
    
    [JsonPropertyName("similarity")]
    public double? Similarity
    {
        get => _similarity.GetValue(InlineErrors);
        set => _similarity.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _repository.SetAccessPath(parentChainPath, validateHasBeenSet);
        _filename.SetAccessPath(parentChainPath, validateHasBeenSet);
        _range.SetAccessPath(parentChainPath, validateHasBeenSet);
        _codeSnippet.SetAccessPath(parentChainPath, validateHasBeenSet);
        _similarity.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

