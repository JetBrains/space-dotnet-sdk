// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class HADto
     : IPropagatePropertyAccessPath
{
    public HADto() { }
    
    public HADto(string id, string name, List<HADtoField> fields, HierarchyRole hierarchyRole, HierarchyRole2 hierarchyRole2, List<HADto> implements, List<HADto> inheritors, bool record, HADto? extends = null, HADescription? description = null, HADeprecation? deprecation = null, HAExperimental? experimental = null, string? featureFlag = null, HAField? errorsField = null)
    {
        Id = id;
        Name = name;
        Fields = fields;
        HierarchyRole = hierarchyRole;
        HierarchyRole2 = hierarchyRole2;
        Extends = extends;
        Implements = implements;
        Inheritors = inheritors;
        Description = description;
        Deprecation = deprecation;
        Experimental = experimental;
        IsRecord = record;
        FeatureFlag = featureFlag;
        ErrorsField = errorsField;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(HADto), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _name = new PropertyValue<string>(nameof(HADto), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<List<HADtoField>> _fields = new PropertyValue<List<HADtoField>>(nameof(HADto), nameof(Fields), "fields", new List<HADtoField>());
    
    [Required]
    [JsonPropertyName("fields")]
    public List<HADtoField> Fields
    {
        get => _fields.GetValue(InlineErrors);
        set => _fields.SetValue(value);
    }

    private PropertyValue<HierarchyRole> _hierarchyRole = new PropertyValue<HierarchyRole>(nameof(HADto), nameof(HierarchyRole), "hierarchyRole");
    
    [Required]
    [Obsolete("Use hierarchyRole2 (since 20-07-2021)")]
    [JsonPropertyName("hierarchyRole")]
    public HierarchyRole HierarchyRole
    {
        get => _hierarchyRole.GetValue(InlineErrors);
        set => _hierarchyRole.SetValue(value);
    }

    private PropertyValue<HierarchyRole2> _hierarchyRole2 = new PropertyValue<HierarchyRole2>(nameof(HADto), nameof(HierarchyRole2), "hierarchyRole2");
    
    [Required]
    [JsonPropertyName("hierarchyRole2")]
    public HierarchyRole2 HierarchyRole2
    {
        get => _hierarchyRole2.GetValue(InlineErrors);
        set => _hierarchyRole2.SetValue(value);
    }

    private PropertyValue<HADto?> _extends = new PropertyValue<HADto?>(nameof(HADto), nameof(Extends), "extends");
    
    [JsonPropertyName("extends")]
    public HADto? Extends
    {
        get => _extends.GetValue(InlineErrors);
        set => _extends.SetValue(value);
    }

    private PropertyValue<List<HADto>> _implements = new PropertyValue<List<HADto>>(nameof(HADto), nameof(Implements), "implements", new List<HADto>());
    
    [Required]
    [JsonPropertyName("implements")]
    public List<HADto> Implements
    {
        get => _implements.GetValue(InlineErrors);
        set => _implements.SetValue(value);
    }

    private PropertyValue<List<HADto>> _inheritors = new PropertyValue<List<HADto>>(nameof(HADto), nameof(Inheritors), "inheritors", new List<HADto>());
    
    [Required]
    [JsonPropertyName("inheritors")]
    public List<HADto> Inheritors
    {
        get => _inheritors.GetValue(InlineErrors);
        set => _inheritors.SetValue(value);
    }

    private PropertyValue<HADescription?> _description = new PropertyValue<HADescription?>(nameof(HADto), nameof(Description), "description");
    
    [JsonPropertyName("description")]
    public HADescription? Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<HADeprecation?> _deprecation = new PropertyValue<HADeprecation?>(nameof(HADto), nameof(Deprecation), "deprecation");
    
    [JsonPropertyName("deprecation")]
    public HADeprecation? Deprecation
    {
        get => _deprecation.GetValue(InlineErrors);
        set => _deprecation.SetValue(value);
    }

    private PropertyValue<HAExperimental?> _experimental = new PropertyValue<HAExperimental?>(nameof(HADto), nameof(Experimental), "experimental");
    
    [JsonPropertyName("experimental")]
    public HAExperimental? Experimental
    {
        get => _experimental.GetValue(InlineErrors);
        set => _experimental.SetValue(value);
    }

    private PropertyValue<bool> _record = new PropertyValue<bool>(nameof(HADto), nameof(IsRecord), "record");
    
    [Required]
    [JsonPropertyName("record")]
    public bool IsRecord
    {
        get => _record.GetValue(InlineErrors);
        set => _record.SetValue(value);
    }

    private PropertyValue<string?> _featureFlag = new PropertyValue<string?>(nameof(HADto), nameof(FeatureFlag), "featureFlag");
    
    [JsonPropertyName("featureFlag")]
    public string? FeatureFlag
    {
        get => _featureFlag.GetValue(InlineErrors);
        set => _featureFlag.SetValue(value);
    }

    private PropertyValue<HAField?> _errorsField = new PropertyValue<HAField?>(nameof(HADto), nameof(ErrorsField), "errorsField");
    
    [JsonPropertyName("errorsField")]
    public HAField? ErrorsField
    {
        get => _errorsField.GetValue(InlineErrors);
        set => _errorsField.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _fields.SetAccessPath(parentChainPath, validateHasBeenSet);
        _hierarchyRole.SetAccessPath(parentChainPath, validateHasBeenSet);
        _hierarchyRole2.SetAccessPath(parentChainPath, validateHasBeenSet);
        _extends.SetAccessPath(parentChainPath, validateHasBeenSet);
        _implements.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inheritors.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _deprecation.SetAccessPath(parentChainPath, validateHasBeenSet);
        _experimental.SetAccessPath(parentChainPath, validateHasBeenSet);
        _record.SetAccessPath(parentChainPath, validateHasBeenSet);
        _featureFlag.SetAccessPath(parentChainPath, validateHasBeenSet);
        _errorsField.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

