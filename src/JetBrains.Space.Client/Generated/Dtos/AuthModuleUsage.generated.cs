// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class AuthModuleUsage
     : IPropagatePropertyAccessPath
{
    public AuthModuleUsage() { }
    
    public AuthModuleUsage(ESAuthModule authModule, int profiles)
    {
        AuthModule = authModule;
        Profiles = profiles;
    }
    
    private PropertyValue<ESAuthModule> _authModule = new PropertyValue<ESAuthModule>(nameof(AuthModuleUsage), nameof(AuthModule));
    
    [Required]
    [JsonPropertyName("authModule")]
    public ESAuthModule AuthModule
    {
        get => _authModule.GetValue();
        set => _authModule.SetValue(value);
    }

    private PropertyValue<int> _profiles = new PropertyValue<int>(nameof(AuthModuleUsage), nameof(Profiles));
    
    [Required]
    [JsonPropertyName("profiles")]
    public int Profiles
    {
        get => _profiles.GetValue();
        set => _profiles.SetValue(value);
    }

    public  void SetAccessPath(string path, bool validateHasBeenSet)
    {
        _authModule.SetAccessPath(path, validateHasBeenSet);
        _profiles.SetAccessPath(path, validateHasBeenSet);
    }

}

