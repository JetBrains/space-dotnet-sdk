// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class SafeMergeBuildsLiveStatusDTO
     : IPropagatePropertyAccessPath
{
    public SafeMergeBuildsLiveStatusDTO() { }
    
    public SafeMergeBuildsLiveStatusDTO(List<SafeMergeBuildRunningCheck> runningChecks, List<SafeMergeFinishedCheckDTO> finishedChecks, bool fullStatus, int totalBuildsCount, int failedBuildsCount, CPrincipal? cancelledBy = null)
    {
        RunningChecks = runningChecks;
        FinishedChecks = finishedChecks;
        IsFullStatus = fullStatus;
        TotalBuildsCount = totalBuildsCount;
        FailedBuildsCount = failedBuildsCount;
        CancelledBy = cancelledBy;
    }
    
    private PropertyValue<List<SafeMergeBuildRunningCheck>> _runningChecks = new PropertyValue<List<SafeMergeBuildRunningCheck>>(nameof(SafeMergeBuildsLiveStatusDTO), nameof(RunningChecks), "runningChecks", new List<SafeMergeBuildRunningCheck>());
    
    [Required]
    [JsonPropertyName("runningChecks")]
    public List<SafeMergeBuildRunningCheck> RunningChecks
    {
        get => _runningChecks.GetValue(InlineErrors);
        set => _runningChecks.SetValue(value);
    }

    private PropertyValue<List<SafeMergeFinishedCheckDTO>> _finishedChecks = new PropertyValue<List<SafeMergeFinishedCheckDTO>>(nameof(SafeMergeBuildsLiveStatusDTO), nameof(FinishedChecks), "finishedChecks", new List<SafeMergeFinishedCheckDTO>());
    
    [Required]
    [JsonPropertyName("finishedChecks")]
    public List<SafeMergeFinishedCheckDTO> FinishedChecks
    {
        get => _finishedChecks.GetValue(InlineErrors);
        set => _finishedChecks.SetValue(value);
    }

    private PropertyValue<bool> _fullStatus = new PropertyValue<bool>(nameof(SafeMergeBuildsLiveStatusDTO), nameof(IsFullStatus), "fullStatus");
    
    [Required]
    [JsonPropertyName("fullStatus")]
    public bool IsFullStatus
    {
        get => _fullStatus.GetValue(InlineErrors);
        set => _fullStatus.SetValue(value);
    }

    private PropertyValue<int> _totalBuildsCount = new PropertyValue<int>(nameof(SafeMergeBuildsLiveStatusDTO), nameof(TotalBuildsCount), "totalBuildsCount");
    
    [Required]
    [JsonPropertyName("totalBuildsCount")]
    public int TotalBuildsCount
    {
        get => _totalBuildsCount.GetValue(InlineErrors);
        set => _totalBuildsCount.SetValue(value);
    }

    private PropertyValue<int> _failedBuildsCount = new PropertyValue<int>(nameof(SafeMergeBuildsLiveStatusDTO), nameof(FailedBuildsCount), "failedBuildsCount");
    
    [Required]
    [JsonPropertyName("failedBuildsCount")]
    public int FailedBuildsCount
    {
        get => _failedBuildsCount.GetValue(InlineErrors);
        set => _failedBuildsCount.SetValue(value);
    }

    private PropertyValue<CPrincipal?> _cancelledBy = new PropertyValue<CPrincipal?>(nameof(SafeMergeBuildsLiveStatusDTO), nameof(CancelledBy), "cancelledBy");
    
    [JsonPropertyName("cancelledBy")]
    public CPrincipal? CancelledBy
    {
        get => _cancelledBy.GetValue(InlineErrors);
        set => _cancelledBy.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _runningChecks.SetAccessPath(parentChainPath, validateHasBeenSet);
        _finishedChecks.SetAccessPath(parentChainPath, validateHasBeenSet);
        _fullStatus.SetAccessPath(parentChainPath, validateHasBeenSet);
        _totalBuildsCount.SetAccessPath(parentChainPath, validateHasBeenSet);
        _failedBuildsCount.SetAccessPath(parentChainPath, validateHasBeenSet);
        _cancelledBy.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

