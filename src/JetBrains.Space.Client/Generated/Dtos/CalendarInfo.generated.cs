// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CalendarInfo
     : IPropagatePropertyAccessPath
{
    public CalendarInfo() { }
    
    public CalendarInfo(string id, bool freeBusyOnly, bool readOnly, bool exposeToCalDav, bool exposeToGoogle, bool archived, string? name = null, string? defaultColor = null)
    {
        Id = id;
        Name = name;
        DefaultColor = defaultColor;
        IsFreeBusyOnly = freeBusyOnly;
        IsReadOnly = readOnly;
        IsExposeToCalDav = exposeToCalDav;
        IsExposeToGoogle = exposeToGoogle;
        IsArchived = archived;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(CalendarInfo), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string?> _name = new PropertyValue<string?>(nameof(CalendarInfo), nameof(Name), "name");
    
    [JsonPropertyName("name")]
    public string? Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string?> _defaultColor = new PropertyValue<string?>(nameof(CalendarInfo), nameof(DefaultColor), "defaultColor");
    
    [JsonPropertyName("defaultColor")]
    public string? DefaultColor
    {
        get => _defaultColor.GetValue(InlineErrors);
        set => _defaultColor.SetValue(value);
    }

    private PropertyValue<bool> _freeBusyOnly = new PropertyValue<bool>(nameof(CalendarInfo), nameof(IsFreeBusyOnly), "freeBusyOnly");
    
    [Required]
    [JsonPropertyName("freeBusyOnly")]
    public bool IsFreeBusyOnly
    {
        get => _freeBusyOnly.GetValue(InlineErrors);
        set => _freeBusyOnly.SetValue(value);
    }

    private PropertyValue<bool> _readOnly = new PropertyValue<bool>(nameof(CalendarInfo), nameof(IsReadOnly), "readOnly");
    
    [Required]
    [JsonPropertyName("readOnly")]
    public bool IsReadOnly
    {
        get => _readOnly.GetValue(InlineErrors);
        set => _readOnly.SetValue(value);
    }

    private PropertyValue<bool> _exposeToCalDav = new PropertyValue<bool>(nameof(CalendarInfo), nameof(IsExposeToCalDav), "exposeToCalDav");
    
    [Required]
    [JsonPropertyName("exposeToCalDav")]
    public bool IsExposeToCalDav
    {
        get => _exposeToCalDav.GetValue(InlineErrors);
        set => _exposeToCalDav.SetValue(value);
    }

    private PropertyValue<bool> _exposeToGoogle = new PropertyValue<bool>(nameof(CalendarInfo), nameof(IsExposeToGoogle), "exposeToGoogle");
    
    [Required]
    [JsonPropertyName("exposeToGoogle")]
    public bool IsExposeToGoogle
    {
        get => _exposeToGoogle.GetValue(InlineErrors);
        set => _exposeToGoogle.SetValue(value);
    }

    private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(CalendarInfo), nameof(IsArchived), "archived");
    
    [Required]
    [JsonPropertyName("archived")]
    public bool IsArchived
    {
        get => _archived.GetValue(InlineErrors);
        set => _archived.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _defaultColor.SetAccessPath(parentChainPath, validateHasBeenSet);
        _freeBusyOnly.SetAccessPath(parentChainPath, validateHasBeenSet);
        _readOnly.SetAccessPath(parentChainPath, validateHasBeenSet);
        _exposeToCalDav.SetAccessPath(parentChainPath, validateHasBeenSet);
        _exposeToGoogle.SetAccessPath(parentChainPath, validateHasBeenSet);
        _archived.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

