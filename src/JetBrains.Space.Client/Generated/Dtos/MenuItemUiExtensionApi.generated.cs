// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class MenuItemUiExtensionApi
     : AppUiExtensionApi, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "MenuItemUiExtensionApi";
    
    public MenuItemUiExtensionApi() { }
    
    public MenuItemUiExtensionApi(string typeName, MenuIdentifier menuIdentifier, string displayName, string menuItemUniqueCode, List<MenuItemVisibilityFilter> visibilityFilters, string? description = null)
    {
        TypeName = typeName;
        MenuIdentifier = menuIdentifier;
        DisplayName = displayName;
        Description = description;
        MenuItemUniqueCode = menuItemUniqueCode;
        VisibilityFilters = visibilityFilters;
    }
    
    private PropertyValue<string> _typeName = new PropertyValue<string>(nameof(MenuItemUiExtensionApi), nameof(TypeName), "typeName");
    
    [Required]
    [JsonPropertyName("typeName")]
    public string TypeName
    {
        get => _typeName.GetValue(InlineErrors);
        set => _typeName.SetValue(value);
    }

    private PropertyValue<MenuIdentifier> _menuIdentifier = new PropertyValue<MenuIdentifier>(nameof(MenuItemUiExtensionApi), nameof(MenuIdentifier), "menuIdentifier");
    
    [Required]
    [JsonPropertyName("menuIdentifier")]
    public MenuIdentifier MenuIdentifier
    {
        get => _menuIdentifier.GetValue(InlineErrors);
        set => _menuIdentifier.SetValue(value);
    }

    private PropertyValue<string> _displayName = new PropertyValue<string>(nameof(MenuItemUiExtensionApi), nameof(DisplayName), "displayName");
    
    [Required]
    [JsonPropertyName("displayName")]
    public string DisplayName
    {
        get => _displayName.GetValue(InlineErrors);
        set => _displayName.SetValue(value);
    }

    private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(MenuItemUiExtensionApi), nameof(Description), "description");
    
    [JsonPropertyName("description")]
    public string? Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<string> _menuItemUniqueCode = new PropertyValue<string>(nameof(MenuItemUiExtensionApi), nameof(MenuItemUniqueCode), "menuItemUniqueCode");
    
    [Required]
    [JsonPropertyName("menuItemUniqueCode")]
    public string MenuItemUniqueCode
    {
        get => _menuItemUniqueCode.GetValue(InlineErrors);
        set => _menuItemUniqueCode.SetValue(value);
    }

    private PropertyValue<List<MenuItemVisibilityFilter>> _visibilityFilters = new PropertyValue<List<MenuItemVisibilityFilter>>(nameof(MenuItemUiExtensionApi), nameof(VisibilityFilters), "visibilityFilters", new List<MenuItemVisibilityFilter>());
    
    [Required]
    [JsonPropertyName("visibilityFilters")]
    public List<MenuItemVisibilityFilter> VisibilityFilters
    {
        get => _visibilityFilters.GetValue(InlineErrors);
        set => _visibilityFilters.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _typeName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _menuIdentifier.SetAccessPath(parentChainPath, validateHasBeenSet);
        _displayName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _menuItemUniqueCode.SetAccessPath(parentChainPath, validateHasBeenSet);
        _visibilityFilters.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

