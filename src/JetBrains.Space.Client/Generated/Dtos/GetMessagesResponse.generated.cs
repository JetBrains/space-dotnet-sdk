// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class GetMessagesResponse
     : IPropagatePropertyAccessPath
{
    public GetMessagesResponse() { }
    
    public GetMessagesResponse(List<ChannelItemRecord> messages, bool orgLimitReached, DateTime? nextStartFromDate = null)
    {
        Messages = messages;
        NextStartFromDate = nextStartFromDate;
        IsOrgLimitReached = orgLimitReached;
    }
    
    private PropertyValue<List<ChannelItemRecord>> _messages = new PropertyValue<List<ChannelItemRecord>>(nameof(GetMessagesResponse), nameof(Messages), "messages", new List<ChannelItemRecord>());
    
    [Required]
    [JsonPropertyName("messages")]
    public List<ChannelItemRecord> Messages
    {
        get => _messages.GetValue(InlineErrors);
        set => _messages.SetValue(value);
    }

    private PropertyValue<DateTime?> _nextStartFromDate = new PropertyValue<DateTime?>(nameof(GetMessagesResponse), nameof(NextStartFromDate), "nextStartFromDate");
    
    [JsonPropertyName("nextStartFromDate")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime? NextStartFromDate
    {
        get => _nextStartFromDate.GetValue(InlineErrors);
        set => _nextStartFromDate.SetValue(value);
    }

    private PropertyValue<bool> _orgLimitReached = new PropertyValue<bool>(nameof(GetMessagesResponse), nameof(IsOrgLimitReached), "orgLimitReached");
    
    [Required]
    [JsonPropertyName("orgLimitReached")]
    public bool IsOrgLimitReached
    {
        get => _orgLimitReached.GetValue(InlineErrors);
        set => _orgLimitReached.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _messages.SetAccessPath(parentChainPath, validateHasBeenSet);
        _nextStartFromDate.SetAccessPath(parentChainPath, validateHasBeenSet);
        _orgLimitReached.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

