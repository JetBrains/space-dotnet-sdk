// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Client.Internal;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class PlanLimit
         : IPropagatePropertyAccessPath
    {
        public PlanLimit() { }
        
        public PlanLimit(LimitUnit unit, long usage, long? softCap = null, long? hardCap = null, Money? overdraftPrice = null)
        {
            Unit = unit;
            Usage = usage;
            SoftCap = softCap;
            HardCap = hardCap;
            OverdraftPrice = overdraftPrice;
        }
        
        private PropertyValue<LimitUnit> _unit = new PropertyValue<LimitUnit>(nameof(PlanLimit), nameof(Unit));
        
        [Required]
        [JsonPropertyName("unit")]
        public LimitUnit Unit
        {
            get => _unit.GetValue();
            set => _unit.SetValue(value);
        }
    
        private PropertyValue<long> _usage = new PropertyValue<long>(nameof(PlanLimit), nameof(Usage));
        
        [Required]
        [JsonPropertyName("usage")]
        public long Usage
        {
            get => _usage.GetValue();
            set => _usage.SetValue(value);
        }
    
        private PropertyValue<long?> _softCap = new PropertyValue<long?>(nameof(PlanLimit), nameof(SoftCap));
        
        [JsonPropertyName("softCap")]
        public long? SoftCap
        {
            get => _softCap.GetValue();
            set => _softCap.SetValue(value);
        }
    
        private PropertyValue<long?> _hardCap = new PropertyValue<long?>(nameof(PlanLimit), nameof(HardCap));
        
        [JsonPropertyName("hardCap")]
        public long? HardCap
        {
            get => _hardCap.GetValue();
            set => _hardCap.SetValue(value);
        }
    
        private PropertyValue<Money?> _overdraftPrice = new PropertyValue<Money?>(nameof(PlanLimit), nameof(OverdraftPrice));
        
        [JsonPropertyName("overdraftPrice")]
        public Money? OverdraftPrice
        {
            get => _overdraftPrice.GetValue();
            set => _overdraftPrice.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _unit.SetAccessPath(path, validateHasBeenSet);
            _usage.SetAccessPath(path, validateHasBeenSet);
            _softCap.SetAccessPath(path, validateHasBeenSet);
            _hardCap.SetAccessPath(path, validateHasBeenSet);
            _overdraftPrice.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
