// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class UnfurlDetailsRepositoryBranch
     : InlineUnfurlDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "UnfurlDetailsRepositoryBranch";
    
    public UnfurlDetailsRepositoryBranch() { }
    
    public UnfurlDetailsRepositoryBranch(PRProject project, string repository, string branchHead, bool deleted, bool? isDefault = null, UnfurlDetailsRepositoryBranchBranchTagSize? tagSize = null)
    {
        Project = project;
        Repository = repository;
        BranchHead = branchHead;
        IsDeleted = deleted;
        IsDefault = isDefault;
        TagSize = tagSize;
    }
    
    private PropertyValue<PRProject> _project = new PropertyValue<PRProject>(nameof(UnfurlDetailsRepositoryBranch), nameof(Project), "project");
    
    [Required]
    [JsonPropertyName("project")]
    public PRProject Project
    {
        get => _project.GetValue(InlineErrors);
        set => _project.SetValue(value);
    }

    private PropertyValue<string> _repository = new PropertyValue<string>(nameof(UnfurlDetailsRepositoryBranch), nameof(Repository), "repository");
    
    [Required]
    [JsonPropertyName("repository")]
    public string Repository
    {
        get => _repository.GetValue(InlineErrors);
        set => _repository.SetValue(value);
    }

    private PropertyValue<string> _branchHead = new PropertyValue<string>(nameof(UnfurlDetailsRepositoryBranch), nameof(BranchHead), "branchHead");
    
    [Required]
    [JsonPropertyName("branchHead")]
    public string BranchHead
    {
        get => _branchHead.GetValue(InlineErrors);
        set => _branchHead.SetValue(value);
    }

    private PropertyValue<bool> _deleted = new PropertyValue<bool>(nameof(UnfurlDetailsRepositoryBranch), nameof(IsDeleted), "deleted");
    
    [Required]
    [JsonPropertyName("deleted")]
    public bool IsDeleted
    {
        get => _deleted.GetValue(InlineErrors);
        set => _deleted.SetValue(value);
    }

    private PropertyValue<bool?> _isDefault = new PropertyValue<bool?>(nameof(UnfurlDetailsRepositoryBranch), nameof(IsDefault), "isDefault");
    
    [JsonPropertyName("isDefault")]
    public bool? IsDefault
    {
        get => _isDefault.GetValue(InlineErrors);
        set => _isDefault.SetValue(value);
    }

    private PropertyValue<UnfurlDetailsRepositoryBranchBranchTagSize?> _tagSize = new PropertyValue<UnfurlDetailsRepositoryBranchBranchTagSize?>(nameof(UnfurlDetailsRepositoryBranch), nameof(TagSize), "tagSize");
    
    [JsonPropertyName("tagSize")]
    public UnfurlDetailsRepositoryBranchBranchTagSize? TagSize
    {
        get => _tagSize.GetValue(InlineErrors);
        set => _tagSize.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _project.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repository.SetAccessPath(parentChainPath, validateHasBeenSet);
        _branchHead.SetAccessPath(parentChainPath, validateHasBeenSet);
        _deleted.SetAccessPath(parentChainPath, validateHasBeenSet);
        _isDefault.SetAccessPath(parentChainPath, validateHasBeenSet);
        _tagSize.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

