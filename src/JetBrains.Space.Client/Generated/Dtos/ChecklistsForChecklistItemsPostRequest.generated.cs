// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public class ChecklistsForChecklistItemsPostRequest
     : IPropagatePropertyAccessPath
{
    public ChecklistsForChecklistItemsPostRequest() { }
    
    public ChecklistsForChecklistItemsPostRequest(string itemText, PlanItemIdentifier? parentItem = null)
    {
        ParentItem = parentItem;
        ItemText = itemText;
    }
    
    private PropertyValue<PlanItemIdentifier?> _parentItem = new PropertyValue<PlanItemIdentifier?>(nameof(ChecklistsForChecklistItemsPostRequest), nameof(ParentItem), "parentItem");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("parentItem")]
    public PlanItemIdentifier? ParentItem
    {
        get => _parentItem.GetValue(InlineErrors);
        set => _parentItem.SetValue(value);
    }

    private PropertyValue<string> _itemText = new PropertyValue<string>(nameof(ChecklistsForChecklistItemsPostRequest), nameof(ItemText), "itemText");
    
    [Required]
    [JsonPropertyName("itemText")]
    public string ItemText
    {
        get => _itemText.GetValue(InlineErrors);
        set => _itemText.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _parentItem.SetAccessPath(parentChainPath, validateHasBeenSet);
        _itemText.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

