// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Client.Internal;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class BusinessEntity
         : IPropagatePropertyAccessPath
    {
        public BusinessEntity() { }
        
        public BusinessEntity(string id, string name, TDLocation location, int vacationAllowance, bool archived, int? vacationApplicationDeadline = null)
        {
            Id = id;
            Name = name;
            Location = location;
            VacationAllowance = vacationAllowance;
            VacationApplicationDeadline = vacationApplicationDeadline;
            IsArchived = archived;
        }
        
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(BusinessEntity), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get => _id.GetValue();
            set => _id.SetValue(value);
        }
    
        private PropertyValue<string> _name = new PropertyValue<string>(nameof(BusinessEntity), nameof(Name));
        
        [Required]
        [JsonPropertyName("name")]
        public string Name
        {
            get => _name.GetValue();
            set => _name.SetValue(value);
        }
    
        private PropertyValue<TDLocation> _location = new PropertyValue<TDLocation>(nameof(BusinessEntity), nameof(Location));
        
        [Required]
        [JsonPropertyName("location")]
        public TDLocation Location
        {
            get => _location.GetValue();
            set => _location.SetValue(value);
        }
    
        private PropertyValue<int> _vacationAllowance = new PropertyValue<int>(nameof(BusinessEntity), nameof(VacationAllowance));
        
        [Required]
        [JsonPropertyName("vacationAllowance")]
        public int VacationAllowance
        {
            get => _vacationAllowance.GetValue();
            set => _vacationAllowance.SetValue(value);
        }
    
        private PropertyValue<int?> _vacationApplicationDeadline = new PropertyValue<int?>(nameof(BusinessEntity), nameof(VacationApplicationDeadline));
        
        [JsonPropertyName("vacationApplicationDeadline")]
        public int? VacationApplicationDeadline
        {
            get => _vacationApplicationDeadline.GetValue();
            set => _vacationApplicationDeadline.SetValue(value);
        }
    
        private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(BusinessEntity), nameof(IsArchived));
        
        [Required]
        [JsonPropertyName("archived")]
        public bool IsArchived
        {
            get => _archived.GetValue();
            set => _archived.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path, validateHasBeenSet);
            _name.SetAccessPath(path, validateHasBeenSet);
            _location.SetAccessPath(path, validateHasBeenSet);
            _vacationAllowance.SetAccessPath(path, validateHasBeenSet);
            _vacationApplicationDeadline.SetAccessPath(path, validateHasBeenSet);
            _archived.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
