// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

internal class ProjectsForProjectCodeReviewsCodeIssuesFeedbackPostRequest
     : IPropagatePropertyAccessPath
{
    public ProjectsForProjectCodeReviewsCodeIssuesFeedbackPostRequest() { }
    
    public ProjectsForProjectCodeReviewsCodeIssuesFeedbackPostRequest(string tool, ReviewIdentifier? reviewId = null, BatchInfo? batchInfo = null)
    {
        ReviewId = reviewId;
        Tool = tool;
        BatchInfo = batchInfo;
    }
    
    private PropertyValue<ReviewIdentifier?> _reviewId = new PropertyValue<ReviewIdentifier?>(nameof(ProjectsForProjectCodeReviewsCodeIssuesFeedbackPostRequest), nameof(ReviewId), "reviewId");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("reviewId")]
    public ReviewIdentifier? ReviewId
    {
        get => _reviewId.GetValue(InlineErrors);
        set => _reviewId.SetValue(value);
    }

    private PropertyValue<string> _tool = new PropertyValue<string>(nameof(ProjectsForProjectCodeReviewsCodeIssuesFeedbackPostRequest), nameof(Tool), "tool");
    
    [Required]
    [JsonPropertyName("tool")]
    public string Tool
    {
        get => _tool.GetValue(InlineErrors);
        set => _tool.SetValue(value);
    }

    private PropertyValue<BatchInfo?> _batchInfo = new PropertyValue<BatchInfo?>(nameof(ProjectsForProjectCodeReviewsCodeIssuesFeedbackPostRequest), nameof(BatchInfo), "batchInfo");
    
    [JsonPropertyName("batchInfo")]
    public BatchInfo? BatchInfo
    {
        get => _batchInfo.GetValue(InlineErrors);
        set => _batchInfo.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _reviewId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _tool.SetAccessPath(parentChainPath, validateHasBeenSet);
        _batchInfo.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

