// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class UnfurlDetailsCodeDiffSnippet
     : AttachmentUnfurlDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "UnfurlDetailsCodeDiffSnippet";
    
    public UnfurlDetailsCodeDiffSnippet() { }
    
    public UnfurlDetailsCodeDiffSnippet(MCMessage header, List<AttachmentInfo> headerAttachments, List<InlineDiffLine> lines, int selectedLineIndex, int selectedLinesCount, string? sourceBranch = null, string? targetBranch = null)
    {
        Header = header;
        HeaderAttachments = headerAttachments;
        Lines = lines;
        SelectedLineIndex = selectedLineIndex;
        SelectedLinesCount = selectedLinesCount;
        SourceBranch = sourceBranch;
        TargetBranch = targetBranch;
    }
    
    private PropertyValue<MCMessage> _header = new PropertyValue<MCMessage>(nameof(UnfurlDetailsCodeDiffSnippet), nameof(Header), "header");
    
    [Required]
    [JsonPropertyName("header")]
    public MCMessage Header
    {
        get => _header.GetValue(InlineErrors);
        set => _header.SetValue(value);
    }

    private PropertyValue<List<AttachmentInfo>> _headerAttachments = new PropertyValue<List<AttachmentInfo>>(nameof(UnfurlDetailsCodeDiffSnippet), nameof(HeaderAttachments), "headerAttachments", new List<AttachmentInfo>());
    
    [Required]
    [JsonPropertyName("headerAttachments")]
    public List<AttachmentInfo> HeaderAttachments
    {
        get => _headerAttachments.GetValue(InlineErrors);
        set => _headerAttachments.SetValue(value);
    }

    private PropertyValue<List<InlineDiffLine>> _lines = new PropertyValue<List<InlineDiffLine>>(nameof(UnfurlDetailsCodeDiffSnippet), nameof(Lines), "lines", new List<InlineDiffLine>());
    
    [Required]
    [JsonPropertyName("lines")]
    public List<InlineDiffLine> Lines
    {
        get => _lines.GetValue(InlineErrors);
        set => _lines.SetValue(value);
    }

    private PropertyValue<int> _selectedLineIndex = new PropertyValue<int>(nameof(UnfurlDetailsCodeDiffSnippet), nameof(SelectedLineIndex), "selectedLineIndex");
    
    [Required]
    [JsonPropertyName("selectedLineIndex")]
    public int SelectedLineIndex
    {
        get => _selectedLineIndex.GetValue(InlineErrors);
        set => _selectedLineIndex.SetValue(value);
    }

    private PropertyValue<int> _selectedLinesCount = new PropertyValue<int>(nameof(UnfurlDetailsCodeDiffSnippet), nameof(SelectedLinesCount), "selectedLinesCount");
    
    [Required]
    [JsonPropertyName("selectedLinesCount")]
    public int SelectedLinesCount
    {
        get => _selectedLinesCount.GetValue(InlineErrors);
        set => _selectedLinesCount.SetValue(value);
    }

    private PropertyValue<string?> _sourceBranch = new PropertyValue<string?>(nameof(UnfurlDetailsCodeDiffSnippet), nameof(SourceBranch), "sourceBranch");
    
    [JsonPropertyName("sourceBranch")]
    public string? SourceBranch
    {
        get => _sourceBranch.GetValue(InlineErrors);
        set => _sourceBranch.SetValue(value);
    }

    private PropertyValue<string?> _targetBranch = new PropertyValue<string?>(nameof(UnfurlDetailsCodeDiffSnippet), nameof(TargetBranch), "targetBranch");
    
    [JsonPropertyName("targetBranch")]
    public string? TargetBranch
    {
        get => _targetBranch.GetValue(InlineErrors);
        set => _targetBranch.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _header.SetAccessPath(parentChainPath, validateHasBeenSet);
        _headerAttachments.SetAccessPath(parentChainPath, validateHasBeenSet);
        _lines.SetAccessPath(parentChainPath, validateHasBeenSet);
        _selectedLineIndex.SetAccessPath(parentChainPath, validateHasBeenSet);
        _selectedLinesCount.SetAccessPath(parentChainPath, validateHasBeenSet);
        _sourceBranch.SetAccessPath(parentChainPath, validateHasBeenSet);
        _targetBranch.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

