// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public interface BlockNodeWithChildren
     : BlockNode, NodeWithChildren, IClassNameConvertible, IPropagatePropertyAccessPath
{
    public static RtBlockquote RtBlockquote(List<BlockNode> children)
        => new RtBlockquote(children: children);
    
    public static RtBulletList RtBulletList(List<RtListItem> children)
        => new RtBulletList(children: children);
    
    public static RtCode RtCode(string lang, List<RtText> children)
        => new RtCode(lang: lang, children: children);
    
    public static RtDocument RtDocument(List<BlockNode> children)
        => new RtDocument(children: children);
    
    public static RtHeading RtHeading(int level, List<InlineNode> children, RtTextAlign textAlign)
        => new RtHeading(level: level, children: children, textAlign: textAlign);
    
    public static RtListItem RtListItem(List<BlockNode> children)
        => new RtListItem(children: children);
    
    public static RtOrderedList RtOrderedList(int startNumber, List<RtListItem> children)
        => new RtOrderedList(startNumber: startNumber, children: children);
    
    public static RtParagraph RtParagraph(List<InlineNode> children, RtTextAlign textAlign)
        => new RtParagraph(children: children, textAlign: textAlign);
    
    public static RtTable RtTable(List<RtTableRow> children)
        => new RtTable(children: children);
    
    public static RtTableRow RtTableRow(List<RtTableRowContent> children)
        => new RtTableRow(children: children);
    
}

