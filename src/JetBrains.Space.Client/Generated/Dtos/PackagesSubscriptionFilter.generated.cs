// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class PackagesSubscriptionFilter
     : SubscriptionFilter, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "PackagesSubscriptionFilter";
    
    public PackagesSubscriptionFilter() { }
    
    public PackagesSubscriptionFilter(List<string> namePattern, PRProject? project = null, ProjectPackageRepository? repository = null, string? versionPattern = null)
    {
        Project = project;
        Repository = repository;
        NamePattern = namePattern;
        VersionPattern = versionPattern;
    }
    
    private PropertyValue<PRProject?> _project = new PropertyValue<PRProject?>(nameof(PackagesSubscriptionFilter), nameof(Project), "project");
    
    [JsonPropertyName("project")]
    public PRProject? Project
    {
        get => _project.GetValue(InlineErrors);
        set => _project.SetValue(value);
    }

    private PropertyValue<ProjectPackageRepository?> _repository = new PropertyValue<ProjectPackageRepository?>(nameof(PackagesSubscriptionFilter), nameof(Repository), "repository");
    
    [JsonPropertyName("repository")]
    public ProjectPackageRepository? Repository
    {
        get => _repository.GetValue(InlineErrors);
        set => _repository.SetValue(value);
    }

    private PropertyValue<List<string>> _namePattern = new PropertyValue<List<string>>(nameof(PackagesSubscriptionFilter), nameof(NamePattern), "namePattern", new List<string>());
    
    [Required]
    [JsonPropertyName("namePattern")]
    public List<string> NamePattern
    {
        get => _namePattern.GetValue(InlineErrors);
        set => _namePattern.SetValue(value);
    }

    private PropertyValue<string?> _versionPattern = new PropertyValue<string?>(nameof(PackagesSubscriptionFilter), nameof(VersionPattern), "versionPattern");
    
    [JsonPropertyName("versionPattern")]
    public string? VersionPattern
    {
        get => _versionPattern.GetValue(InlineErrors);
        set => _versionPattern.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _project.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repository.SetAccessPath(parentChainPath, validateHasBeenSet);
        _namePattern.SetAccessPath(parentChainPath, validateHasBeenSet);
        _versionPattern.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

