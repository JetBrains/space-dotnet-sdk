// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class SlackTeamIn
     : IPropagatePropertyAccessPath
{
    public SlackTeamIn() { }
    
    public SlackTeamIn(string domain, string name, string? iconUrl = null)
    {
        Domain = domain;
        IconUrl = iconUrl;
        Name = name;
    }
    
    private PropertyValue<string> _domain = new PropertyValue<string>(nameof(SlackTeamIn), nameof(Domain), "domain");
    
    [Required]
    [JsonPropertyName("domain")]
    public string Domain
    {
        get => _domain.GetValue(InlineErrors);
        set => _domain.SetValue(value);
    }

    private PropertyValue<string?> _iconUrl = new PropertyValue<string?>(nameof(SlackTeamIn), nameof(IconUrl), "iconUrl");
    
    [JsonPropertyName("iconUrl")]
    public string? IconUrl
    {
        get => _iconUrl.GetValue(InlineErrors);
        set => _iconUrl.SetValue(value);
    }

    private PropertyValue<string> _name = new PropertyValue<string>(nameof(SlackTeamIn), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _domain.SetAccessPath(parentChainPath, validateHasBeenSet);
        _iconUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

