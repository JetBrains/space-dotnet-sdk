// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CodeReviewParticipants
     : IPropagatePropertyAccessPath
{
    public CodeReviewParticipants() { }
    
    public CodeReviewParticipants(string id, List<CodeReviewParticipantRecord> reviewers, List<CodeReviewParticipantRecord> authors, List<CodeReviewParticipantRecord> watchers, List<CodeReviewParticipant>? participants = null)
    {
        Id = id;
        Participants = participants;
        Reviewers = reviewers;
        Authors = authors;
        Watchers = watchers;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(CodeReviewParticipants), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<List<CodeReviewParticipant>?> _participants = new PropertyValue<List<CodeReviewParticipant>?>(nameof(CodeReviewParticipants), nameof(Participants), "participants");
    
    [JsonPropertyName("participants")]
    public List<CodeReviewParticipant>? Participants
    {
        get => _participants.GetValue(InlineErrors);
        set => _participants.SetValue(value);
    }

    private PropertyValue<List<CodeReviewParticipantRecord>> _reviewers = new PropertyValue<List<CodeReviewParticipantRecord>>(nameof(CodeReviewParticipants), nameof(Reviewers), "reviewers", new List<CodeReviewParticipantRecord>());
    
    [Required]
    [Obsolete("Use participants (since 2020-11-03) (will be removed in a future version)")]
    [JsonPropertyName("reviewers")]
    public List<CodeReviewParticipantRecord> Reviewers
    {
        get => _reviewers.GetValue(InlineErrors);
        set => _reviewers.SetValue(value);
    }

    private PropertyValue<List<CodeReviewParticipantRecord>> _authors = new PropertyValue<List<CodeReviewParticipantRecord>>(nameof(CodeReviewParticipants), nameof(Authors), "authors", new List<CodeReviewParticipantRecord>());
    
    [Required]
    [Obsolete("Use participants (since 2020-11-03) (will be removed in a future version)")]
    [JsonPropertyName("authors")]
    public List<CodeReviewParticipantRecord> Authors
    {
        get => _authors.GetValue(InlineErrors);
        set => _authors.SetValue(value);
    }

    private PropertyValue<List<CodeReviewParticipantRecord>> _watchers = new PropertyValue<List<CodeReviewParticipantRecord>>(nameof(CodeReviewParticipants), nameof(Watchers), "watchers", new List<CodeReviewParticipantRecord>());
    
    [Required]
    [Obsolete("Use participants (since 2020-11-03) (will be removed in a future version)")]
    [JsonPropertyName("watchers")]
    public List<CodeReviewParticipantRecord> Watchers
    {
        get => _watchers.GetValue(InlineErrors);
        set => _watchers.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _participants.SetAccessPath(parentChainPath, validateHasBeenSet);
        _reviewers.SetAccessPath(parentChainPath, validateHasBeenSet);
        _authors.SetAccessPath(parentChainPath, validateHasBeenSet);
        _watchers.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

