// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ExternalIssueEventQueueItemsBatch
     : IPropagatePropertyAccessPath
{
    public ExternalIssueEventQueueItemsBatch() { }
    
    public ExternalIssueEventQueueItemsBatch(List<ExternalIssueEventQueueItem> items, long nextEtag, bool hasMore)
    {
        Items = items;
        NextEtag = nextEtag;
        IsHasMore = hasMore;
    }
    
    private PropertyValue<List<ExternalIssueEventQueueItem>> _items = new PropertyValue<List<ExternalIssueEventQueueItem>>(nameof(ExternalIssueEventQueueItemsBatch), nameof(Items), "items", new List<ExternalIssueEventQueueItem>());
    
    [Required]
    [JsonPropertyName("items")]
    public List<ExternalIssueEventQueueItem> Items
    {
        get => _items.GetValue(InlineErrors);
        set => _items.SetValue(value);
    }

    private PropertyValue<long> _nextEtag = new PropertyValue<long>(nameof(ExternalIssueEventQueueItemsBatch), nameof(NextEtag), "nextEtag");
    
    [Required]
    [JsonPropertyName("nextEtag")]
    public long NextEtag
    {
        get => _nextEtag.GetValue(InlineErrors);
        set => _nextEtag.SetValue(value);
    }

    private PropertyValue<bool> _hasMore = new PropertyValue<bool>(nameof(ExternalIssueEventQueueItemsBatch), nameof(IsHasMore), "hasMore");
    
    [Required]
    [JsonPropertyName("hasMore")]
    public bool IsHasMore
    {
        get => _hasMore.GetValue(InlineErrors);
        set => _hasMore.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _items.SetAccessPath(parentChainPath, validateHasBeenSet);
        _nextEtag.SetAccessPath(parentChainPath, validateHasBeenSet);
        _hasMore.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

