// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class TDProfileLanguage
     : IPropagatePropertyAccessPath
{
    public TDProfileLanguage() { }
    
    public TDProfileLanguage(TDLanguage language, TDProfileName? name = null, string? languageCode = null)
    {
        Name = name;
        Language = language;
        LanguageCode = languageCode;
    }
    
    private PropertyValue<TDProfileName?> _name = new PropertyValue<TDProfileName?>(nameof(TDProfileLanguage), nameof(Name), "name");
    
    [JsonPropertyName("name")]
    public TDProfileName? Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<TDLanguage> _language = new PropertyValue<TDLanguage>(nameof(TDProfileLanguage), nameof(Language), "language");
    
    [Required]
    [JsonPropertyName("language")]
    public TDLanguage Language
    {
        get => _language.GetValue(InlineErrors);
        set => _language.SetValue(value);
    }

    private PropertyValue<string?> _languageCode = new PropertyValue<string?>(nameof(TDProfileLanguage), nameof(LanguageCode), "languageCode");
    
    [JsonPropertyName("languageCode")]
    public string? LanguageCode
    {
        get => _languageCode.GetValue(InlineErrors);
        set => _languageCode.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _language.SetAccessPath(parentChainPath, validateHasBeenSet);
        _languageCode.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

