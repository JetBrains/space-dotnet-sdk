// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class DryCleanupResults
         : IPropagatePropertyAccessPath
    {
        public DryCleanupResults() { }
        
        public DryCleanupResults(long totalSize, List<PackageVersionRef> packageVersions)
        {
            TotalSize = totalSize;
            PackageVersions = packageVersions;
        }
        
        private PropertyValue<long> _totalSize = new PropertyValue<long>(nameof(DryCleanupResults), nameof(TotalSize));
        
        [Required]
        [JsonPropertyName("totalSize")]
        public long TotalSize
        {
            get => _totalSize.GetValue();
            set => _totalSize.SetValue(value);
        }
    
        private PropertyValue<List<PackageVersionRef>> _packageVersions = new PropertyValue<List<PackageVersionRef>>(nameof(DryCleanupResults), nameof(PackageVersions), new List<PackageVersionRef>());
        
        [Required]
        [JsonPropertyName("packageVersions")]
        public List<PackageVersionRef> PackageVersions
        {
            get => _packageVersions.GetValue();
            set => _packageVersions.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _totalSize.SetAccessPath(path, validateHasBeenSet);
            _packageVersions.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
