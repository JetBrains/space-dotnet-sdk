// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class GitMergeBranchResult
     : IPropagatePropertyAccessPath
{
    public GitMergeBranchResult() { }
    
    public GitMergeBranchResult(GitMergeStatus status, string message, string? resultCommitId = null, List<GitUpdatedHead>? updatedHeads = null)
    {
        Status = status;
        Message = message;
        ResultCommitId = resultCommitId;
        UpdatedHeads = updatedHeads;
    }
    
    private PropertyValue<GitMergeStatus> _status = new PropertyValue<GitMergeStatus>(nameof(GitMergeBranchResult), nameof(Status), "status");
    
    [Required]
    [JsonPropertyName("status")]
    public GitMergeStatus Status
    {
        get => _status.GetValue(InlineErrors);
        set => _status.SetValue(value);
    }

    private PropertyValue<string> _message = new PropertyValue<string>(nameof(GitMergeBranchResult), nameof(Message), "message");
    
    [Required]
    [JsonPropertyName("message")]
    public string Message
    {
        get => _message.GetValue(InlineErrors);
        set => _message.SetValue(value);
    }

    private PropertyValue<string?> _resultCommitId = new PropertyValue<string?>(nameof(GitMergeBranchResult), nameof(ResultCommitId), "resultCommitId");
    
    [JsonPropertyName("resultCommitId")]
    public string? ResultCommitId
    {
        get => _resultCommitId.GetValue(InlineErrors);
        set => _resultCommitId.SetValue(value);
    }

    private PropertyValue<List<GitUpdatedHead>?> _updatedHeads = new PropertyValue<List<GitUpdatedHead>?>(nameof(GitMergeBranchResult), nameof(UpdatedHeads), "updatedHeads");
    
    [JsonPropertyName("updatedHeads")]
    public List<GitUpdatedHead>? UpdatedHeads
    {
        get => _updatedHeads.GetValue(InlineErrors);
        set => _updatedHeads.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _status.SetAccessPath(parentChainPath, validateHasBeenSet);
        _message.SetAccessPath(parentChainPath, validateHasBeenSet);
        _resultCommitId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _updatedHeads.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

