// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public class ProjectsForProjectPlanningIssuesFieldsVisibilityPatchRequest
     : IPropagatePropertyAccessPath
{
    public ProjectsForProjectPlanningIssuesFieldsVisibilityPatchRequest() { }
    
    public ProjectsForProjectPlanningIssuesFieldsVisibilityPatchRequest(IssueSystemFieldEnum field, bool visible)
    {
        Field = field;
        IsVisible = visible;
    }
    
    private PropertyValue<IssueSystemFieldEnum> _field = new PropertyValue<IssueSystemFieldEnum>(nameof(ProjectsForProjectPlanningIssuesFieldsVisibilityPatchRequest), nameof(Field), "field");
    
    [Required]
    [JsonPropertyName("field")]
    public IssueSystemFieldEnum Field
    {
        get => _field.GetValue(InlineErrors);
        set => _field.SetValue(value);
    }

    private PropertyValue<bool> _visible = new PropertyValue<bool>(nameof(ProjectsForProjectPlanningIssuesFieldsVisibilityPatchRequest), nameof(IsVisible), "visible");
    
    [Required]
    [JsonPropertyName("visible")]
    public bool IsVisible
    {
        get => _visible.GetValue(InlineErrors);
        set => _visible.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _field.SetAccessPath(parentChainPath, validateHasBeenSet);
        _visible.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

