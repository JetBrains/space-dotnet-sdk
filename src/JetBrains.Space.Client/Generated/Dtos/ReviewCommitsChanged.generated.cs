// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ReviewCommitsChanged
     : CompactFeedEvent, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "ReviewCommitsChanged";
    
    public ReviewCommitsChanged() { }
    
    public ReviewCommitsChanged(ReviewRevisionsChangedType changeType, bool initial, bool forcePush, List<ReviewCommitsChangedCommit> commits)
    {
        ChangeType = changeType;
        IsInitial = initial;
        IsForcePush = forcePush;
        Commits = commits;
    }
    
    private PropertyValue<ReviewRevisionsChangedType> _changeType = new PropertyValue<ReviewRevisionsChangedType>(nameof(ReviewCommitsChanged), nameof(ChangeType), "changeType");
    
    [Required]
    [JsonPropertyName("changeType")]
    public ReviewRevisionsChangedType ChangeType
    {
        get => _changeType.GetValue(InlineErrors);
        set => _changeType.SetValue(value);
    }

    private PropertyValue<bool> _initial = new PropertyValue<bool>(nameof(ReviewCommitsChanged), nameof(IsInitial), "initial");
    
    [Required]
    [JsonPropertyName("initial")]
    public bool IsInitial
    {
        get => _initial.GetValue(InlineErrors);
        set => _initial.SetValue(value);
    }

    private PropertyValue<bool> _forcePush = new PropertyValue<bool>(nameof(ReviewCommitsChanged), nameof(IsForcePush), "forcePush");
    
    [Required]
    [JsonPropertyName("forcePush")]
    public bool IsForcePush
    {
        get => _forcePush.GetValue(InlineErrors);
        set => _forcePush.SetValue(value);
    }

    private PropertyValue<List<ReviewCommitsChangedCommit>> _commits = new PropertyValue<List<ReviewCommitsChangedCommit>>(nameof(ReviewCommitsChanged), nameof(Commits), "commits", new List<ReviewCommitsChangedCommit>());
    
    [Required]
    [JsonPropertyName("commits")]
    public List<ReviewCommitsChangedCommit> Commits
    {
        get => _commits.GetValue(InlineErrors);
        set => _commits.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _changeType.SetAccessPath(parentChainPath, validateHasBeenSet);
        _initial.SetAccessPath(parentChainPath, validateHasBeenSet);
        _forcePush.SetAccessPath(parentChainPath, validateHasBeenSet);
        _commits.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

