// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CFEnumValuesModification
     : IPropagatePropertyAccessPath
{
    public CFEnumValuesModification() { }
    
    public CFEnumValuesModification(List<EnumValueData> valuesToAdd, List<EnumValueData> valuesToUpdate, List<string> valuesToDelete)
    {
        ValuesToAdd = valuesToAdd;
        ValuesToUpdate = valuesToUpdate;
        ValuesToDelete = valuesToDelete;
    }
    
    private PropertyValue<List<EnumValueData>> _valuesToAdd = new PropertyValue<List<EnumValueData>>(nameof(CFEnumValuesModification), nameof(ValuesToAdd), "valuesToAdd", new List<EnumValueData>());
    
    [Required]
    [JsonPropertyName("valuesToAdd")]
    public List<EnumValueData> ValuesToAdd
    {
        get => _valuesToAdd.GetValue(InlineErrors);
        set => _valuesToAdd.SetValue(value);
    }

    private PropertyValue<List<EnumValueData>> _valuesToUpdate = new PropertyValue<List<EnumValueData>>(nameof(CFEnumValuesModification), nameof(ValuesToUpdate), "valuesToUpdate", new List<EnumValueData>());
    
    [Required]
    [JsonPropertyName("valuesToUpdate")]
    public List<EnumValueData> ValuesToUpdate
    {
        get => _valuesToUpdate.GetValue(InlineErrors);
        set => _valuesToUpdate.SetValue(value);
    }

    private PropertyValue<List<string>> _valuesToDelete = new PropertyValue<List<string>>(nameof(CFEnumValuesModification), nameof(ValuesToDelete), "valuesToDelete", new List<string>());
    
    [Required]
    [JsonPropertyName("valuesToDelete")]
    public List<string> ValuesToDelete
    {
        get => _valuesToDelete.GetValue(InlineErrors);
        set => _valuesToDelete.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _valuesToAdd.SetAccessPath(parentChainPath, validateHasBeenSet);
        _valuesToUpdate.SetAccessPath(parentChainPath, validateHasBeenSet);
        _valuesToDelete.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

