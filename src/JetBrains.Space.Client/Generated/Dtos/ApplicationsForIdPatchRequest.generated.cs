// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Client.Internal;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public class ApplicationsForIdPatchRequest
         : IPropagatePropertyAccessPath
    {
        public ApplicationsForIdPatchRequest() { }
        
        public ApplicationsForIdPatchRequest(string? name = null, string? clientSecret = null, bool? clientCredentialsFlowEnabled = null, bool? codeFlowEnabled = null, string? codeFlowRedirectURIs = null, bool? implicitFlowEnabled = null, string? implicitFlowRedirectURIs = null, string? endpointUri = null)
        {
            Name = name;
            ClientSecret = clientSecret;
            IsClientCredentialsFlowEnabled = clientCredentialsFlowEnabled;
            IsCodeFlowEnabled = codeFlowEnabled;
            CodeFlowRedirectURIs = codeFlowRedirectURIs;
            IsImplicitFlowEnabled = implicitFlowEnabled;
            ImplicitFlowRedirectURIs = implicitFlowRedirectURIs;
            EndpointUri = endpointUri;
        }
        
        private PropertyValue<string?> _name = new PropertyValue<string?>(nameof(ApplicationsForIdPatchRequest), nameof(Name));
        
        [JsonPropertyName("name")]
        public string? Name
        {
            get => _name.GetValue();
            set => _name.SetValue(value);
        }
    
        private PropertyValue<string?> _clientSecret = new PropertyValue<string?>(nameof(ApplicationsForIdPatchRequest), nameof(ClientSecret));
        
        [JsonPropertyName("clientSecret")]
        public string? ClientSecret
        {
            get => _clientSecret.GetValue();
            set => _clientSecret.SetValue(value);
        }
    
        private PropertyValue<bool?> _clientCredentialsFlowEnabled = new PropertyValue<bool?>(nameof(ApplicationsForIdPatchRequest), nameof(IsClientCredentialsFlowEnabled));
        
        [JsonPropertyName("clientCredentialsFlowEnabled")]
        public bool? IsClientCredentialsFlowEnabled
        {
            get => _clientCredentialsFlowEnabled.GetValue();
            set => _clientCredentialsFlowEnabled.SetValue(value);
        }
    
        private PropertyValue<bool?> _codeFlowEnabled = new PropertyValue<bool?>(nameof(ApplicationsForIdPatchRequest), nameof(IsCodeFlowEnabled));
        
        [JsonPropertyName("codeFlowEnabled")]
        public bool? IsCodeFlowEnabled
        {
            get => _codeFlowEnabled.GetValue();
            set => _codeFlowEnabled.SetValue(value);
        }
    
        private PropertyValue<string?> _codeFlowRedirectURIs = new PropertyValue<string?>(nameof(ApplicationsForIdPatchRequest), nameof(CodeFlowRedirectURIs));
        
        [JsonPropertyName("codeFlowRedirectURIs")]
        public string? CodeFlowRedirectURIs
        {
            get => _codeFlowRedirectURIs.GetValue();
            set => _codeFlowRedirectURIs.SetValue(value);
        }
    
        private PropertyValue<bool?> _implicitFlowEnabled = new PropertyValue<bool?>(nameof(ApplicationsForIdPatchRequest), nameof(IsImplicitFlowEnabled));
        
        [JsonPropertyName("implicitFlowEnabled")]
        public bool? IsImplicitFlowEnabled
        {
            get => _implicitFlowEnabled.GetValue();
            set => _implicitFlowEnabled.SetValue(value);
        }
    
        private PropertyValue<string?> _implicitFlowRedirectURIs = new PropertyValue<string?>(nameof(ApplicationsForIdPatchRequest), nameof(ImplicitFlowRedirectURIs));
        
        [JsonPropertyName("implicitFlowRedirectURIs")]
        public string? ImplicitFlowRedirectURIs
        {
            get => _implicitFlowRedirectURIs.GetValue();
            set => _implicitFlowRedirectURIs.SetValue(value);
        }
    
        private PropertyValue<string?> _endpointUri = new PropertyValue<string?>(nameof(ApplicationsForIdPatchRequest), nameof(EndpointUri));
        
        [JsonPropertyName("endpointUri")]
        public string? EndpointUri
        {
            get => _endpointUri.GetValue();
            set => _endpointUri.SetValue(value);
        }
    
        public virtual void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _name.SetAccessPath(path, validateHasBeenSet);
            _clientSecret.SetAccessPath(path, validateHasBeenSet);
            _clientCredentialsFlowEnabled.SetAccessPath(path, validateHasBeenSet);
            _codeFlowEnabled.SetAccessPath(path, validateHasBeenSet);
            _codeFlowRedirectURIs.SetAccessPath(path, validateHasBeenSet);
            _implicitFlowEnabled.SetAccessPath(path, validateHasBeenSet);
            _implicitFlowRedirectURIs.SetAccessPath(path, validateHasBeenSet);
            _endpointUri.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
