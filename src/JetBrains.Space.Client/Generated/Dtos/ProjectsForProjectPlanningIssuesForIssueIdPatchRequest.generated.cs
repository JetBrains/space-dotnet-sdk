// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public class ProjectsForProjectPlanningIssuesForIssueIdPatchRequest
     : IPropagatePropertyAccessPath
{
    public ProjectsForProjectPlanningIssuesForIssueIdPatchRequest() { }
    
    public ProjectsForProjectPlanningIssuesForIssueIdPatchRequest(string? title = null, string? status = null, List<CustomFieldInputValue>? customFields = null, bool notifySubscribers = true, string? description = null, string? assignee = null, DateTime? dueDate = null)
    {
        Title = title;
        Description = description;
        Assignee = assignee;
        Status = status;
        DueDate = dueDate;
        CustomFields = (customFields ?? new List<CustomFieldInputValue>());
        IsNotifySubscribers = notifySubscribers;
    }
    
    private PropertyValue<string?> _title = new PropertyValue<string?>(nameof(ProjectsForProjectPlanningIssuesForIssueIdPatchRequest), nameof(Title), "title");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("title")]
    public string? Title
    {
        get => _title.GetValue(InlineErrors);
        set => _title.SetValue(value);
    }

    private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(ProjectsForProjectPlanningIssuesForIssueIdPatchRequest), nameof(Description), "description");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("description")]
    public string? Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<string?> _assignee = new PropertyValue<string?>(nameof(ProjectsForProjectPlanningIssuesForIssueIdPatchRequest), nameof(Assignee), "assignee");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("assignee")]
    public string? Assignee
    {
        get => _assignee.GetValue(InlineErrors);
        set => _assignee.SetValue(value);
    }

    private PropertyValue<string?> _status = new PropertyValue<string?>(nameof(ProjectsForProjectPlanningIssuesForIssueIdPatchRequest), nameof(Status), "status");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("status")]
    public string? Status
    {
        get => _status.GetValue(InlineErrors);
        set => _status.SetValue(value);
    }

    private PropertyValue<DateTime?> _dueDate = new PropertyValue<DateTime?>(nameof(ProjectsForProjectPlanningIssuesForIssueIdPatchRequest), nameof(DueDate), "dueDate");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("dueDate")]
    [JsonConverter(typeof(SpaceDateConverter))]
    public DateTime? DueDate
    {
        get => _dueDate.GetValue(InlineErrors);
        set => _dueDate.SetValue(value);
    }

    private PropertyValue<List<CustomFieldInputValue>> _customFields = new PropertyValue<List<CustomFieldInputValue>>(nameof(ProjectsForProjectPlanningIssuesForIssueIdPatchRequest), nameof(CustomFields), "customFields", new List<CustomFieldInputValue>());
    
    [JsonPropertyName("customFields")]
    public List<CustomFieldInputValue> CustomFields
    {
        get => _customFields.GetValue(InlineErrors);
        set => _customFields.SetValue(value);
    }

    private PropertyValue<bool> _notifySubscribers = new PropertyValue<bool>(nameof(ProjectsForProjectPlanningIssuesForIssueIdPatchRequest), nameof(IsNotifySubscribers), "notifySubscribers");
    
    [JsonPropertyName("notifySubscribers")]
    public bool IsNotifySubscribers
    {
        get => _notifySubscribers.GetValue(InlineErrors);
        set => _notifySubscribers.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _title.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _assignee.SetAccessPath(parentChainPath, validateHasBeenSet);
        _status.SetAccessPath(parentChainPath, validateHasBeenSet);
        _dueDate.SetAccessPath(parentChainPath, validateHasBeenSet);
        _customFields.SetAccessPath(parentChainPath, validateHasBeenSet);
        _notifySubscribers.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

