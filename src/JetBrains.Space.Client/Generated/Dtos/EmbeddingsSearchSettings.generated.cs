// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class EmbeddingsSearchSettings
     : IPropagatePropertyAccessPath
{
    public EmbeddingsSearchSettings() { }
    
    public EmbeddingsSearchSettings(bool? enableLineNumbers = null, bool? showFullCodeSnippets = null, bool? enableReranking = null)
    {
        IsEnableLineNumbers = enableLineNumbers;
        IsShowFullCodeSnippets = showFullCodeSnippets;
        IsEnableReranking = enableReranking;
    }
    
    private PropertyValue<bool?> _enableLineNumbers = new PropertyValue<bool?>(nameof(EmbeddingsSearchSettings), nameof(IsEnableLineNumbers), "enableLineNumbers");
    
    [JsonPropertyName("enableLineNumbers")]
    public bool? IsEnableLineNumbers
    {
        get => _enableLineNumbers.GetValue(InlineErrors);
        set => _enableLineNumbers.SetValue(value);
    }

    private PropertyValue<bool?> _showFullCodeSnippets = new PropertyValue<bool?>(nameof(EmbeddingsSearchSettings), nameof(IsShowFullCodeSnippets), "showFullCodeSnippets");
    
    [JsonPropertyName("showFullCodeSnippets")]
    public bool? IsShowFullCodeSnippets
    {
        get => _showFullCodeSnippets.GetValue(InlineErrors);
        set => _showFullCodeSnippets.SetValue(value);
    }

    private PropertyValue<bool?> _enableReranking = new PropertyValue<bool?>(nameof(EmbeddingsSearchSettings), nameof(IsEnableReranking), "enableReranking");
    
    [JsonPropertyName("enableReranking")]
    public bool? IsEnableReranking
    {
        get => _enableReranking.GetValue(InlineErrors);
        set => _enableReranking.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _enableLineNumbers.SetAccessPath(parentChainPath, validateHasBeenSet);
        _showFullCodeSnippets.SetAccessPath(parentChainPath, validateHasBeenSet);
        _enableReranking.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

