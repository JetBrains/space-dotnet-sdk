// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class UAUserAgreement
     : IPropagatePropertyAccessPath
{
    public UAUserAgreement() { }
    
    public UAUserAgreement(string id, string content, UAVersion version, DateTime updated)
    {
        Id = id;
        Content = content;
        Version = version;
        Updated = updated;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(UAUserAgreement), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _content = new PropertyValue<string>(nameof(UAUserAgreement), nameof(Content), "content");
    
    [Required]
    [JsonPropertyName("content")]
    public string Content
    {
        get => _content.GetValue(InlineErrors);
        set => _content.SetValue(value);
    }

    private PropertyValue<UAVersion> _version = new PropertyValue<UAVersion>(nameof(UAUserAgreement), nameof(Version), "version");
    
    [Required]
    [JsonPropertyName("version")]
    public UAVersion Version
    {
        get => _version.GetValue(InlineErrors);
        set => _version.SetValue(value);
    }

    private PropertyValue<DateTime> _updated = new PropertyValue<DateTime>(nameof(UAUserAgreement), nameof(Updated), "updated");
    
    [Required]
    [JsonPropertyName("updated")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime Updated
    {
        get => _updated.GetValue(InlineErrors);
        set => _updated.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _content.SetAccessPath(parentChainPath, validateHasBeenSet);
        _version.SetAccessPath(parentChainPath, validateHasBeenSet);
        _updated.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

