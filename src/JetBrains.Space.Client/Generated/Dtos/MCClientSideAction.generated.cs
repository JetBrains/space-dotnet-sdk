// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class MCClientSideAction
         : IPropagatePropertyAccessPath
    {
        public MCClientSideAction() { }
        
        public MCClientSideAction(string fallbackUrl, ClientSideActionContext? context = null)
        {
            FallbackUrl = fallbackUrl;
            Context = context;
        }
        
        private PropertyValue<string> _fallbackUrl = new PropertyValue<string>(nameof(MCClientSideAction), nameof(FallbackUrl));
        
        [Required]
        [JsonPropertyName("fallbackUrl")]
        public string FallbackUrl
        {
            get => _fallbackUrl.GetValue();
            set => _fallbackUrl.SetValue(value);
        }
    
        private PropertyValue<ClientSideActionContext?> _context = new PropertyValue<ClientSideActionContext?>(nameof(MCClientSideAction), nameof(Context));
        
        [JsonPropertyName("context")]
        public ClientSideActionContext? Context
        {
            get => _context.GetValue();
            set => _context.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _fallbackUrl.SetAccessPath(path, validateHasBeenSet);
            _context.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
