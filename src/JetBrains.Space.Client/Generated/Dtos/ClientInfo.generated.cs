// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Client.Internal;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class ClientInfo
         : IPropagatePropertyAccessPath
    {
        public ClientInfo() { }
        
        public ClientInfo(ClientOS? os = null, string? osVersion = null, ClientBrowser? browser = null, string? browserVersion = null, string? device = null, string? version = null)
        {
            Os = os;
            OsVersion = osVersion;
            Browser = browser;
            BrowserVersion = browserVersion;
            Device = device;
            Version = version;
        }
        
        private PropertyValue<ClientOS?> _os = new PropertyValue<ClientOS?>(nameof(ClientInfo), nameof(Os));
        
        [JsonPropertyName("os")]
        public ClientOS? Os
        {
            get => _os.GetValue();
            set => _os.SetValue(value);
        }
    
        private PropertyValue<string?> _osVersion = new PropertyValue<string?>(nameof(ClientInfo), nameof(OsVersion));
        
        [JsonPropertyName("osVersion")]
        public string? OsVersion
        {
            get => _osVersion.GetValue();
            set => _osVersion.SetValue(value);
        }
    
        private PropertyValue<ClientBrowser?> _browser = new PropertyValue<ClientBrowser?>(nameof(ClientInfo), nameof(Browser));
        
        [JsonPropertyName("browser")]
        public ClientBrowser? Browser
        {
            get => _browser.GetValue();
            set => _browser.SetValue(value);
        }
    
        private PropertyValue<string?> _browserVersion = new PropertyValue<string?>(nameof(ClientInfo), nameof(BrowserVersion));
        
        [JsonPropertyName("browserVersion")]
        public string? BrowserVersion
        {
            get => _browserVersion.GetValue();
            set => _browserVersion.SetValue(value);
        }
    
        private PropertyValue<string?> _device = new PropertyValue<string?>(nameof(ClientInfo), nameof(Device));
        
        [JsonPropertyName("device")]
        public string? Device
        {
            get => _device.GetValue();
            set => _device.SetValue(value);
        }
    
        private PropertyValue<string?> _version = new PropertyValue<string?>(nameof(ClientInfo), nameof(Version));
        
        [JsonPropertyName("version")]
        public string? Version
        {
            get => _version.GetValue();
            set => _version.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _os.SetAccessPath(path, validateHasBeenSet);
            _osVersion.SetAccessPath(path, validateHasBeenSet);
            _browser.SetAccessPath(path, validateHasBeenSet);
            _browserVersion.SetAccessPath(path, validateHasBeenSet);
            _device.SetAccessPath(path, validateHasBeenSet);
            _version.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
