// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class SafeMergeAttemptLiveStatusDTO
     : IPropagatePropertyAccessPath
{
    public SafeMergeAttemptLiveStatusDTO() { }
    
    public SafeMergeAttemptLiveStatusDTO(string mergeRobotId, SafeMergeState state, string commitId, int attempt, SafeMergeBuildsLiveStatusDTO buildsStatus, bool? canRetry = null)
    {
        MergeRobotId = mergeRobotId;
        State = state;
        CommitId = commitId;
        CanRetry = canRetry;
        Attempt = attempt;
        BuildsStatus = buildsStatus;
    }
    
    private PropertyValue<string> _mergeRobotId = new PropertyValue<string>(nameof(SafeMergeAttemptLiveStatusDTO), nameof(MergeRobotId), "mergeRobotId");
    
    [Required]
    [JsonPropertyName("mergeRobotId")]
    public string MergeRobotId
    {
        get => _mergeRobotId.GetValue(InlineErrors);
        set => _mergeRobotId.SetValue(value);
    }

    private PropertyValue<SafeMergeState> _state = new PropertyValue<SafeMergeState>(nameof(SafeMergeAttemptLiveStatusDTO), nameof(State), "state");
    
    [Required]
    [JsonPropertyName("state")]
    public SafeMergeState State
    {
        get => _state.GetValue(InlineErrors);
        set => _state.SetValue(value);
    }

    private PropertyValue<string> _commitId = new PropertyValue<string>(nameof(SafeMergeAttemptLiveStatusDTO), nameof(CommitId), "commitId");
    
    [Required]
    [JsonPropertyName("commitId")]
    public string CommitId
    {
        get => _commitId.GetValue(InlineErrors);
        set => _commitId.SetValue(value);
    }

    private PropertyValue<bool?> _canRetry = new PropertyValue<bool?>(nameof(SafeMergeAttemptLiveStatusDTO), nameof(CanRetry), "canRetry");
    
    [JsonPropertyName("canRetry")]
    public bool? CanRetry
    {
        get => _canRetry.GetValue(InlineErrors);
        set => _canRetry.SetValue(value);
    }

    private PropertyValue<int> _attempt = new PropertyValue<int>(nameof(SafeMergeAttemptLiveStatusDTO), nameof(Attempt), "attempt");
    
    [Required]
    [JsonPropertyName("attempt")]
    public int Attempt
    {
        get => _attempt.GetValue(InlineErrors);
        set => _attempt.SetValue(value);
    }

    private PropertyValue<SafeMergeBuildsLiveStatusDTO> _buildsStatus = new PropertyValue<SafeMergeBuildsLiveStatusDTO>(nameof(SafeMergeAttemptLiveStatusDTO), nameof(BuildsStatus), "buildsStatus");
    
    [Required]
    [JsonPropertyName("buildsStatus")]
    public SafeMergeBuildsLiveStatusDTO BuildsStatus
    {
        get => _buildsStatus.GetValue(InlineErrors);
        set => _buildsStatus.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _mergeRobotId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _state.SetAccessPath(parentChainPath, validateHasBeenSet);
        _commitId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _canRetry.SetAccessPath(parentChainPath, validateHasBeenSet);
        _attempt.SetAccessPath(parentChainPath, validateHasBeenSet);
        _buildsStatus.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

