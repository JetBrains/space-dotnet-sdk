// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ESLdapAuthModuleSettings
     : ESExternalPasswordAuthModuleSettings, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public override string? ClassName => "ES_LdapAuthModuleSettings";
    
    public ESLdapAuthModuleSettings() { }
    
    public ESLdapAuthModuleSettings(LdapModuleType type, bool registerNewUsers, string serverUrl, int connectionTimeout, int readTimeout, List<ESTeamMapping> teamMappings, bool referralIgnored, string filter, string bindUserDN, string bindUserPassword, ESLdapAttributeNames attributeNames, SSLKeystore? sslKeystore = null)
    {
        Type = type;
        IsRegisterNewUsers = registerNewUsers;
        ServerUrl = serverUrl;
        ConnectionTimeout = connectionTimeout;
        ReadTimeout = readTimeout;
        SslKeystore = sslKeystore;
        TeamMappings = teamMappings;
        IsReferralIgnored = referralIgnored;
        Filter = filter;
        BindUserDN = bindUserDN;
        BindUserPassword = bindUserPassword;
        AttributeNames = attributeNames;
    }
    
    private PropertyValue<LdapModuleType> _type = new PropertyValue<LdapModuleType>(nameof(ESLdapAuthModuleSettings), nameof(Type), "type");
    
    [Required]
    [JsonPropertyName("type")]
    public LdapModuleType Type
    {
        get => _type.GetValue(InlineErrors);
        set => _type.SetValue(value);
    }

    private PropertyValue<bool> _registerNewUsers = new PropertyValue<bool>(nameof(ESLdapAuthModuleSettings), nameof(IsRegisterNewUsers), "registerNewUsers");
    
    [Required]
    [JsonPropertyName("registerNewUsers")]
    public bool IsRegisterNewUsers
    {
        get => _registerNewUsers.GetValue(InlineErrors);
        set => _registerNewUsers.SetValue(value);
    }

    private PropertyValue<string> _serverUrl = new PropertyValue<string>(nameof(ESLdapAuthModuleSettings), nameof(ServerUrl), "serverUrl");
    
    [Required]
    [JsonPropertyName("serverUrl")]
    public string ServerUrl
    {
        get => _serverUrl.GetValue(InlineErrors);
        set => _serverUrl.SetValue(value);
    }

    private PropertyValue<int> _connectionTimeout = new PropertyValue<int>(nameof(ESLdapAuthModuleSettings), nameof(ConnectionTimeout), "connectionTimeout");
    
    [Required]
    [JsonPropertyName("connectionTimeout")]
    public int ConnectionTimeout
    {
        get => _connectionTimeout.GetValue(InlineErrors);
        set => _connectionTimeout.SetValue(value);
    }

    private PropertyValue<int> _readTimeout = new PropertyValue<int>(nameof(ESLdapAuthModuleSettings), nameof(ReadTimeout), "readTimeout");
    
    [Required]
    [JsonPropertyName("readTimeout")]
    public int ReadTimeout
    {
        get => _readTimeout.GetValue(InlineErrors);
        set => _readTimeout.SetValue(value);
    }

    private PropertyValue<SSLKeystore?> _sslKeystore = new PropertyValue<SSLKeystore?>(nameof(ESLdapAuthModuleSettings), nameof(SslKeystore), "sslKeystore");
    
    [JsonPropertyName("sslKeystore")]
    public SSLKeystore? SslKeystore
    {
        get => _sslKeystore.GetValue(InlineErrors);
        set => _sslKeystore.SetValue(value);
    }

    private PropertyValue<List<ESTeamMapping>> _teamMappings = new PropertyValue<List<ESTeamMapping>>(nameof(ESLdapAuthModuleSettings), nameof(TeamMappings), "teamMappings", new List<ESTeamMapping>());
    
    [Required]
    [JsonPropertyName("teamMappings")]
    public List<ESTeamMapping> TeamMappings
    {
        get => _teamMappings.GetValue(InlineErrors);
        set => _teamMappings.SetValue(value);
    }

    private PropertyValue<bool> _referralIgnored = new PropertyValue<bool>(nameof(ESLdapAuthModuleSettings), nameof(IsReferralIgnored), "referralIgnored");
    
    [Required]
    [JsonPropertyName("referralIgnored")]
    public bool IsReferralIgnored
    {
        get => _referralIgnored.GetValue(InlineErrors);
        set => _referralIgnored.SetValue(value);
    }

    private PropertyValue<string> _filter = new PropertyValue<string>(nameof(ESLdapAuthModuleSettings), nameof(Filter), "filter");
    
    [Required]
    [JsonPropertyName("filter")]
    public string Filter
    {
        get => _filter.GetValue(InlineErrors);
        set => _filter.SetValue(value);
    }

    private PropertyValue<string> _bindUserDN = new PropertyValue<string>(nameof(ESLdapAuthModuleSettings), nameof(BindUserDN), "bindUserDN");
    
    [Required]
    [JsonPropertyName("bindUserDN")]
    public string BindUserDN
    {
        get => _bindUserDN.GetValue(InlineErrors);
        set => _bindUserDN.SetValue(value);
    }

    private PropertyValue<string> _bindUserPassword = new PropertyValue<string>(nameof(ESLdapAuthModuleSettings), nameof(BindUserPassword), "bindUserPassword");
    
    [Required]
    [JsonPropertyName("bindUserPassword")]
    public string BindUserPassword
    {
        get => _bindUserPassword.GetValue(InlineErrors);
        set => _bindUserPassword.SetValue(value);
    }

    private PropertyValue<ESLdapAttributeNames> _attributeNames = new PropertyValue<ESLdapAttributeNames>(nameof(ESLdapAuthModuleSettings), nameof(AttributeNames), "attributeNames");
    
    [Required]
    [JsonPropertyName("attributeNames")]
    public ESLdapAttributeNames AttributeNames
    {
        get => _attributeNames.GetValue(InlineErrors);
        set => _attributeNames.SetValue(value);
    }

    public override void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _type.SetAccessPath(parentChainPath, validateHasBeenSet);
        _registerNewUsers.SetAccessPath(parentChainPath, validateHasBeenSet);
        _serverUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _connectionTimeout.SetAccessPath(parentChainPath, validateHasBeenSet);
        _readTimeout.SetAccessPath(parentChainPath, validateHasBeenSet);
        _sslKeystore.SetAccessPath(parentChainPath, validateHasBeenSet);
        _teamMappings.SetAccessPath(parentChainPath, validateHasBeenSet);
        _referralIgnored.SetAccessPath(parentChainPath, validateHasBeenSet);
        _filter.SetAccessPath(parentChainPath, validateHasBeenSet);
        _bindUserDN.SetAccessPath(parentChainPath, validateHasBeenSet);
        _bindUserPassword.SetAccessPath(parentChainPath, validateHasBeenSet);
        _attributeNames.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

