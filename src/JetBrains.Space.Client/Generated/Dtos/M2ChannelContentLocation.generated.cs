// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class M2ChannelContentLocation
     : M2ChannelContactInfo, M2ChannelContentInfo, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "M2ChannelContentLocation";
    
    public M2ChannelContentLocation() { }
    
    public M2ChannelContentLocation(TDLocation location, ChannelSpecificDefaults notificationDefaults)
    {
        Location = location;
        NotificationDefaults = notificationDefaults;
    }
    
    private PropertyValue<TDLocation> _location = new PropertyValue<TDLocation>(nameof(M2ChannelContentLocation), nameof(Location));
    
    [Required]
    [JsonPropertyName("location")]
    public TDLocation Location
    {
        get => _location.GetValue();
        set => _location.SetValue(value);
    }

    private PropertyValue<ChannelSpecificDefaults> _notificationDefaults = new PropertyValue<ChannelSpecificDefaults>(nameof(M2ChannelContentLocation), nameof(NotificationDefaults));
    
    [Required]
    [JsonPropertyName("notificationDefaults")]
    public ChannelSpecificDefaults NotificationDefaults
    {
        get => _notificationDefaults.GetValue();
        set => _notificationDefaults.SetValue(value);
    }

    public  void SetAccessPath(string path, bool validateHasBeenSet)
    {
        _location.SetAccessPath(path, validateHasBeenSet);
        _notificationDefaults.SetAccessPath(path, validateHasBeenSet);
    }

}

