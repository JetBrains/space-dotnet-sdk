// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

internal class ProjectsAiAgentsCreateGenericTaskPostRequest
     : IPropagatePropertyAccessPath
{
    public ProjectsAiAgentsCreateGenericTaskPostRequest() { }
    
    public ProjectsAiAgentsCreateGenericTaskPostRequest(ProjectIdentifier project, string repository, string taskDescription, AiAgentType agentType, string? llmProfileId = null, AiAgentTaskSettings? settings = null)
    {
        Project = project;
        Repository = repository;
        TaskDescription = taskDescription;
        AgentType = agentType;
        LlmProfileId = llmProfileId;
        Settings = settings;
    }
    
    private PropertyValue<ProjectIdentifier> _project = new PropertyValue<ProjectIdentifier>(nameof(ProjectsAiAgentsCreateGenericTaskPostRequest), nameof(Project), "project");
    
    [Required]
    [JsonPropertyName("project")]
    public ProjectIdentifier Project
    {
        get => _project.GetValue(InlineErrors);
        set => _project.SetValue(value);
    }

    private PropertyValue<string> _repository = new PropertyValue<string>(nameof(ProjectsAiAgentsCreateGenericTaskPostRequest), nameof(Repository), "repository");
    
    [Required]
    [JsonPropertyName("repository")]
    public string Repository
    {
        get => _repository.GetValue(InlineErrors);
        set => _repository.SetValue(value);
    }

    private PropertyValue<string> _taskDescription = new PropertyValue<string>(nameof(ProjectsAiAgentsCreateGenericTaskPostRequest), nameof(TaskDescription), "taskDescription");
    
    [Required]
    [JsonPropertyName("taskDescription")]
    public string TaskDescription
    {
        get => _taskDescription.GetValue(InlineErrors);
        set => _taskDescription.SetValue(value);
    }

    private PropertyValue<AiAgentType> _agentType = new PropertyValue<AiAgentType>(nameof(ProjectsAiAgentsCreateGenericTaskPostRequest), nameof(AgentType), "agentType");
    
    [Required]
    [JsonPropertyName("agentType")]
    public AiAgentType AgentType
    {
        get => _agentType.GetValue(InlineErrors);
        set => _agentType.SetValue(value);
    }

    private PropertyValue<string?> _llmProfileId = new PropertyValue<string?>(nameof(ProjectsAiAgentsCreateGenericTaskPostRequest), nameof(LlmProfileId), "llmProfileId");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("llmProfileId")]
    public string? LlmProfileId
    {
        get => _llmProfileId.GetValue(InlineErrors);
        set => _llmProfileId.SetValue(value);
    }

    private PropertyValue<AiAgentTaskSettings?> _settings = new PropertyValue<AiAgentTaskSettings?>(nameof(ProjectsAiAgentsCreateGenericTaskPostRequest), nameof(Settings), "settings");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("settings")]
    public AiAgentTaskSettings? Settings
    {
        get => _settings.GetValue(InlineErrors);
        set => _settings.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _project.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repository.SetAccessPath(parentChainPath, validateHasBeenSet);
        _taskDescription.SetAccessPath(parentChainPath, validateHasBeenSet);
        _agentType.SetAccessPath(parentChainPath, validateHasBeenSet);
        _llmProfileId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _settings.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

