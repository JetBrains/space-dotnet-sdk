// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ESSamlAuthModuleSettings
     : ESFederatedAuthModuleSettings, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public override string? ClassName => "ES_SamlAuthModuleSettings";
    
    public ESSamlAuthModuleSettings() { }
    
    public ESSamlAuthModuleSettings(string idpUrl, string idpEntityId, string idpCertificateSHA256, string spEntityId, bool registerNewUsers, ESSamlAttributeNames attributeNames, SSLKeystore? sslKeystore = null, string? contactProfileId = null, List<SamlRegisterNewUserRule>? registerNewUserRules = null)
    {
        IdpUrl = idpUrl;
        IdpEntityId = idpEntityId;
        IdpCertificateSHA256 = idpCertificateSHA256;
        SpEntityId = spEntityId;
        SslKeystore = sslKeystore;
        IsRegisterNewUsers = registerNewUsers;
        ContactProfileId = contactProfileId;
        AttributeNames = attributeNames;
        RegisterNewUserRules = registerNewUserRules;
    }
    
    private PropertyValue<string> _idpUrl = new PropertyValue<string>(nameof(ESSamlAuthModuleSettings), nameof(IdpUrl), "idpUrl");
    
    [Required]
    [JsonPropertyName("idpUrl")]
    public string IdpUrl
    {
        get => _idpUrl.GetValue(InlineErrors);
        set => _idpUrl.SetValue(value);
    }

    private PropertyValue<string> _idpEntityId = new PropertyValue<string>(nameof(ESSamlAuthModuleSettings), nameof(IdpEntityId), "idpEntityId");
    
    [Required]
    [JsonPropertyName("idpEntityId")]
    public string IdpEntityId
    {
        get => _idpEntityId.GetValue(InlineErrors);
        set => _idpEntityId.SetValue(value);
    }

    private PropertyValue<string> _idpCertificateSHA256 = new PropertyValue<string>(nameof(ESSamlAuthModuleSettings), nameof(IdpCertificateSHA256), "idpCertificateSHA256");
    
    [Required]
    [JsonPropertyName("idpCertificateSHA256")]
    public string IdpCertificateSHA256
    {
        get => _idpCertificateSHA256.GetValue(InlineErrors);
        set => _idpCertificateSHA256.SetValue(value);
    }

    private PropertyValue<string> _spEntityId = new PropertyValue<string>(nameof(ESSamlAuthModuleSettings), nameof(SpEntityId), "spEntityId");
    
    [Required]
    [JsonPropertyName("spEntityId")]
    public string SpEntityId
    {
        get => _spEntityId.GetValue(InlineErrors);
        set => _spEntityId.SetValue(value);
    }

    private PropertyValue<SSLKeystore?> _sslKeystore = new PropertyValue<SSLKeystore?>(nameof(ESSamlAuthModuleSettings), nameof(SslKeystore), "sslKeystore");
    
    [JsonPropertyName("sslKeystore")]
    public SSLKeystore? SslKeystore
    {
        get => _sslKeystore.GetValue(InlineErrors);
        set => _sslKeystore.SetValue(value);
    }

    private PropertyValue<bool> _registerNewUsers = new PropertyValue<bool>(nameof(ESSamlAuthModuleSettings), nameof(IsRegisterNewUsers), "registerNewUsers");
    
    [Required]
    [JsonPropertyName("registerNewUsers")]
    public bool IsRegisterNewUsers
    {
        get => _registerNewUsers.GetValue(InlineErrors);
        set => _registerNewUsers.SetValue(value);
    }

    private PropertyValue<string?> _contactProfileId = new PropertyValue<string?>(nameof(ESSamlAuthModuleSettings), nameof(ContactProfileId), "contactProfileId");
    
    [JsonPropertyName("contactProfileId")]
    public string? ContactProfileId
    {
        get => _contactProfileId.GetValue(InlineErrors);
        set => _contactProfileId.SetValue(value);
    }

    private PropertyValue<ESSamlAttributeNames> _attributeNames = new PropertyValue<ESSamlAttributeNames>(nameof(ESSamlAuthModuleSettings), nameof(AttributeNames), "attributeNames");
    
    [Required]
    [JsonPropertyName("attributeNames")]
    public ESSamlAttributeNames AttributeNames
    {
        get => _attributeNames.GetValue(InlineErrors);
        set => _attributeNames.SetValue(value);
    }

    private PropertyValue<List<SamlRegisterNewUserRule>?> _registerNewUserRules = new PropertyValue<List<SamlRegisterNewUserRule>?>(nameof(ESSamlAuthModuleSettings), nameof(RegisterNewUserRules), "registerNewUserRules");
    
    [JsonPropertyName("registerNewUserRules")]
    public List<SamlRegisterNewUserRule>? RegisterNewUserRules
    {
        get => _registerNewUserRules.GetValue(InlineErrors);
        set => _registerNewUserRules.SetValue(value);
    }

    public override void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _idpUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _idpEntityId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _idpCertificateSHA256.SetAccessPath(parentChainPath, validateHasBeenSet);
        _spEntityId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _sslKeystore.SetAccessPath(parentChainPath, validateHasBeenSet);
        _registerNewUsers.SetAccessPath(parentChainPath, validateHasBeenSet);
        _contactProfileId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _attributeNames.SetAccessPath(parentChainPath, validateHasBeenSet);
        _registerNewUserRules.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

