// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class AppMessageDeliveryDTO
     : IPropagatePropertyAccessPath
{
    public AppMessageDeliveryDTO() { }
    
    public AppMessageDeliveryDTO(string id, AppMessageDeliveryType messageType, bool successful, DateTime sentAt, string duration, string method, WebhookRecord? webhook = null, string? deliveryId = null, string? url = null, List<HttpHeaderDTO>? requestHeaders = null, string? requestBody = null, int? responseStatusCode = null, List<HttpHeaderDTO>? responseHeaders = null, string? responseBody = null, AppMessageDeliveryDTOClientErrorDTO? httpClientError = null)
    {
        Id = id;
        MessageType = messageType;
        Webhook = webhook;
        DeliveryId = deliveryId;
        IsSuccessful = successful;
        SentAt = sentAt;
        Duration = duration;
        Method = method;
        Url = url;
        RequestHeaders = requestHeaders;
        RequestBody = requestBody;
        ResponseStatusCode = responseStatusCode;
        ResponseHeaders = responseHeaders;
        ResponseBody = responseBody;
        HttpClientError = httpClientError;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(AppMessageDeliveryDTO), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<AppMessageDeliveryType> _messageType = new PropertyValue<AppMessageDeliveryType>(nameof(AppMessageDeliveryDTO), nameof(MessageType), "messageType");
    
    [Required]
    [JsonPropertyName("messageType")]
    public AppMessageDeliveryType MessageType
    {
        get => _messageType.GetValue(InlineErrors);
        set => _messageType.SetValue(value);
    }

    private PropertyValue<WebhookRecord?> _webhook = new PropertyValue<WebhookRecord?>(nameof(AppMessageDeliveryDTO), nameof(Webhook), "webhook");
    
    [JsonPropertyName("webhook")]
    public WebhookRecord? Webhook
    {
        get => _webhook.GetValue(InlineErrors);
        set => _webhook.SetValue(value);
    }

    private PropertyValue<string?> _deliveryId = new PropertyValue<string?>(nameof(AppMessageDeliveryDTO), nameof(DeliveryId), "deliveryId");
    
    [JsonPropertyName("deliveryId")]
    public string? DeliveryId
    {
        get => _deliveryId.GetValue(InlineErrors);
        set => _deliveryId.SetValue(value);
    }

    private PropertyValue<bool> _successful = new PropertyValue<bool>(nameof(AppMessageDeliveryDTO), nameof(IsSuccessful), "successful");
    
    [Required]
    [JsonPropertyName("successful")]
    public bool IsSuccessful
    {
        get => _successful.GetValue(InlineErrors);
        set => _successful.SetValue(value);
    }

    private PropertyValue<DateTime> _sentAt = new PropertyValue<DateTime>(nameof(AppMessageDeliveryDTO), nameof(SentAt), "sentAt");
    
    [Required]
    [JsonPropertyName("sentAt")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime SentAt
    {
        get => _sentAt.GetValue(InlineErrors);
        set => _sentAt.SetValue(value);
    }

    private PropertyValue<string> _duration = new PropertyValue<string>(nameof(AppMessageDeliveryDTO), nameof(Duration), "duration");
    
    [Required]
    [JsonPropertyName("duration")]
    public string Duration
    {
        get => _duration.GetValue(InlineErrors);
        set => _duration.SetValue(value);
    }

    private PropertyValue<string> _method = new PropertyValue<string>(nameof(AppMessageDeliveryDTO), nameof(Method), "method");
    
    [Required]
    [JsonPropertyName("method")]
    public string Method
    {
        get => _method.GetValue(InlineErrors);
        set => _method.SetValue(value);
    }

    private PropertyValue<string?> _url = new PropertyValue<string?>(nameof(AppMessageDeliveryDTO), nameof(Url), "url");
    
    [JsonPropertyName("url")]
    public string? Url
    {
        get => _url.GetValue(InlineErrors);
        set => _url.SetValue(value);
    }

    private PropertyValue<List<HttpHeaderDTO>?> _requestHeaders = new PropertyValue<List<HttpHeaderDTO>?>(nameof(AppMessageDeliveryDTO), nameof(RequestHeaders), "requestHeaders");
    
    [JsonPropertyName("requestHeaders")]
    public List<HttpHeaderDTO>? RequestHeaders
    {
        get => _requestHeaders.GetValue(InlineErrors);
        set => _requestHeaders.SetValue(value);
    }

    private PropertyValue<string?> _requestBody = new PropertyValue<string?>(nameof(AppMessageDeliveryDTO), nameof(RequestBody), "requestBody");
    
    [JsonPropertyName("requestBody")]
    public string? RequestBody
    {
        get => _requestBody.GetValue(InlineErrors);
        set => _requestBody.SetValue(value);
    }

    private PropertyValue<int?> _responseStatusCode = new PropertyValue<int?>(nameof(AppMessageDeliveryDTO), nameof(ResponseStatusCode), "responseStatusCode");
    
    [JsonPropertyName("responseStatusCode")]
    public int? ResponseStatusCode
    {
        get => _responseStatusCode.GetValue(InlineErrors);
        set => _responseStatusCode.SetValue(value);
    }

    private PropertyValue<List<HttpHeaderDTO>?> _responseHeaders = new PropertyValue<List<HttpHeaderDTO>?>(nameof(AppMessageDeliveryDTO), nameof(ResponseHeaders), "responseHeaders");
    
    [JsonPropertyName("responseHeaders")]
    public List<HttpHeaderDTO>? ResponseHeaders
    {
        get => _responseHeaders.GetValue(InlineErrors);
        set => _responseHeaders.SetValue(value);
    }

    private PropertyValue<string?> _responseBody = new PropertyValue<string?>(nameof(AppMessageDeliveryDTO), nameof(ResponseBody), "responseBody");
    
    [JsonPropertyName("responseBody")]
    public string? ResponseBody
    {
        get => _responseBody.GetValue(InlineErrors);
        set => _responseBody.SetValue(value);
    }

    private PropertyValue<AppMessageDeliveryDTOClientErrorDTO?> _httpClientError = new PropertyValue<AppMessageDeliveryDTOClientErrorDTO?>(nameof(AppMessageDeliveryDTO), nameof(HttpClientError), "httpClientError");
    
    [JsonPropertyName("httpClientError")]
    public AppMessageDeliveryDTOClientErrorDTO? HttpClientError
    {
        get => _httpClientError.GetValue(InlineErrors);
        set => _httpClientError.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _messageType.SetAccessPath(parentChainPath, validateHasBeenSet);
        _webhook.SetAccessPath(parentChainPath, validateHasBeenSet);
        _deliveryId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _successful.SetAccessPath(parentChainPath, validateHasBeenSet);
        _sentAt.SetAccessPath(parentChainPath, validateHasBeenSet);
        _duration.SetAccessPath(parentChainPath, validateHasBeenSet);
        _method.SetAccessPath(parentChainPath, validateHasBeenSet);
        _url.SetAccessPath(parentChainPath, validateHasBeenSet);
        _requestHeaders.SetAccessPath(parentChainPath, validateHasBeenSet);
        _requestBody.SetAccessPath(parentChainPath, validateHasBeenSet);
        _responseStatusCode.SetAccessPath(parentChainPath, validateHasBeenSet);
        _responseHeaders.SetAccessPath(parentChainPath, validateHasBeenSet);
        _responseBody.SetAccessPath(parentChainPath, validateHasBeenSet);
        _httpClientError.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

