// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public interface FeedEvent
     : M2ItemContentDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    public static CodeAnalysisCompletedFeedEvent CodeAnalysisCompleted(ProjectKey projectKey, int reviewNumber, string revision, string toolName, List<MergeRequestCodeIssueStatsForLevel> issuesCountByLevel, string? revisionLink = null)
        => new CodeAnalysisCompletedFeedEvent(projectKey: projectKey, reviewNumber: reviewNumber, revision: revision, toolName: toolName, issuesCountByLevel: issuesCountByLevel, revisionLink: revisionLink);
    
    public static CodeDiscussionAddedFeedEvent CodeDiscussionAdded(CodeDiscussionRecord codeDiscussion, CodeReviewRecord codeReview)
        => new CodeDiscussionAddedFeedEvent(codeDiscussion: codeDiscussion, codeReview: codeReview);
    
    public static CodeReviewDiscussionAddedFeedEvent CodeReviewDiscussionAdded(CodeReviewDiscussionRecord discussion)
        => new CodeReviewDiscussionAddedFeedEvent(discussion: discussion);
    
    public static MergeRequestBranchDeletedEvent MergeRequestBranchDeletedEvent(string repository, string branch, MergeRequestBranchType branchType)
        => new MergeRequestBranchDeletedEvent(repository: repository, branch: branch, branchType: branchType);
    
    public static MergeRequestBranchRestoredEvent MergeRequestBranchRestoredEvent(string repository, string branch, MergeRequestBranchType branchType)
        => new MergeRequestBranchRestoredEvent(repository: repository, branch: branch, branchType: branchType);
    
    public static MergeRequestMergedEvent MergeRequestMergedEvent(string repository, string sourceBranch, string targetBranch)
        => new MergeRequestMergedEvent(repository: repository, sourceBranch: sourceBranch, targetBranch: targetBranch);
    
    public static ReviewBranchTrackEvent ReviewBranchTrackEvent(string repository, string branch, bool track)
        => new ReviewBranchTrackEvent(repository: repository, branch: branch, track: track);
    
    public static ReviewCompletionStateChangedEvent ReviewCompletionStateChangedEvent(ReviewerState state)
        => new ReviewCompletionStateChangedEvent(state: state);
    
    public static ReviewCreatedEvent ReviewCreatedEvent(string projectKey, string reviewId, int reviewNumber, ReviewType reviewType, List<TDMemberProfile> descriptionEditedByProfileIds, CodeReviewDescription? description = null, List<UnfurlDetailsCommit>? commits = null)
        => new ReviewCreatedEvent(projectKey: projectKey, reviewId: reviewId, reviewNumber: reviewNumber, reviewType: reviewType, descriptionEditedByProfileIds: descriptionEditedByProfileIds, description: description, commits: commits);
    
    public static ReviewRevisionsChangedEvent ReviewRevisionsChangedEvent(List<RepositoryCommitRecord> commits, ReviewRevisionsChangedType changeType, string? projectKey = null, CodeReviewRecord? review = null)
        => new ReviewRevisionsChangedEvent(commits: commits, changeType: changeType, projectKey: projectKey, review: review);
    
    public static ReviewStateChangedEvent ReviewStateChangedEvent(CodeReviewState state, CodeReviewRecord? review = null)
        => new ReviewStateChangedEvent(state: state, review: review);
    
    public static ReviewTitleChangedEvent ReviewTitleChangedEvent(string oldTitle, string newTitle)
        => new ReviewTitleChangedEvent(oldTitle: oldTitle, newTitle: newTitle);
    
    public static ReviewerChangedEvent ReviewerChangedEvent(TDMemberProfile uid, ReviewerChangedType changeType)
        => new ReviewerChangedEvent(uid: uid, changeType: changeType);
    
}

