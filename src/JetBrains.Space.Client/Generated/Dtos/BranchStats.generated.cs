// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class BranchStats
     : IPropagatePropertyAccessPath
{
    public BranchStats() { }
    
    public BranchStats(int ahead, bool? isBehind = null)
    {
        Ahead = ahead;
        IsBehind = isBehind;
    }
    
    private PropertyValue<int> _ahead = new PropertyValue<int>(nameof(BranchStats), nameof(Ahead), "ahead");
    
    [Required]
    [JsonPropertyName("ahead")]
    public int Ahead
    {
        get => _ahead.GetValue(InlineErrors);
        set => _ahead.SetValue(value);
    }

    private PropertyValue<bool?> _isBehind = new PropertyValue<bool?>(nameof(BranchStats), nameof(IsBehind), "isBehind");
    
    [JsonPropertyName("isBehind")]
    public bool? IsBehind
    {
        get => _isBehind.GetValue(InlineErrors);
        set => _isBehind.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _ahead.SetAccessPath(parentChainPath, validateHasBeenSet);
        _isBehind.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

