// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ParticipantStateData
     : IPropagatePropertyAccessPath
{
    public ParticipantStateData() { }
    
    public ParticipantStateData(bool audioEnabled, bool videoEnabled, bool screenShared, int? qualitiesCount = null)
    {
        IsAudioEnabled = audioEnabled;
        IsVideoEnabled = videoEnabled;
        IsScreenShared = screenShared;
        QualitiesCount = qualitiesCount;
    }
    
    private PropertyValue<bool> _audioEnabled = new PropertyValue<bool>(nameof(ParticipantStateData), nameof(IsAudioEnabled), "audioEnabled");
    
    [Required]
    [JsonPropertyName("audioEnabled")]
    public bool IsAudioEnabled
    {
        get => _audioEnabled.GetValue(InlineErrors);
        set => _audioEnabled.SetValue(value);
    }

    private PropertyValue<bool> _videoEnabled = new PropertyValue<bool>(nameof(ParticipantStateData), nameof(IsVideoEnabled), "videoEnabled");
    
    [Required]
    [JsonPropertyName("videoEnabled")]
    public bool IsVideoEnabled
    {
        get => _videoEnabled.GetValue(InlineErrors);
        set => _videoEnabled.SetValue(value);
    }

    private PropertyValue<bool> _screenShared = new PropertyValue<bool>(nameof(ParticipantStateData), nameof(IsScreenShared), "screenShared");
    
    [Required]
    [JsonPropertyName("screenShared")]
    public bool IsScreenShared
    {
        get => _screenShared.GetValue(InlineErrors);
        set => _screenShared.SetValue(value);
    }

    private PropertyValue<int?> _qualitiesCount = new PropertyValue<int?>(nameof(ParticipantStateData), nameof(QualitiesCount), "qualitiesCount");
    
    [JsonPropertyName("qualitiesCount")]
    public int? QualitiesCount
    {
        get => _qualitiesCount.GetValue(InlineErrors);
        set => _qualitiesCount.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _audioEnabled.SetAccessPath(parentChainPath, validateHasBeenSet);
        _videoEnabled.SetAccessPath(parentChainPath, validateHasBeenSet);
        _screenShared.SetAccessPath(parentChainPath, validateHasBeenSet);
        _qualitiesCount.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

