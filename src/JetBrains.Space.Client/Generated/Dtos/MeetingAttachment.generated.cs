// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class MeetingAttachment
     : IPropagatePropertyAccessPath
{
    public MeetingAttachment() { }
    
    public MeetingAttachment(string? fileUrl = null, string? title = null, string? mimeType = null, string? fileId = null, string? source = null)
    {
        FileUrl = fileUrl;
        Title = title;
        MimeType = mimeType;
        FileId = fileId;
        Source = source;
    }
    
    private PropertyValue<string?> _fileUrl = new PropertyValue<string?>(nameof(MeetingAttachment), nameof(FileUrl), "fileUrl");
    
    [JsonPropertyName("fileUrl")]
    public string? FileUrl
    {
        get => _fileUrl.GetValue(InlineErrors);
        set => _fileUrl.SetValue(value);
    }

    private PropertyValue<string?> _title = new PropertyValue<string?>(nameof(MeetingAttachment), nameof(Title), "title");
    
    [JsonPropertyName("title")]
    public string? Title
    {
        get => _title.GetValue(InlineErrors);
        set => _title.SetValue(value);
    }

    private PropertyValue<string?> _mimeType = new PropertyValue<string?>(nameof(MeetingAttachment), nameof(MimeType), "mimeType");
    
    [JsonPropertyName("mimeType")]
    public string? MimeType
    {
        get => _mimeType.GetValue(InlineErrors);
        set => _mimeType.SetValue(value);
    }

    private PropertyValue<string?> _fileId = new PropertyValue<string?>(nameof(MeetingAttachment), nameof(FileId), "fileId");
    
    [JsonPropertyName("fileId")]
    public string? FileId
    {
        get => _fileId.GetValue(InlineErrors);
        set => _fileId.SetValue(value);
    }

    private PropertyValue<string?> _source = new PropertyValue<string?>(nameof(MeetingAttachment), nameof(Source), "source");
    
    [JsonPropertyName("source")]
    public string? Source
    {
        get => _source.GetValue(InlineErrors);
        set => _source.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _fileUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _title.SetAccessPath(parentChainPath, validateHasBeenSet);
        _mimeType.SetAccessPath(parentChainPath, validateHasBeenSet);
        _fileId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _source.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

