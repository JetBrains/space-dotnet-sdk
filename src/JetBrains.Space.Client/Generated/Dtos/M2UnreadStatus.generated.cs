// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class M2UnreadStatus
     : IPropagatePropertyAccessPath
{
    public M2UnreadStatus() { }
    
    public M2UnreadStatus(bool unread, int counter, string id)
    {
        IsUnread = unread;
        Counter = counter;
        Id = id;
    }
    
    private PropertyValue<bool> _unread = new PropertyValue<bool>(nameof(M2UnreadStatus), nameof(IsUnread), "unread");
    
    [Required]
    [JsonPropertyName("unread")]
    public bool IsUnread
    {
        get => _unread.GetValue(InlineErrors);
        set => _unread.SetValue(value);
    }

    private PropertyValue<int> _counter = new PropertyValue<int>(nameof(M2UnreadStatus), nameof(Counter), "counter");
    
    [Required]
    [JsonPropertyName("counter")]
    public int Counter
    {
        get => _counter.GetValue(InlineErrors);
        set => _counter.SetValue(value);
    }

    private PropertyValue<string> _id = new PropertyValue<string>(nameof(M2UnreadStatus), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _unread.SetAccessPath(parentChainPath, validateHasBeenSet);
        _counter.SetAccessPath(parentChainPath, validateHasBeenSet);
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

