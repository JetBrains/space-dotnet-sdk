// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class DevConfigurationWarmup
     : IPropagatePropertyAccessPath
{
    public DevConfigurationWarmup() { }
    
    public DevConfigurationWarmup(bool indexing, List<DevConfigurationWarmupTriggers> triggers, long timeoutMs, string? script = null)
    {
        IsIndexing = indexing;
        Script = script;
        Triggers = triggers;
        TimeoutMs = timeoutMs;
    }
    
    private PropertyValue<bool> _indexing = new PropertyValue<bool>(nameof(DevConfigurationWarmup), nameof(IsIndexing), "indexing");
    
    [Required]
    [JsonPropertyName("indexing")]
    public bool IsIndexing
    {
        get => _indexing.GetValue(InlineErrors);
        set => _indexing.SetValue(value);
    }

    private PropertyValue<string?> _script = new PropertyValue<string?>(nameof(DevConfigurationWarmup), nameof(Script), "script");
    
    [JsonPropertyName("script")]
    public string? Script
    {
        get => _script.GetValue(InlineErrors);
        set => _script.SetValue(value);
    }

    private PropertyValue<List<DevConfigurationWarmupTriggers>> _triggers = new PropertyValue<List<DevConfigurationWarmupTriggers>>(nameof(DevConfigurationWarmup), nameof(Triggers), "triggers", new List<DevConfigurationWarmupTriggers>());
    
    [Required]
    [JsonPropertyName("triggers")]
    public List<DevConfigurationWarmupTriggers> Triggers
    {
        get => _triggers.GetValue(InlineErrors);
        set => _triggers.SetValue(value);
    }

    private PropertyValue<long> _timeoutMs = new PropertyValue<long>(nameof(DevConfigurationWarmup), nameof(TimeoutMs), "timeoutMs");
    
    [Required]
    [JsonPropertyName("timeoutMs")]
    public long TimeoutMs
    {
        get => _timeoutMs.GetValue(InlineErrors);
        set => _timeoutMs.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _indexing.SetAccessPath(parentChainPath, validateHasBeenSet);
        _script.SetAccessPath(parentChainPath, validateHasBeenSet);
        _triggers.SetAccessPath(parentChainPath, validateHasBeenSet);
        _timeoutMs.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

