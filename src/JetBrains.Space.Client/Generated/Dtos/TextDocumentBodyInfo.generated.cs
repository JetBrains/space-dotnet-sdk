// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class TextDocumentBodyInfo
     : DocumentBodyInfo, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "TextDocumentBodyInfo";
    
    public TextDocumentBodyInfo() { }
    
    public TextDocumentBodyInfo(TextDocumentRecord? textDocument = null, string? textDocumentId = null, DraftDocumentType? textType = null)
    {
        TextDocument = textDocument;
        TextDocumentId = textDocumentId;
        TextType = textType;
    }
    
    private PropertyValue<TextDocumentRecord?> _textDocument = new PropertyValue<TextDocumentRecord?>(nameof(TextDocumentBodyInfo), nameof(TextDocument), "textDocument");
    
    [JsonPropertyName("textDocument")]
    public TextDocumentRecord? TextDocument
    {
        get => _textDocument.GetValue(InlineErrors);
        set => _textDocument.SetValue(value);
    }

    private PropertyValue<string?> _textDocumentId = new PropertyValue<string?>(nameof(TextDocumentBodyInfo), nameof(TextDocumentId), "textDocumentId");
    
    [JsonPropertyName("textDocumentId")]
    public string? TextDocumentId
    {
        get => _textDocumentId.GetValue(InlineErrors);
        set => _textDocumentId.SetValue(value);
    }

    private PropertyValue<DraftDocumentType?> _textType = new PropertyValue<DraftDocumentType?>(nameof(TextDocumentBodyInfo), nameof(TextType), "textType");
    
    [JsonPropertyName("textType")]
    public DraftDocumentType? TextType
    {
        get => _textType.GetValue(InlineErrors);
        set => _textType.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _textDocument.SetAccessPath(parentChainPath, validateHasBeenSet);
        _textDocumentId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _textType.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

