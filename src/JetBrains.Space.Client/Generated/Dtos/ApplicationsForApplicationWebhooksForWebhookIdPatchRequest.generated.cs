// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public class ApplicationsForApplicationWebhooksForWebhookIdPatchRequest
     : IPropagatePropertyAccessPath
{
    public ApplicationsForApplicationWebhooksForWebhookIdPatchRequest() { }
    
    public ApplicationsForApplicationWebhooksForWebhookIdPatchRequest(bool enabled, List<int> acceptedHttpResponseCodes, bool doRetries, string? name = null, string? description = null, ExternalEndpointUpdateDTO? endpoint = null, EndpointAuthUpdateDTO? endpointAuth = null)
    {
        Name = (name ?? string.Empty);
        Description = description;
        IsEnabled = enabled;
        Endpoint = endpoint;
        EndpointAuth = endpointAuth;
        AcceptedHttpResponseCodes = acceptedHttpResponseCodes;
        IsDoRetries = doRetries;
    }
    
    private PropertyValue<string> _name = new PropertyValue<string>(nameof(ApplicationsForApplicationWebhooksForWebhookIdPatchRequest), nameof(Name), string.Empty);
    
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue();
        set => _name.SetValue(value);
    }

    private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(ApplicationsForApplicationWebhooksForWebhookIdPatchRequest), nameof(Description));
    
    [JsonPropertyName("description")]
    public string? Description
    {
        get => _description.GetValue();
        set => _description.SetValue(value);
    }

    private PropertyValue<bool> _enabled = new PropertyValue<bool>(nameof(ApplicationsForApplicationWebhooksForWebhookIdPatchRequest), nameof(IsEnabled));
    
    [JsonPropertyName("enabled")]
    public bool IsEnabled
    {
        get => _enabled.GetValue();
        set => _enabled.SetValue(value);
    }

    private PropertyValue<ExternalEndpointUpdateDTO?> _endpoint = new PropertyValue<ExternalEndpointUpdateDTO?>(nameof(ApplicationsForApplicationWebhooksForWebhookIdPatchRequest), nameof(Endpoint));
    
    [JsonPropertyName("endpoint")]
    public ExternalEndpointUpdateDTO? Endpoint
    {
        get => _endpoint.GetValue();
        set => _endpoint.SetValue(value);
    }

    private PropertyValue<EndpointAuthUpdateDTO?> _endpointAuth = new PropertyValue<EndpointAuthUpdateDTO?>(nameof(ApplicationsForApplicationWebhooksForWebhookIdPatchRequest), nameof(EndpointAuth));
    
    [JsonPropertyName("endpointAuth")]
    public EndpointAuthUpdateDTO? EndpointAuth
    {
        get => _endpointAuth.GetValue();
        set => _endpointAuth.SetValue(value);
    }

    private PropertyValue<List<int>> _acceptedHttpResponseCodes = new PropertyValue<List<int>>(nameof(ApplicationsForApplicationWebhooksForWebhookIdPatchRequest), nameof(AcceptedHttpResponseCodes), new List<int>());
    
    [JsonPropertyName("acceptedHttpResponseCodes")]
    public List<int> AcceptedHttpResponseCodes
    {
        get => _acceptedHttpResponseCodes.GetValue();
        set => _acceptedHttpResponseCodes.SetValue(value);
    }

    private PropertyValue<bool> _doRetries = new PropertyValue<bool>(nameof(ApplicationsForApplicationWebhooksForWebhookIdPatchRequest), nameof(IsDoRetries));
    
    [JsonPropertyName("doRetries")]
    public bool IsDoRetries
    {
        get => _doRetries.GetValue();
        set => _doRetries.SetValue(value);
    }

    public virtual void SetAccessPath(string path, bool validateHasBeenSet)
    {
        _name.SetAccessPath(path, validateHasBeenSet);
        _description.SetAccessPath(path, validateHasBeenSet);
        _enabled.SetAccessPath(path, validateHasBeenSet);
        _endpoint.SetAccessPath(path, validateHasBeenSet);
        _endpointAuth.SetAccessPath(path, validateHasBeenSet);
        _acceptedHttpResponseCodes.SetAccessPath(path, validateHasBeenSet);
        _doRetries.SetAccessPath(path, validateHasBeenSet);
    }

}

