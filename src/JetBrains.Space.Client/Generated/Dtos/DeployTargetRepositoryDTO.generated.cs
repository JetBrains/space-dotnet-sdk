// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class DeployTargetRepositoryDTO
     : IPropagatePropertyAccessPath
{
    public DeployTargetRepositoryDTO() { }
    
    public DeployTargetRepositoryDTO(string repositoryName, bool missing, string? repositoryId = null)
    {
        RepositoryName = repositoryName;
        IsMissing = missing;
        RepositoryId = repositoryId;
    }
    
    private PropertyValue<string> _repositoryName = new PropertyValue<string>(nameof(DeployTargetRepositoryDTO), nameof(RepositoryName), "repositoryName");
    
    [Required]
    [JsonPropertyName("repositoryName")]
    public string RepositoryName
    {
        get => _repositoryName.GetValue(InlineErrors);
        set => _repositoryName.SetValue(value);
    }

    private PropertyValue<bool> _missing = new PropertyValue<bool>(nameof(DeployTargetRepositoryDTO), nameof(IsMissing), "missing");
    
    [Required]
    [JsonPropertyName("missing")]
    public bool IsMissing
    {
        get => _missing.GetValue(InlineErrors);
        set => _missing.SetValue(value);
    }

    private PropertyValue<string?> _repositoryId = new PropertyValue<string?>(nameof(DeployTargetRepositoryDTO), nameof(RepositoryId), "repositoryId");
    
    [JsonPropertyName("repositoryId")]
    public string? RepositoryId
    {
        get => _repositoryId.GetValue(InlineErrors);
        set => _repositoryId.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _repositoryName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _missing.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repositoryId.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

