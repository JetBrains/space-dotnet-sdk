// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class IdeType
     : IPropagatePropertyAccessPath
{
    public IdeType() { }
    
    public IdeType(string id, string toolboxId, IdeNames names, string description, string defaultWarmupProfile)
    {
        Id = id;
        ToolboxId = toolboxId;
        Names = names;
        Description = description;
        DefaultWarmupProfile = defaultWarmupProfile;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(IdeType), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _toolboxId = new PropertyValue<string>(nameof(IdeType), nameof(ToolboxId), "toolboxId");
    
    [Required]
    [JsonPropertyName("toolboxId")]
    public string ToolboxId
    {
        get => _toolboxId.GetValue(InlineErrors);
        set => _toolboxId.SetValue(value);
    }

    private PropertyValue<IdeNames> _names = new PropertyValue<IdeNames>(nameof(IdeType), nameof(Names), "names");
    
    [Required]
    [JsonPropertyName("names")]
    public IdeNames Names
    {
        get => _names.GetValue(InlineErrors);
        set => _names.SetValue(value);
    }

    private PropertyValue<string> _description = new PropertyValue<string>(nameof(IdeType), nameof(Description), "description");
    
    [Required]
    [JsonPropertyName("description")]
    public string Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<string> _defaultWarmupProfile = new PropertyValue<string>(nameof(IdeType), nameof(DefaultWarmupProfile), "defaultWarmupProfile");
    
    [Required]
    [JsonPropertyName("defaultWarmupProfile")]
    public string DefaultWarmupProfile
    {
        get => _defaultWarmupProfile.GetValue(InlineErrors);
        set => _defaultWarmupProfile.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _toolboxId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _names.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _defaultWarmupProfile.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

