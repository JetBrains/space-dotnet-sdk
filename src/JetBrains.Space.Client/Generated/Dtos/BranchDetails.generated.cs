// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class BranchDetails
     : IPropagatePropertyAccessPath
{
    public BranchDetails() { }
    
    public BranchDetails(BranchInfo branchInfo, GitCommitInfo lastCommit, BranchStats stats, bool @default)
    {
        BranchInfo = branchInfo;
        LastCommit = lastCommit;
        Stats = stats;
        IsDefault = @default;
    }
    
    private PropertyValue<BranchInfo> _branchInfo = new PropertyValue<BranchInfo>(nameof(BranchDetails), nameof(BranchInfo), "branchInfo");
    
    [Required]
    [JsonPropertyName("branchInfo")]
    public BranchInfo BranchInfo
    {
        get => _branchInfo.GetValue(InlineErrors);
        set => _branchInfo.SetValue(value);
    }

    private PropertyValue<GitCommitInfo> _lastCommit = new PropertyValue<GitCommitInfo>(nameof(BranchDetails), nameof(LastCommit), "lastCommit");
    
    [Required]
    [JsonPropertyName("lastCommit")]
    public GitCommitInfo LastCommit
    {
        get => _lastCommit.GetValue(InlineErrors);
        set => _lastCommit.SetValue(value);
    }

    private PropertyValue<BranchStats> _stats = new PropertyValue<BranchStats>(nameof(BranchDetails), nameof(Stats), "stats");
    
    [Required]
    [JsonPropertyName("stats")]
    public BranchStats Stats
    {
        get => _stats.GetValue(InlineErrors);
        set => _stats.SetValue(value);
    }

    private PropertyValue<bool> _default = new PropertyValue<bool>(nameof(BranchDetails), nameof(IsDefault), "default");
    
    [Required]
    [JsonPropertyName("default")]
    public bool IsDefault
    {
        get => _default.GetValue(InlineErrors);
        set => _default.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _branchInfo.SetAccessPath(parentChainPath, validateHasBeenSet);
        _lastCommit.SetAccessPath(parentChainPath, validateHasBeenSet);
        _stats.SetAccessPath(parentChainPath, validateHasBeenSet);
        _default.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

