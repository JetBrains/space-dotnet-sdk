// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class M2ExternalStatusSucceedItemContent
     : M2ItemContentDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "M2ExternalStatusSucceedItemContent";
    
    public M2ExternalStatusSucceedItemContent() { }
    
    public M2ExternalStatusSucceedItemContent(string repository, string branch, string url, string externalServiceName, string taskName, string? projectId = null, RevisionAuthorInfo? revisionInfo = null, LastChanges? changesInfo = null, long? timestamp = null, string? description = null)
    {
        ProjectId = projectId;
        Repository = repository;
        Branch = branch;
        RevisionInfo = revisionInfo;
        ChangesInfo = changesInfo;
        Url = url;
        ExternalServiceName = externalServiceName;
        TaskName = taskName;
        Timestamp = timestamp;
        Description = description;
    }
    
    private PropertyValue<string?> _projectId = new PropertyValue<string?>(nameof(M2ExternalStatusSucceedItemContent), nameof(ProjectId), "projectId");
    
    [JsonPropertyName("projectId")]
    public string? ProjectId
    {
        get => _projectId.GetValue(InlineErrors);
        set => _projectId.SetValue(value);
    }

    private PropertyValue<string> _repository = new PropertyValue<string>(nameof(M2ExternalStatusSucceedItemContent), nameof(Repository), "repository");
    
    [Required]
    [JsonPropertyName("repository")]
    public string Repository
    {
        get => _repository.GetValue(InlineErrors);
        set => _repository.SetValue(value);
    }

    private PropertyValue<string> _branch = new PropertyValue<string>(nameof(M2ExternalStatusSucceedItemContent), nameof(Branch), "branch");
    
    [Required]
    [JsonPropertyName("branch")]
    public string Branch
    {
        get => _branch.GetValue(InlineErrors);
        set => _branch.SetValue(value);
    }

    private PropertyValue<RevisionAuthorInfo?> _revisionInfo = new PropertyValue<RevisionAuthorInfo?>(nameof(M2ExternalStatusSucceedItemContent), nameof(RevisionInfo), "revisionInfo");
    
    [JsonPropertyName("revisionInfo")]
    public RevisionAuthorInfo? RevisionInfo
    {
        get => _revisionInfo.GetValue(InlineErrors);
        set => _revisionInfo.SetValue(value);
    }

    private PropertyValue<LastChanges?> _changesInfo = new PropertyValue<LastChanges?>(nameof(M2ExternalStatusSucceedItemContent), nameof(ChangesInfo), "changesInfo");
    
    [JsonPropertyName("changesInfo")]
    public LastChanges? ChangesInfo
    {
        get => _changesInfo.GetValue(InlineErrors);
        set => _changesInfo.SetValue(value);
    }

    private PropertyValue<string> _url = new PropertyValue<string>(nameof(M2ExternalStatusSucceedItemContent), nameof(Url), "url");
    
    [Required]
    [JsonPropertyName("url")]
    public string Url
    {
        get => _url.GetValue(InlineErrors);
        set => _url.SetValue(value);
    }

    private PropertyValue<string> _externalServiceName = new PropertyValue<string>(nameof(M2ExternalStatusSucceedItemContent), nameof(ExternalServiceName), "externalServiceName");
    
    [Required]
    [JsonPropertyName("externalServiceName")]
    public string ExternalServiceName
    {
        get => _externalServiceName.GetValue(InlineErrors);
        set => _externalServiceName.SetValue(value);
    }

    private PropertyValue<string> _taskName = new PropertyValue<string>(nameof(M2ExternalStatusSucceedItemContent), nameof(TaskName), "taskName");
    
    [Required]
    [JsonPropertyName("taskName")]
    public string TaskName
    {
        get => _taskName.GetValue(InlineErrors);
        set => _taskName.SetValue(value);
    }

    private PropertyValue<long?> _timestamp = new PropertyValue<long?>(nameof(M2ExternalStatusSucceedItemContent), nameof(Timestamp), "timestamp");
    
    [JsonPropertyName("timestamp")]
    public long? Timestamp
    {
        get => _timestamp.GetValue(InlineErrors);
        set => _timestamp.SetValue(value);
    }

    private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(M2ExternalStatusSucceedItemContent), nameof(Description), "description");
    
    [JsonPropertyName("description")]
    public string? Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _projectId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repository.SetAccessPath(parentChainPath, validateHasBeenSet);
        _branch.SetAccessPath(parentChainPath, validateHasBeenSet);
        _revisionInfo.SetAccessPath(parentChainPath, validateHasBeenSet);
        _changesInfo.SetAccessPath(parentChainPath, validateHasBeenSet);
        _url.SetAccessPath(parentChainPath, validateHasBeenSet);
        _externalServiceName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _taskName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _timestamp.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

