// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ProjectFeatureUsage
     : IPropagatePropertyAccessPath
{
    public ProjectFeatureUsage() { }
    
    public ProjectFeatureUsage(ProjectFeature feature, DateTime? lastUsedAt = null, DateTime? firstUsedAt = null)
    {
        Feature = feature;
        LastUsedAt = lastUsedAt;
        FirstUsedAt = firstUsedAt;
    }
    
    private PropertyValue<ProjectFeature> _feature = new PropertyValue<ProjectFeature>(nameof(ProjectFeatureUsage), nameof(Feature), "feature");
    
    [Required]
    [JsonPropertyName("feature")]
    public ProjectFeature Feature
    {
        get => _feature.GetValue(InlineErrors);
        set => _feature.SetValue(value);
    }

    private PropertyValue<DateTime?> _lastUsedAt = new PropertyValue<DateTime?>(nameof(ProjectFeatureUsage), nameof(LastUsedAt), "lastUsedAt");
    
    [JsonPropertyName("lastUsedAt")]
    [JsonConverter(typeof(SpaceDateConverter))]
    public DateTime? LastUsedAt
    {
        get => _lastUsedAt.GetValue(InlineErrors);
        set => _lastUsedAt.SetValue(value);
    }

    private PropertyValue<DateTime?> _firstUsedAt = new PropertyValue<DateTime?>(nameof(ProjectFeatureUsage), nameof(FirstUsedAt), "firstUsedAt");
    
    [JsonPropertyName("firstUsedAt")]
    [JsonConverter(typeof(SpaceDateConverter))]
    public DateTime? FirstUsedAt
    {
        get => _firstUsedAt.GetValue(InlineErrors);
        set => _firstUsedAt.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _feature.SetAccessPath(parentChainPath, validateHasBeenSet);
        _lastUsedAt.SetAccessPath(parentChainPath, validateHasBeenSet);
        _firstUsedAt.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

