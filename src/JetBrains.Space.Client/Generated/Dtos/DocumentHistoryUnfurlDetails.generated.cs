// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class DocumentHistoryUnfurlDetails
     : UnfurlDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "DocumentHistoryUnfurlDetails";
    
    public DocumentHistoryUnfurlDetails() { }
    
    public DocumentHistoryUnfurlDetails(string document, string title, DateTime? version = null, DateTime? @base = null, DateTime? preview = null)
    {
        Document = document;
        Title = title;
        Version = version;
        Base = @base;
        Preview = preview;
    }
    
    private PropertyValue<string> _document = new PropertyValue<string>(nameof(DocumentHistoryUnfurlDetails), nameof(Document), "document");
    
    [Required]
    [JsonPropertyName("document")]
    public string Document
    {
        get => _document.GetValue(InlineErrors);
        set => _document.SetValue(value);
    }

    private PropertyValue<string> _title = new PropertyValue<string>(nameof(DocumentHistoryUnfurlDetails), nameof(Title), "title");
    
    [Required]
    [JsonPropertyName("title")]
    public string Title
    {
        get => _title.GetValue(InlineErrors);
        set => _title.SetValue(value);
    }

    private PropertyValue<DateTime?> _version = new PropertyValue<DateTime?>(nameof(DocumentHistoryUnfurlDetails), nameof(Version), "version");
    
    [JsonPropertyName("version")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime? Version
    {
        get => _version.GetValue(InlineErrors);
        set => _version.SetValue(value);
    }

    private PropertyValue<DateTime?> _base = new PropertyValue<DateTime?>(nameof(DocumentHistoryUnfurlDetails), nameof(Base), "base");
    
    [JsonPropertyName("base")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime? Base
    {
        get => _base.GetValue(InlineErrors);
        set => _base.SetValue(value);
    }

    private PropertyValue<DateTime?> _preview = new PropertyValue<DateTime?>(nameof(DocumentHistoryUnfurlDetails), nameof(Preview), "preview");
    
    [JsonPropertyName("preview")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime? Preview
    {
        get => _preview.GetValue(InlineErrors);
        set => _preview.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _document.SetAccessPath(parentChainPath, validateHasBeenSet);
        _title.SetAccessPath(parentChainPath, validateHasBeenSet);
        _version.SetAccessPath(parentChainPath, validateHasBeenSet);
        _base.SetAccessPath(parentChainPath, validateHasBeenSet);
        _preview.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

