// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ChannelSpecificDefaults
     : IPropagatePropertyAccessPath
{
    public ChannelSpecificDefaults() { }
    
    public ChannelSpecificDefaults(NotificationFilter filter, bool push, M2EmailNotificationType email, bool? subscribed = null, bool? threadsSubscribed = null)
    {
        IsSubscribed = subscribed;
        Filter = filter;
        IsPush = push;
        Email = email;
        IsThreadsSubscribed = threadsSubscribed;
    }
    
    private PropertyValue<bool?> _subscribed = new PropertyValue<bool?>(nameof(ChannelSpecificDefaults), nameof(IsSubscribed), "subscribed");
    
    [JsonPropertyName("subscribed")]
    public bool? IsSubscribed
    {
        get => _subscribed.GetValue(InlineErrors);
        set => _subscribed.SetValue(value);
    }

    private PropertyValue<NotificationFilter> _filter = new PropertyValue<NotificationFilter>(nameof(ChannelSpecificDefaults), nameof(Filter), "filter");
    
    [Required]
    [JsonPropertyName("filter")]
    public NotificationFilter Filter
    {
        get => _filter.GetValue(InlineErrors);
        set => _filter.SetValue(value);
    }

    private PropertyValue<bool> _push = new PropertyValue<bool>(nameof(ChannelSpecificDefaults), nameof(IsPush), "push");
    
    [Required]
    [JsonPropertyName("push")]
    public bool IsPush
    {
        get => _push.GetValue(InlineErrors);
        set => _push.SetValue(value);
    }

    private PropertyValue<M2EmailNotificationType> _email = new PropertyValue<M2EmailNotificationType>(nameof(ChannelSpecificDefaults), nameof(Email), "email");
    
    [Required]
    [JsonPropertyName("email")]
    public M2EmailNotificationType Email
    {
        get => _email.GetValue(InlineErrors);
        set => _email.SetValue(value);
    }

    private PropertyValue<bool?> _threadsSubscribed = new PropertyValue<bool?>(nameof(ChannelSpecificDefaults), nameof(IsThreadsSubscribed), "threadsSubscribed");
    
    [JsonPropertyName("threadsSubscribed")]
    public bool? IsThreadsSubscribed
    {
        get => _threadsSubscribed.GetValue(InlineErrors);
        set => _threadsSubscribed.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _subscribed.SetAccessPath(parentChainPath, validateHasBeenSet);
        _filter.SetAccessPath(parentChainPath, validateHasBeenSet);
        _push.SetAccessPath(parentChainPath, validateHasBeenSet);
        _email.SetAccessPath(parentChainPath, validateHasBeenSet);
        _threadsSubscribed.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

