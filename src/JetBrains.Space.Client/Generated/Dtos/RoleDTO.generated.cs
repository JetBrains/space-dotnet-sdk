// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class RoleDTO
     : IPropagatePropertyAccessPath
{
    public RoleDTO() { }
    
    public RoleDTO(string roleId, PermissionRoleType type, string name, string description, bool membersEditable, string? code = null, bool? rightsEditable = null)
    {
        RoleId = roleId;
        Type = type;
        Code = code;
        Name = name;
        Description = description;
        IsMembersEditable = membersEditable;
        IsRightsEditable = rightsEditable;
    }
    
    private PropertyValue<string> _roleId = new PropertyValue<string>(nameof(RoleDTO), nameof(RoleId), "roleId");
    
    [Required]
    [JsonPropertyName("roleId")]
    public string RoleId
    {
        get => _roleId.GetValue(InlineErrors);
        set => _roleId.SetValue(value);
    }

    private PropertyValue<PermissionRoleType> _type = new PropertyValue<PermissionRoleType>(nameof(RoleDTO), nameof(Type), "type");
    
    [Required]
    [JsonPropertyName("type")]
    public PermissionRoleType Type
    {
        get => _type.GetValue(InlineErrors);
        set => _type.SetValue(value);
    }

    private PropertyValue<string?> _code = new PropertyValue<string?>(nameof(RoleDTO), nameof(Code), "code");
    
    [JsonPropertyName("code")]
    public string? Code
    {
        get => _code.GetValue(InlineErrors);
        set => _code.SetValue(value);
    }

    private PropertyValue<string> _name = new PropertyValue<string>(nameof(RoleDTO), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string> _description = new PropertyValue<string>(nameof(RoleDTO), nameof(Description), "description");
    
    [Required]
    [JsonPropertyName("description")]
    public string Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<bool> _membersEditable = new PropertyValue<bool>(nameof(RoleDTO), nameof(IsMembersEditable), "membersEditable");
    
    [Required]
    [JsonPropertyName("membersEditable")]
    public bool IsMembersEditable
    {
        get => _membersEditable.GetValue(InlineErrors);
        set => _membersEditable.SetValue(value);
    }

    private PropertyValue<bool?> _rightsEditable = new PropertyValue<bool?>(nameof(RoleDTO), nameof(IsRightsEditable), "rightsEditable");
    
    [JsonPropertyName("rightsEditable")]
    public bool? IsRightsEditable
    {
        get => _rightsEditable.GetValue(InlineErrors);
        set => _rightsEditable.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _roleId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _type.SetAccessPath(parentChainPath, validateHasBeenSet);
        _code.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _membersEditable.SetAccessPath(parentChainPath, validateHasBeenSet);
        _rightsEditable.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

