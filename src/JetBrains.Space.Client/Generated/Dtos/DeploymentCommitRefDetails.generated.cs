// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class DeploymentCommitRefDetails
     : IPropagatePropertyAccessPath
{
    public DeploymentCommitRefDetails() { }
    
    public DeploymentCommitRefDetails(string repositoryName, string branch, string commit, bool head, bool rollback, bool missing, long? timestamp = null, int? commitsAdded = null, int? mergesAdded = null, int? issuesAdded = null, int? commitsReverted = null, int? mergesReverted = null, int? issuesReverted = null, bool? initial = null)
    {
        RepositoryName = repositoryName;
        Branch = branch;
        Commit = commit;
        Timestamp = timestamp;
        IsHead = head;
        CommitsAdded = commitsAdded;
        MergesAdded = mergesAdded;
        IssuesAdded = issuesAdded;
        CommitsReverted = commitsReverted;
        MergesReverted = mergesReverted;
        IssuesReverted = issuesReverted;
        IsRollback = rollback;
        IsMissing = missing;
        IsInitial = initial;
    }
    
    private PropertyValue<string> _repositoryName = new PropertyValue<string>(nameof(DeploymentCommitRefDetails), nameof(RepositoryName), "repositoryName");
    
    [Required]
    [JsonPropertyName("repositoryName")]
    public string RepositoryName
    {
        get => _repositoryName.GetValue(InlineErrors);
        set => _repositoryName.SetValue(value);
    }

    private PropertyValue<string> _branch = new PropertyValue<string>(nameof(DeploymentCommitRefDetails), nameof(Branch), "branch");
    
    [Required]
    [JsonPropertyName("branch")]
    public string Branch
    {
        get => _branch.GetValue(InlineErrors);
        set => _branch.SetValue(value);
    }

    private PropertyValue<string> _commit = new PropertyValue<string>(nameof(DeploymentCommitRefDetails), nameof(Commit), "commit");
    
    [Required]
    [JsonPropertyName("commit")]
    public string Commit
    {
        get => _commit.GetValue(InlineErrors);
        set => _commit.SetValue(value);
    }

    private PropertyValue<long?> _timestamp = new PropertyValue<long?>(nameof(DeploymentCommitRefDetails), nameof(Timestamp), "timestamp");
    
    [JsonPropertyName("timestamp")]
    public long? Timestamp
    {
        get => _timestamp.GetValue(InlineErrors);
        set => _timestamp.SetValue(value);
    }

    private PropertyValue<bool> _head = new PropertyValue<bool>(nameof(DeploymentCommitRefDetails), nameof(IsHead), "head");
    
    [Required]
    [JsonPropertyName("head")]
    public bool IsHead
    {
        get => _head.GetValue(InlineErrors);
        set => _head.SetValue(value);
    }

    private PropertyValue<int?> _commitsAdded = new PropertyValue<int?>(nameof(DeploymentCommitRefDetails), nameof(CommitsAdded), "commitsAdded");
    
    [JsonPropertyName("commitsAdded")]
    public int? CommitsAdded
    {
        get => _commitsAdded.GetValue(InlineErrors);
        set => _commitsAdded.SetValue(value);
    }

    private PropertyValue<int?> _mergesAdded = new PropertyValue<int?>(nameof(DeploymentCommitRefDetails), nameof(MergesAdded), "mergesAdded");
    
    [JsonPropertyName("mergesAdded")]
    public int? MergesAdded
    {
        get => _mergesAdded.GetValue(InlineErrors);
        set => _mergesAdded.SetValue(value);
    }

    private PropertyValue<int?> _issuesAdded = new PropertyValue<int?>(nameof(DeploymentCommitRefDetails), nameof(IssuesAdded), "issuesAdded");
    
    [JsonPropertyName("issuesAdded")]
    public int? IssuesAdded
    {
        get => _issuesAdded.GetValue(InlineErrors);
        set => _issuesAdded.SetValue(value);
    }

    private PropertyValue<int?> _commitsReverted = new PropertyValue<int?>(nameof(DeploymentCommitRefDetails), nameof(CommitsReverted), "commitsReverted");
    
    [JsonPropertyName("commitsReverted")]
    public int? CommitsReverted
    {
        get => _commitsReverted.GetValue(InlineErrors);
        set => _commitsReverted.SetValue(value);
    }

    private PropertyValue<int?> _mergesReverted = new PropertyValue<int?>(nameof(DeploymentCommitRefDetails), nameof(MergesReverted), "mergesReverted");
    
    [JsonPropertyName("mergesReverted")]
    public int? MergesReverted
    {
        get => _mergesReverted.GetValue(InlineErrors);
        set => _mergesReverted.SetValue(value);
    }

    private PropertyValue<int?> _issuesReverted = new PropertyValue<int?>(nameof(DeploymentCommitRefDetails), nameof(IssuesReverted), "issuesReverted");
    
    [JsonPropertyName("issuesReverted")]
    public int? IssuesReverted
    {
        get => _issuesReverted.GetValue(InlineErrors);
        set => _issuesReverted.SetValue(value);
    }

    private PropertyValue<bool> _rollback = new PropertyValue<bool>(nameof(DeploymentCommitRefDetails), nameof(IsRollback), "rollback");
    
    [Required]
    [JsonPropertyName("rollback")]
    public bool IsRollback
    {
        get => _rollback.GetValue(InlineErrors);
        set => _rollback.SetValue(value);
    }

    private PropertyValue<bool> _missing = new PropertyValue<bool>(nameof(DeploymentCommitRefDetails), nameof(IsMissing), "missing");
    
    [Required]
    [JsonPropertyName("missing")]
    public bool IsMissing
    {
        get => _missing.GetValue(InlineErrors);
        set => _missing.SetValue(value);
    }

    private PropertyValue<bool?> _initial = new PropertyValue<bool?>(nameof(DeploymentCommitRefDetails), nameof(IsInitial), "initial");
    
    [JsonPropertyName("initial")]
    public bool? IsInitial
    {
        get => _initial.GetValue(InlineErrors);
        set => _initial.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _repositoryName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _branch.SetAccessPath(parentChainPath, validateHasBeenSet);
        _commit.SetAccessPath(parentChainPath, validateHasBeenSet);
        _timestamp.SetAccessPath(parentChainPath, validateHasBeenSet);
        _head.SetAccessPath(parentChainPath, validateHasBeenSet);
        _commitsAdded.SetAccessPath(parentChainPath, validateHasBeenSet);
        _mergesAdded.SetAccessPath(parentChainPath, validateHasBeenSet);
        _issuesAdded.SetAccessPath(parentChainPath, validateHasBeenSet);
        _commitsReverted.SetAccessPath(parentChainPath, validateHasBeenSet);
        _mergesReverted.SetAccessPath(parentChainPath, validateHasBeenSet);
        _issuesReverted.SetAccessPath(parentChainPath, validateHasBeenSet);
        _rollback.SetAccessPath(parentChainPath, validateHasBeenSet);
        _missing.SetAccessPath(parentChainPath, validateHasBeenSet);
        _initial.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

