// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class MCMessage
     : M2ItemContentDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "MCMessage";
    
    public MCMessage() { }
    
    public MCMessage(List<MCElement> content, MessageStyle? style = null, MCOutline? outline = null, M2ItemContentDetails? extension = null)
    {
        Style = style;
        Outline = outline;
        Content = content;
        Extension = extension;
    }
    
    private PropertyValue<MessageStyle?> _style = new PropertyValue<MessageStyle?>(nameof(MCMessage), nameof(Style), "style");
    
    [JsonPropertyName("style")]
    public MessageStyle? Style
    {
        get => _style.GetValue(InlineErrors);
        set => _style.SetValue(value);
    }

    private PropertyValue<MCOutline?> _outline = new PropertyValue<MCOutline?>(nameof(MCMessage), nameof(Outline), "outline");
    
    [JsonPropertyName("outline")]
    public MCOutline? Outline
    {
        get => _outline.GetValue(InlineErrors);
        set => _outline.SetValue(value);
    }

    private PropertyValue<List<MCElement>> _content = new PropertyValue<List<MCElement>>(nameof(MCMessage), nameof(Content), "content", new List<MCElement>());
    
    [Required]
    [JsonPropertyName("content")]
    public List<MCElement> Content
    {
        get => _content.GetValue(InlineErrors);
        set => _content.SetValue(value);
    }

    private PropertyValue<M2ItemContentDetails?> _extension = new PropertyValue<M2ItemContentDetails?>(nameof(MCMessage), nameof(Extension), "extension");
    
    [JsonPropertyName("extension")]
    public M2ItemContentDetails? Extension
    {
        get => _extension.GetValue(InlineErrors);
        set => _extension.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _style.SetAccessPath(parentChainPath, validateHasBeenSet);
        _outline.SetAccessPath(parentChainPath, validateHasBeenSet);
        _content.SetAccessPath(parentChainPath, validateHasBeenSet);
        _extension.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

