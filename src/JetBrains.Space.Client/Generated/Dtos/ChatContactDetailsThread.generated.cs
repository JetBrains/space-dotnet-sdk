// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ChatContactDetailsThread
     : ChatContactDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public override string? ClassName => "ChatContactDetails.Thread";
    
    public ChatContactDetailsThread() { }
    
    public ChatContactDetailsThread(ChatContactRecord parent, MessageInfo message, List<CPrincipal>? authors = null, int? replies = null, bool? absorbingParent = null, bool? resolvedImpl = null)
    {
        Parent = parent;
        Message = message;
        Authors = authors;
        Replies = replies;
        IsAbsorbingParent = absorbingParent;
        IsResolvedImpl = resolvedImpl;
    }
    
    private PropertyValue<ChatContactRecord> _parent = new PropertyValue<ChatContactRecord>(nameof(ChatContactDetailsThread), nameof(Parent), "parent");
    
    [Required]
    [JsonPropertyName("parent")]
    public ChatContactRecord Parent
    {
        get => _parent.GetValue(InlineErrors);
        set => _parent.SetValue(value);
    }

    private PropertyValue<MessageInfo> _message = new PropertyValue<MessageInfo>(nameof(ChatContactDetailsThread), nameof(Message), "message");
    
    [Required]
    [JsonPropertyName("message")]
    public MessageInfo Message
    {
        get => _message.GetValue(InlineErrors);
        set => _message.SetValue(value);
    }

    private PropertyValue<List<CPrincipal>?> _authors = new PropertyValue<List<CPrincipal>?>(nameof(ChatContactDetailsThread), nameof(Authors), "authors");
    
    [JsonPropertyName("authors")]
    public List<CPrincipal>? Authors
    {
        get => _authors.GetValue(InlineErrors);
        set => _authors.SetValue(value);
    }

    private PropertyValue<int?> _replies = new PropertyValue<int?>(nameof(ChatContactDetailsThread), nameof(Replies), "replies");
    
    [JsonPropertyName("replies")]
    public int? Replies
    {
        get => _replies.GetValue(InlineErrors);
        set => _replies.SetValue(value);
    }

    private PropertyValue<bool?> _absorbingParent = new PropertyValue<bool?>(nameof(ChatContactDetailsThread), nameof(IsAbsorbingParent), "absorbingParent");
    
    [JsonPropertyName("absorbingParent")]
    public bool? IsAbsorbingParent
    {
        get => _absorbingParent.GetValue(InlineErrors);
        set => _absorbingParent.SetValue(value);
    }

    private PropertyValue<bool?> _resolvedImpl = new PropertyValue<bool?>(nameof(ChatContactDetailsThread), nameof(IsResolvedImpl), "resolvedImpl");
    
    [JsonPropertyName("resolvedImpl")]
    public bool? IsResolvedImpl
    {
        get => _resolvedImpl.GetValue(InlineErrors);
        set => _resolvedImpl.SetValue(value);
    }

    public override void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _parent.SetAccessPath(parentChainPath, validateHasBeenSet);
        _message.SetAccessPath(parentChainPath, validateHasBeenSet);
        _authors.SetAccessPath(parentChainPath, validateHasBeenSet);
        _replies.SetAccessPath(parentChainPath, validateHasBeenSet);
        _absorbingParent.SetAccessPath(parentChainPath, validateHasBeenSet);
        _resolvedImpl.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

