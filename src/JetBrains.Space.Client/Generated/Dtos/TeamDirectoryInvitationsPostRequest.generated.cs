// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

internal class TeamDirectoryInvitationsPostRequest
     : IPropagatePropertyAccessPath
{
    public TeamDirectoryInvitationsPostRequest() { }
    
    public TeamDirectoryInvitationsPostRequest(string inviteeEmail, string? inviteeFirstName = null, string? inviteeLastName = null, string? team = null, string? role = null, ProjectIdentifier? project = null, ProjectTeamRole? projectRole = null, GlobalRole? globalRole = null)
    {
        InviteeEmail = inviteeEmail;
        InviteeFirstName = inviteeFirstName;
        InviteeLastName = inviteeLastName;
        Team = team;
        Role = role;
        Project = project;
        ProjectRole = projectRole;
        GlobalRole = globalRole;
    }
    
    private PropertyValue<string> _inviteeEmail = new PropertyValue<string>(nameof(TeamDirectoryInvitationsPostRequest), nameof(InviteeEmail), "inviteeEmail");
    
    [Required]
    [JsonPropertyName("inviteeEmail")]
    public string InviteeEmail
    {
        get => _inviteeEmail.GetValue(InlineErrors);
        set => _inviteeEmail.SetValue(value);
    }

    private PropertyValue<string?> _inviteeFirstName = new PropertyValue<string?>(nameof(TeamDirectoryInvitationsPostRequest), nameof(InviteeFirstName), "inviteeFirstName");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("inviteeFirstName")]
    public string? InviteeFirstName
    {
        get => _inviteeFirstName.GetValue(InlineErrors);
        set => _inviteeFirstName.SetValue(value);
    }

    private PropertyValue<string?> _inviteeLastName = new PropertyValue<string?>(nameof(TeamDirectoryInvitationsPostRequest), nameof(InviteeLastName), "inviteeLastName");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("inviteeLastName")]
    public string? InviteeLastName
    {
        get => _inviteeLastName.GetValue(InlineErrors);
        set => _inviteeLastName.SetValue(value);
    }

    private PropertyValue<string?> _team = new PropertyValue<string?>(nameof(TeamDirectoryInvitationsPostRequest), nameof(Team), "team");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("team")]
    public string? Team
    {
        get => _team.GetValue(InlineErrors);
        set => _team.SetValue(value);
    }

    private PropertyValue<string?> _role = new PropertyValue<string?>(nameof(TeamDirectoryInvitationsPostRequest), nameof(Role), "role");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("role")]
    public string? Role
    {
        get => _role.GetValue(InlineErrors);
        set => _role.SetValue(value);
    }

    private PropertyValue<ProjectIdentifier?> _project = new PropertyValue<ProjectIdentifier?>(nameof(TeamDirectoryInvitationsPostRequest), nameof(Project), "project");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("project")]
    public ProjectIdentifier? Project
    {
        get => _project.GetValue(InlineErrors);
        set => _project.SetValue(value);
    }

    private PropertyValue<ProjectTeamRole?> _projectRole = new PropertyValue<ProjectTeamRole?>(nameof(TeamDirectoryInvitationsPostRequest), nameof(ProjectRole), "projectRole");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("projectRole")]
    public ProjectTeamRole? ProjectRole
    {
        get => _projectRole.GetValue(InlineErrors);
        set => _projectRole.SetValue(value);
    }

    private PropertyValue<GlobalRole?> _globalRole = new PropertyValue<GlobalRole?>(nameof(TeamDirectoryInvitationsPostRequest), nameof(GlobalRole), "globalRole");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("globalRole")]
    public GlobalRole? GlobalRole
    {
        get => _globalRole.GetValue(InlineErrors);
        set => _globalRole.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _inviteeEmail.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inviteeFirstName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _inviteeLastName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _team.SetAccessPath(parentChainPath, validateHasBeenSet);
        _role.SetAccessPath(parentChainPath, validateHasBeenSet);
        _project.SetAccessPath(parentChainPath, validateHasBeenSet);
        _projectRole.SetAccessPath(parentChainPath, validateHasBeenSet);
        _globalRole.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

