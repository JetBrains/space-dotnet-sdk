// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class RdRepoConnection
     : IPropagatePropertyAccessPath
{
    public RdRepoConnection() { }
    
    public RdRepoConnection(string id, string projectId, string name, string sshUrl, bool archived, string? accessUrl = null)
    {
        Id = id;
        ProjectId = projectId;
        Name = name;
        SshUrl = sshUrl;
        AccessUrl = accessUrl;
        IsArchived = archived;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(RdRepoConnection), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _projectId = new PropertyValue<string>(nameof(RdRepoConnection), nameof(ProjectId), "projectId");
    
    [Required]
    [JsonPropertyName("projectId")]
    public string ProjectId
    {
        get => _projectId.GetValue(InlineErrors);
        set => _projectId.SetValue(value);
    }

    private PropertyValue<string> _name = new PropertyValue<string>(nameof(RdRepoConnection), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string> _sshUrl = new PropertyValue<string>(nameof(RdRepoConnection), nameof(SshUrl), "sshUrl");
    
    [Required]
    [JsonPropertyName("sshUrl")]
    public string SshUrl
    {
        get => _sshUrl.GetValue(InlineErrors);
        set => _sshUrl.SetValue(value);
    }

    private PropertyValue<string?> _accessUrl = new PropertyValue<string?>(nameof(RdRepoConnection), nameof(AccessUrl), "accessUrl");
    
    [JsonPropertyName("accessUrl")]
    public string? AccessUrl
    {
        get => _accessUrl.GetValue(InlineErrors);
        set => _accessUrl.SetValue(value);
    }

    private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(RdRepoConnection), nameof(IsArchived), "archived");
    
    [Required]
    [JsonPropertyName("archived")]
    public bool IsArchived
    {
        get => _archived.GetValue(InlineErrors);
        set => _archived.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _projectId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _sshUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _accessUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _archived.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

