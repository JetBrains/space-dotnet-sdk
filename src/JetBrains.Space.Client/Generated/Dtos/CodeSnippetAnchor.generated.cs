// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CodeSnippetAnchor
     : IPropagatePropertyAccessPath
{
    public CodeSnippetAnchor() { }
    
    public CodeSnippetAnchor(ProjectKey projectKey, string repository, string revision, string filename, int? lineIndex = null, int? linesCount = null)
    {
        ProjectKey = projectKey;
        Repository = repository;
        Revision = revision;
        Filename = filename;
        LineIndex = lineIndex;
        LinesCount = linesCount;
    }
    
    private PropertyValue<ProjectKey> _projectKey = new PropertyValue<ProjectKey>(nameof(CodeSnippetAnchor), nameof(ProjectKey), "projectKey");
    
    [Required]
    [JsonPropertyName("projectKey")]
    public ProjectKey ProjectKey
    {
        get => _projectKey.GetValue(InlineErrors);
        set => _projectKey.SetValue(value);
    }

    private PropertyValue<string> _repository = new PropertyValue<string>(nameof(CodeSnippetAnchor), nameof(Repository), "repository");
    
    [Required]
    [JsonPropertyName("repository")]
    public string Repository
    {
        get => _repository.GetValue(InlineErrors);
        set => _repository.SetValue(value);
    }

    private PropertyValue<string> _revision = new PropertyValue<string>(nameof(CodeSnippetAnchor), nameof(Revision), "revision");
    
    [Required]
    [JsonPropertyName("revision")]
    public string Revision
    {
        get => _revision.GetValue(InlineErrors);
        set => _revision.SetValue(value);
    }

    private PropertyValue<string> _filename = new PropertyValue<string>(nameof(CodeSnippetAnchor), nameof(Filename), "filename");
    
    [Required]
    [JsonPropertyName("filename")]
    public string Filename
    {
        get => _filename.GetValue(InlineErrors);
        set => _filename.SetValue(value);
    }

    private PropertyValue<int?> _lineIndex = new PropertyValue<int?>(nameof(CodeSnippetAnchor), nameof(LineIndex), "lineIndex");
    
    [JsonPropertyName("lineIndex")]
    public int? LineIndex
    {
        get => _lineIndex.GetValue(InlineErrors);
        set => _lineIndex.SetValue(value);
    }

    private PropertyValue<int?> _linesCount = new PropertyValue<int?>(nameof(CodeSnippetAnchor), nameof(LinesCount), "linesCount");
    
    [JsonPropertyName("linesCount")]
    public int? LinesCount
    {
        get => _linesCount.GetValue(InlineErrors);
        set => _linesCount.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _projectKey.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repository.SetAccessPath(parentChainPath, validateHasBeenSet);
        _revision.SetAccessPath(parentChainPath, validateHasBeenSet);
        _filename.SetAccessPath(parentChainPath, validateHasBeenSet);
        _lineIndex.SetAccessPath(parentChainPath, validateHasBeenSet);
        _linesCount.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

