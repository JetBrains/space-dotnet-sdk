// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ExternalIssueLinkedCommitsChanged
     : ExternalIssueEvent, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "ExternalIssueLinkedCommitsChanged";
    
    public ExternalIssueLinkedCommitsChanged() { }
    
    public ExternalIssueLinkedCommitsChanged(string issuePrefix, string issueId, List<ExternalIssueLinkedCommitsForRepo> repositories)
    {
        IssuePrefix = issuePrefix;
        IssueId = issueId;
        Repositories = repositories;
    }
    
    private PropertyValue<string> _issuePrefix = new PropertyValue<string>(nameof(ExternalIssueLinkedCommitsChanged), nameof(IssuePrefix), "issuePrefix");
    
    [Required]
    [JsonPropertyName("issuePrefix")]
    public string IssuePrefix
    {
        get => _issuePrefix.GetValue(InlineErrors);
        set => _issuePrefix.SetValue(value);
    }

    private PropertyValue<string> _issueId = new PropertyValue<string>(nameof(ExternalIssueLinkedCommitsChanged), nameof(IssueId), "issueId");
    
    [Required]
    [JsonPropertyName("issueId")]
    public string IssueId
    {
        get => _issueId.GetValue(InlineErrors);
        set => _issueId.SetValue(value);
    }

    private PropertyValue<List<ExternalIssueLinkedCommitsForRepo>> _repositories = new PropertyValue<List<ExternalIssueLinkedCommitsForRepo>>(nameof(ExternalIssueLinkedCommitsChanged), nameof(Repositories), "repositories", new List<ExternalIssueLinkedCommitsForRepo>());
    
    [Required]
    [JsonPropertyName("repositories")]
    public List<ExternalIssueLinkedCommitsForRepo> Repositories
    {
        get => _repositories.GetValue(InlineErrors);
        set => _repositories.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _issuePrefix.SetAccessPath(parentChainPath, validateHasBeenSet);
        _issueId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repositories.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

