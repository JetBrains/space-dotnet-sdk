// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CodeReviewWithCount
     : IPropagatePropertyAccessPath
{
    public CodeReviewWithCount() { }
    
    public CodeReviewWithCount(CodeReviewRecord review, int messagesCount, List<GitCommitterProfile> authors, CodeReviewParticipants participants)
    {
        Review = review;
        MessagesCount = messagesCount;
        Authors = authors;
        Participants = participants;
    }
    
    private PropertyValue<CodeReviewRecord> _review = new PropertyValue<CodeReviewRecord>(nameof(CodeReviewWithCount), nameof(Review), "review");
    
    [Required]
    [JsonPropertyName("review")]
    public CodeReviewRecord Review
    {
        get => _review.GetValue(InlineErrors);
        set => _review.SetValue(value);
    }

    private PropertyValue<int> _messagesCount = new PropertyValue<int>(nameof(CodeReviewWithCount), nameof(MessagesCount), "messagesCount");
    
    [Required]
    [JsonPropertyName("messagesCount")]
    public int MessagesCount
    {
        get => _messagesCount.GetValue(InlineErrors);
        set => _messagesCount.SetValue(value);
    }

    private PropertyValue<List<GitCommitterProfile>> _authors = new PropertyValue<List<GitCommitterProfile>>(nameof(CodeReviewWithCount), nameof(Authors), "authors", new List<GitCommitterProfile>());
    
    [Required]
    [JsonPropertyName("authors")]
    public List<GitCommitterProfile> Authors
    {
        get => _authors.GetValue(InlineErrors);
        set => _authors.SetValue(value);
    }

    private PropertyValue<CodeReviewParticipants> _participants = new PropertyValue<CodeReviewParticipants>(nameof(CodeReviewWithCount), nameof(Participants), "participants");
    
    [Required]
    [JsonPropertyName("participants")]
    public CodeReviewParticipants Participants
    {
        get => _participants.GetValue(InlineErrors);
        set => _participants.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _review.SetAccessPath(parentChainPath, validateHasBeenSet);
        _messagesCount.SetAccessPath(parentChainPath, validateHasBeenSet);
        _authors.SetAccessPath(parentChainPath, validateHasBeenSet);
        _participants.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

