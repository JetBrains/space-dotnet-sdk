// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class DeploymentCommitRef
     : IPropagatePropertyAccessPath
{
    public DeploymentCommitRef() { }
    
    public DeploymentCommitRef(string repositoryName, string branch, string commit, bool head, bool missing, long? timestamp = null)
    {
        RepositoryName = repositoryName;
        Branch = branch;
        Commit = commit;
        Timestamp = timestamp;
        IsHead = head;
        IsMissing = missing;
    }
    
    private PropertyValue<string> _repositoryName = new PropertyValue<string>(nameof(DeploymentCommitRef), nameof(RepositoryName), "repositoryName");
    
    [Required]
    [JsonPropertyName("repositoryName")]
    public string RepositoryName
    {
        get => _repositoryName.GetValue(InlineErrors);
        set => _repositoryName.SetValue(value);
    }

    private PropertyValue<string> _branch = new PropertyValue<string>(nameof(DeploymentCommitRef), nameof(Branch), "branch");
    
    [Required]
    [JsonPropertyName("branch")]
    public string Branch
    {
        get => _branch.GetValue(InlineErrors);
        set => _branch.SetValue(value);
    }

    private PropertyValue<string> _commit = new PropertyValue<string>(nameof(DeploymentCommitRef), nameof(Commit), "commit");
    
    [Required]
    [JsonPropertyName("commit")]
    public string Commit
    {
        get => _commit.GetValue(InlineErrors);
        set => _commit.SetValue(value);
    }

    private PropertyValue<long?> _timestamp = new PropertyValue<long?>(nameof(DeploymentCommitRef), nameof(Timestamp), "timestamp");
    
    [JsonPropertyName("timestamp")]
    public long? Timestamp
    {
        get => _timestamp.GetValue(InlineErrors);
        set => _timestamp.SetValue(value);
    }

    private PropertyValue<bool> _head = new PropertyValue<bool>(nameof(DeploymentCommitRef), nameof(IsHead), "head");
    
    [Required]
    [JsonPropertyName("head")]
    public bool IsHead
    {
        get => _head.GetValue(InlineErrors);
        set => _head.SetValue(value);
    }

    private PropertyValue<bool> _missing = new PropertyValue<bool>(nameof(DeploymentCommitRef), nameof(IsMissing), "missing");
    
    [Required]
    [JsonPropertyName("missing")]
    public bool IsMissing
    {
        get => _missing.GetValue(InlineErrors);
        set => _missing.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _repositoryName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _branch.SetAccessPath(parentChainPath, validateHasBeenSet);
        _commit.SetAccessPath(parentChainPath, validateHasBeenSet);
        _timestamp.SetAccessPath(parentChainPath, validateHasBeenSet);
        _head.SetAccessPath(parentChainPath, validateHasBeenSet);
        _missing.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

