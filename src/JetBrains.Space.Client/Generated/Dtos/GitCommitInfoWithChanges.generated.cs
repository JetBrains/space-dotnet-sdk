// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class GitCommitInfoWithChanges
     : IPropagatePropertyAccessPath
{
    public GitCommitInfoWithChanges() { }
    
    public GitCommitInfoWithChanges(GitCommitInfo commit, GitCommitChanges changes)
    {
        Commit = commit;
        Changes = changes;
    }
    
    private PropertyValue<GitCommitInfo> _commit = new PropertyValue<GitCommitInfo>(nameof(GitCommitInfoWithChanges), nameof(Commit));
    
    [Required]
    [JsonPropertyName("commit")]
    public GitCommitInfo Commit
    {
        get => _commit.GetValue();
        set => _commit.SetValue(value);
    }

    private PropertyValue<GitCommitChanges> _changes = new PropertyValue<GitCommitChanges>(nameof(GitCommitInfoWithChanges), nameof(Changes));
    
    [Required]
    [JsonPropertyName("changes")]
    public GitCommitChanges Changes
    {
        get => _changes.GetValue();
        set => _changes.SetValue(value);
    }

    public  void SetAccessPath(string path, bool validateHasBeenSet)
    {
        _commit.SetAccessPath(path, validateHasBeenSet);
        _changes.SetAccessPath(path, validateHasBeenSet);
    }

}

