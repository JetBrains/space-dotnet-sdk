// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class BGStats
     : IPropagatePropertyAccessPath
{
    public BGStats() { }
    
    public BGStats(int totalBlogs, List<Pair<TDTeam, int>> teams, List<Pair<TDLocation, int>> locations, List<Pair<PRProject, int>>? projects = null)
    {
        TotalBlogs = totalBlogs;
        Teams = teams;
        Projects = projects;
        Locations = locations;
    }
    
    private PropertyValue<int> _totalBlogs = new PropertyValue<int>(nameof(BGStats), nameof(TotalBlogs), "totalBlogs");
    
    [Required]
    [JsonPropertyName("totalBlogs")]
    public int TotalBlogs
    {
        get => _totalBlogs.GetValue(InlineErrors);
        set => _totalBlogs.SetValue(value);
    }

    private PropertyValue<List<Pair<TDTeam, int>>> _teams = new PropertyValue<List<Pair<TDTeam, int>>>(nameof(BGStats), nameof(Teams), "teams", new List<Pair<TDTeam, int>>());
    
    [Required]
    [JsonPropertyName("teams")]
    public List<Pair<TDTeam, int>> Teams
    {
        get => _teams.GetValue(InlineErrors);
        set => _teams.SetValue(value);
    }

    private PropertyValue<List<Pair<PRProject, int>>?> _projects = new PropertyValue<List<Pair<PRProject, int>>?>(nameof(BGStats), nameof(Projects), "projects");
    
    [JsonPropertyName("projects")]
    public List<Pair<PRProject, int>>? Projects
    {
        get => _projects.GetValue(InlineErrors);
        set => _projects.SetValue(value);
    }

    private PropertyValue<List<Pair<TDLocation, int>>> _locations = new PropertyValue<List<Pair<TDLocation, int>>>(nameof(BGStats), nameof(Locations), "locations", new List<Pair<TDLocation, int>>());
    
    [Required]
    [JsonPropertyName("locations")]
    public List<Pair<TDLocation, int>> Locations
    {
        get => _locations.GetValue(InlineErrors);
        set => _locations.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _totalBlogs.SetAccessPath(parentChainPath, validateHasBeenSet);
        _teams.SetAccessPath(parentChainPath, validateHasBeenSet);
        _projects.SetAccessPath(parentChainPath, validateHasBeenSet);
        _locations.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

