// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public interface DocumentBodyInfo
     : IClassNameConvertible, IPropagatePropertyAccessPath
{
    public static ChecklistDocumentBody ChecklistDocumentBody(bool canConvertItemsToIssues, Checklist? checklist = null, string? checklistId = null, int? totalItemsCount = null, int? doneItemsCount = null, string? checklistArenaId = null)
        => new ChecklistDocumentBody(canConvertItemsToIssues: canConvertItemsToIssues, checklist: checklist, checklistId: checklistId, totalItemsCount: totalItemsCount, doneItemsCount: doneItemsCount, checklistArenaId: checklistArenaId);
    
    public static FileDocumentBody FileDocumentBody(string versionId, string contentType, long fileSize)
        => new FileDocumentBody(versionId: versionId, contentType: contentType, fileSize: fileSize);
    
    public static FileDocumentBodyInfo File(FileDocumentRecord? fileDocument = null, string? fileDocumentId = null, string? contentType = null, long? fileSize = null)
        => new FileDocumentBodyInfo(fileDocument: fileDocument, fileDocumentId: fileDocumentId, contentType: contentType, fileSize: fileSize);
    
    public static InaccessibleDocumentBody InaccessibleDocumentBody(DocumentBodyType docBodyType, string docBodyId)
        => new InaccessibleDocumentBody(docBodyType: docBodyType, docBodyId: docBodyId);
    
    public static TextDocument TextDocument(string id, long resetCounter, DraftDocumentType type, string text, long? version = null, string? model = null, List<AttachmentInfo>? attachments = null, List<ResolvedMentionLink>? mentions = null)
        => new TextDocument(id: id, resetCounter: resetCounter, type: type, text: text, version: version, model: model, attachments: attachments, mentions: mentions);
    
    public static TextDocumentBodyInfo Text(TextDocumentRecord? textDocument = null, string? textDocumentId = null, DraftDocumentType? textType = null)
        => new TextDocumentBodyInfo(textDocument: textDocument, textDocumentId: textDocumentId, textType: textType);
    
}

