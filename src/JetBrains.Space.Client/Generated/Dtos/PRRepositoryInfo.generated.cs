// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class PRRepositoryInfo
     : IPropagatePropertyAccessPath
{
    public PRRepositoryInfo() { }
    
    public PRRepositoryInfo(string name, string description, RepositoryState state, string? id = null, DateTime? latestActivity = null, DateTime? proxyPushNotification = null, string? proxyPushNotificationBody = null, string? initProgress = null, string? readmeName = null, RepositoryActivity? monthlyActivity = null, BranchInfo? defaultBranch = null)
    {
        Id = id;
        Name = name;
        Description = description;
        LatestActivity = latestActivity;
        ProxyPushNotification = proxyPushNotification;
        ProxyPushNotificationBody = proxyPushNotificationBody;
        State = state;
        InitProgress = initProgress;
        ReadmeName = readmeName;
        MonthlyActivity = monthlyActivity;
        DefaultBranch = defaultBranch;
    }
    
    private PropertyValue<string?> _id = new PropertyValue<string?>(nameof(PRRepositoryInfo), nameof(Id), "id");
    
    [JsonPropertyName("id")]
    public string? Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _name = new PropertyValue<string>(nameof(PRRepositoryInfo), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string> _description = new PropertyValue<string>(nameof(PRRepositoryInfo), nameof(Description), "description");
    
    [Required]
    [JsonPropertyName("description")]
    public string Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<DateTime?> _latestActivity = new PropertyValue<DateTime?>(nameof(PRRepositoryInfo), nameof(LatestActivity), "latestActivity");
    
    [JsonPropertyName("latestActivity")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime? LatestActivity
    {
        get => _latestActivity.GetValue(InlineErrors);
        set => _latestActivity.SetValue(value);
    }

    private PropertyValue<DateTime?> _proxyPushNotification = new PropertyValue<DateTime?>(nameof(PRRepositoryInfo), nameof(ProxyPushNotification), "proxyPushNotification");
    
    [JsonPropertyName("proxyPushNotification")]
    [JsonConverter(typeof(SpaceDateTimeConverter))]
    public DateTime? ProxyPushNotification
    {
        get => _proxyPushNotification.GetValue(InlineErrors);
        set => _proxyPushNotification.SetValue(value);
    }

    private PropertyValue<string?> _proxyPushNotificationBody = new PropertyValue<string?>(nameof(PRRepositoryInfo), nameof(ProxyPushNotificationBody), "proxyPushNotificationBody");
    
    [JsonPropertyName("proxyPushNotificationBody")]
    public string? ProxyPushNotificationBody
    {
        get => _proxyPushNotificationBody.GetValue(InlineErrors);
        set => _proxyPushNotificationBody.SetValue(value);
    }

    private PropertyValue<RepositoryState> _state = new PropertyValue<RepositoryState>(nameof(PRRepositoryInfo), nameof(State), "state");
    
    [Required]
    [JsonPropertyName("state")]
    public RepositoryState State
    {
        get => _state.GetValue(InlineErrors);
        set => _state.SetValue(value);
    }

    private PropertyValue<string?> _initProgress = new PropertyValue<string?>(nameof(PRRepositoryInfo), nameof(InitProgress), "initProgress");
    
    [JsonPropertyName("initProgress")]
    public string? InitProgress
    {
        get => _initProgress.GetValue(InlineErrors);
        set => _initProgress.SetValue(value);
    }

    private PropertyValue<string?> _readmeName = new PropertyValue<string?>(nameof(PRRepositoryInfo), nameof(ReadmeName), "readmeName");
    
    [JsonPropertyName("readmeName")]
    public string? ReadmeName
    {
        get => _readmeName.GetValue(InlineErrors);
        set => _readmeName.SetValue(value);
    }

    private PropertyValue<RepositoryActivity?> _monthlyActivity = new PropertyValue<RepositoryActivity?>(nameof(PRRepositoryInfo), nameof(MonthlyActivity), "monthlyActivity");
    
    [JsonPropertyName("monthlyActivity")]
    public RepositoryActivity? MonthlyActivity
    {
        get => _monthlyActivity.GetValue(InlineErrors);
        set => _monthlyActivity.SetValue(value);
    }

    private PropertyValue<BranchInfo?> _defaultBranch = new PropertyValue<BranchInfo?>(nameof(PRRepositoryInfo), nameof(DefaultBranch), "defaultBranch");
    
    [JsonPropertyName("defaultBranch")]
    public BranchInfo? DefaultBranch
    {
        get => _defaultBranch.GetValue(InlineErrors);
        set => _defaultBranch.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _latestActivity.SetAccessPath(parentChainPath, validateHasBeenSet);
        _proxyPushNotification.SetAccessPath(parentChainPath, validateHasBeenSet);
        _proxyPushNotificationBody.SetAccessPath(parentChainPath, validateHasBeenSet);
        _state.SetAccessPath(parentChainPath, validateHasBeenSet);
        _initProgress.SetAccessPath(parentChainPath, validateHasBeenSet);
        _readmeName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _monthlyActivity.SetAccessPath(parentChainPath, validateHasBeenSet);
        _defaultBranch.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

