// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public class ProjectsForProjectPeopleMembersUpdatePostRequest
     : IPropagatePropertyAccessPath
{
    public ProjectsForProjectPeopleMembersUpdatePostRequest() { }
    
    public ProjectsForProjectPeopleMembersUpdatePostRequest(ProfileIdentifier profile, List<ProjectRoleIn> addRoles, List<ProjectRoleIn> removeRoles)
    {
        Profile = profile;
        AddRoles = addRoles;
        RemoveRoles = removeRoles;
    }
    
    private PropertyValue<ProfileIdentifier> _profile = new PropertyValue<ProfileIdentifier>(nameof(ProjectsForProjectPeopleMembersUpdatePostRequest), nameof(Profile), "profile");
    
    [Required]
    [JsonPropertyName("profile")]
    public ProfileIdentifier Profile
    {
        get => _profile.GetValue(InlineErrors);
        set => _profile.SetValue(value);
    }

    private PropertyValue<List<ProjectRoleIn>> _addRoles = new PropertyValue<List<ProjectRoleIn>>(nameof(ProjectsForProjectPeopleMembersUpdatePostRequest), nameof(AddRoles), "addRoles", new List<ProjectRoleIn>());
    
    [Required]
    [JsonPropertyName("addRoles")]
    public List<ProjectRoleIn> AddRoles
    {
        get => _addRoles.GetValue(InlineErrors);
        set => _addRoles.SetValue(value);
    }

    private PropertyValue<List<ProjectRoleIn>> _removeRoles = new PropertyValue<List<ProjectRoleIn>>(nameof(ProjectsForProjectPeopleMembersUpdatePostRequest), nameof(RemoveRoles), "removeRoles", new List<ProjectRoleIn>());
    
    [Required]
    [JsonPropertyName("removeRoles")]
    public List<ProjectRoleIn> RemoveRoles
    {
        get => _removeRoles.GetValue(InlineErrors);
        set => _removeRoles.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _profile.SetAccessPath(parentChainPath, validateHasBeenSet);
        _addRoles.SetAccessPath(parentChainPath, validateHasBeenSet);
        _removeRoles.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

