// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ExternalIssueTrackerProjectApi
     : IPropagatePropertyAccessPath
{
    public ExternalIssueTrackerProjectApi() { }
    
    public ExternalIssueTrackerProjectApi(string id, string name, string issuePrefix, string linkReplacement, List<ExternalIssueTrackerProjectLink> spaceProjectLinks, string? issueListUrl = null)
    {
        Id = id;
        Name = name;
        IssuePrefix = issuePrefix;
        LinkReplacement = linkReplacement;
        IssueListUrl = issueListUrl;
        SpaceProjectLinks = spaceProjectLinks;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(ExternalIssueTrackerProjectApi), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _name = new PropertyValue<string>(nameof(ExternalIssueTrackerProjectApi), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string> _issuePrefix = new PropertyValue<string>(nameof(ExternalIssueTrackerProjectApi), nameof(IssuePrefix), "issuePrefix");
    
    [Required]
    [JsonPropertyName("issuePrefix")]
    public string IssuePrefix
    {
        get => _issuePrefix.GetValue(InlineErrors);
        set => _issuePrefix.SetValue(value);
    }

    private PropertyValue<string> _linkReplacement = new PropertyValue<string>(nameof(ExternalIssueTrackerProjectApi), nameof(LinkReplacement), "linkReplacement");
    
    [Required]
    [JsonPropertyName("linkReplacement")]
    public string LinkReplacement
    {
        get => _linkReplacement.GetValue(InlineErrors);
        set => _linkReplacement.SetValue(value);
    }

    private PropertyValue<string?> _issueListUrl = new PropertyValue<string?>(nameof(ExternalIssueTrackerProjectApi), nameof(IssueListUrl), "issueListUrl");
    
    [JsonPropertyName("issueListUrl")]
    public string? IssueListUrl
    {
        get => _issueListUrl.GetValue(InlineErrors);
        set => _issueListUrl.SetValue(value);
    }

    private PropertyValue<List<ExternalIssueTrackerProjectLink>> _spaceProjectLinks = new PropertyValue<List<ExternalIssueTrackerProjectLink>>(nameof(ExternalIssueTrackerProjectApi), nameof(SpaceProjectLinks), "spaceProjectLinks", new List<ExternalIssueTrackerProjectLink>());
    
    [Required]
    [JsonPropertyName("spaceProjectLinks")]
    public List<ExternalIssueTrackerProjectLink> SpaceProjectLinks
    {
        get => _spaceProjectLinks.GetValue(InlineErrors);
        set => _spaceProjectLinks.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _issuePrefix.SetAccessPath(parentChainPath, validateHasBeenSet);
        _linkReplacement.SetAccessPath(parentChainPath, validateHasBeenSet);
        _issueListUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
        _spaceProjectLinks.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

