// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Client.Internal;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class StoragePlanLimit
         : IPropagatePropertyAccessPath
    {
        public StoragePlanLimit() { }
        
        public StoragePlanLimit(PlanLimit files, PlanLimit packages, PlanLimit git)
        {
            Files = files;
            Packages = packages;
            Git = git;
        }
        
        private PropertyValue<PlanLimit> _files = new PropertyValue<PlanLimit>(nameof(StoragePlanLimit), nameof(Files));
        
        [Required]
        [JsonPropertyName("files")]
        public PlanLimit Files
        {
            get => _files.GetValue();
            set => _files.SetValue(value);
        }
    
        private PropertyValue<PlanLimit> _packages = new PropertyValue<PlanLimit>(nameof(StoragePlanLimit), nameof(Packages));
        
        [Required]
        [JsonPropertyName("packages")]
        public PlanLimit Packages
        {
            get => _packages.GetValue();
            set => _packages.SetValue(value);
        }
    
        private PropertyValue<PlanLimit> _git = new PropertyValue<PlanLimit>(nameof(StoragePlanLimit), nameof(Git));
        
        [Required]
        [JsonPropertyName("git")]
        public PlanLimit Git
        {
            get => _git.GetValue();
            set => _git.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _files.SetAccessPath(path, validateHasBeenSet);
            _packages.SetAccessPath(path, validateHasBeenSet);
            _git.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
