// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class SlackNotificationsAppMetadata
     : ApplicationMetadata, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "SlackNotificationsAppMetadata";
    
    public SlackNotificationsAppMetadata() { }
    
    public SlackNotificationsAppMetadata(string slackTeamName, string slackDomain, string? iconUrl = null)
    {
        SlackTeamName = slackTeamName;
        SlackDomain = slackDomain;
        IconUrl = iconUrl;
    }
    
    private PropertyValue<string> _slackTeamName = new PropertyValue<string>(nameof(SlackNotificationsAppMetadata), nameof(SlackTeamName), "slackTeamName");
    
    [Required]
    [JsonPropertyName("slackTeamName")]
    public string SlackTeamName
    {
        get => _slackTeamName.GetValue(InlineErrors);
        set => _slackTeamName.SetValue(value);
    }

    private PropertyValue<string> _slackDomain = new PropertyValue<string>(nameof(SlackNotificationsAppMetadata), nameof(SlackDomain), "slackDomain");
    
    [Required]
    [JsonPropertyName("slackDomain")]
    public string SlackDomain
    {
        get => _slackDomain.GetValue(InlineErrors);
        set => _slackDomain.SetValue(value);
    }

    private PropertyValue<string?> _iconUrl = new PropertyValue<string?>(nameof(SlackNotificationsAppMetadata), nameof(IconUrl), "iconUrl");
    
    [JsonPropertyName("iconUrl")]
    public string? IconUrl
    {
        get => _iconUrl.GetValue(InlineErrors);
        set => _iconUrl.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _slackTeamName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _slackDomain.SetAccessPath(parentChainPath, validateHasBeenSet);
        _iconUrl.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

