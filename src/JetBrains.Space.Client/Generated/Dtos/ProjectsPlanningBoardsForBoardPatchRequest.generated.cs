// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public class ProjectsPlanningBoardsForBoardPatchRequest
     : IPropagatePropertyAccessPath
{
    public ProjectsPlanningBoardsForBoardPatchRequest() { }
    
    public ProjectsPlanningBoardsForBoardPatchRequest(string? name = null, string? description = null, BoardColumns? columns = null, List<string>? memberOwners = null, List<string>? teamOwners = null)
    {
        Name = name;
        Description = description;
        Columns = columns;
        MemberOwners = memberOwners;
        TeamOwners = teamOwners;
    }
    
    private PropertyValue<string?> _name = new PropertyValue<string?>(nameof(ProjectsPlanningBoardsForBoardPatchRequest), nameof(Name));
    
    [JsonPropertyName("name")]
    public string? Name
    {
        get => _name.GetValue();
        set => _name.SetValue(value);
    }

    private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(ProjectsPlanningBoardsForBoardPatchRequest), nameof(Description));
    
    [JsonPropertyName("description")]
    public string? Description
    {
        get => _description.GetValue();
        set => _description.SetValue(value);
    }

    private PropertyValue<BoardColumns?> _columns = new PropertyValue<BoardColumns?>(nameof(ProjectsPlanningBoardsForBoardPatchRequest), nameof(Columns));
    
    [JsonPropertyName("columns")]
    public BoardColumns? Columns
    {
        get => _columns.GetValue();
        set => _columns.SetValue(value);
    }

    private PropertyValue<List<string>?> _memberOwners = new PropertyValue<List<string>?>(nameof(ProjectsPlanningBoardsForBoardPatchRequest), nameof(MemberOwners));
    
    [JsonPropertyName("memberOwners")]
    public List<string>? MemberOwners
    {
        get => _memberOwners.GetValue();
        set => _memberOwners.SetValue(value);
    }

    private PropertyValue<List<string>?> _teamOwners = new PropertyValue<List<string>?>(nameof(ProjectsPlanningBoardsForBoardPatchRequest), nameof(TeamOwners));
    
    [JsonPropertyName("teamOwners")]
    public List<string>? TeamOwners
    {
        get => _teamOwners.GetValue();
        set => _teamOwners.SetValue(value);
    }

    public virtual void SetAccessPath(string path, bool validateHasBeenSet)
    {
        _name.SetAccessPath(path, validateHasBeenSet);
        _description.SetAccessPath(path, validateHasBeenSet);
        _columns.SetAccessPath(path, validateHasBeenSet);
        _memberOwners.SetAccessPath(path, validateHasBeenSet);
        _teamOwners.SetAccessPath(path, validateHasBeenSet);
    }

}

