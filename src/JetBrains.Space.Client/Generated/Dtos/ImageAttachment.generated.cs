// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ImageAttachment
     : MediaAttachment, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "ImageAttachment";
    
    public ImageAttachment() { }
    
    public ImageAttachment(string id, int width, int height, string? name = null, List<ImageAttachmentVariant>? variants = null)
    {
        Id = id;
        Name = name;
        Width = width;
        Height = height;
        Variants = variants;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(ImageAttachment), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string?> _name = new PropertyValue<string?>(nameof(ImageAttachment), nameof(Name), "name");
    
    [JsonPropertyName("name")]
    public string? Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<int> _width = new PropertyValue<int>(nameof(ImageAttachment), nameof(Width), "width");
    
    [Required]
    [JsonPropertyName("width")]
    public int Width
    {
        get => _width.GetValue(InlineErrors);
        set => _width.SetValue(value);
    }

    private PropertyValue<int> _height = new PropertyValue<int>(nameof(ImageAttachment), nameof(Height), "height");
    
    [Required]
    [JsonPropertyName("height")]
    public int Height
    {
        get => _height.GetValue(InlineErrors);
        set => _height.SetValue(value);
    }

    private PropertyValue<List<ImageAttachmentVariant>?> _variants = new PropertyValue<List<ImageAttachmentVariant>?>(nameof(ImageAttachment), nameof(Variants), "variants");
    
    [JsonPropertyName("variants")]
    public List<ImageAttachmentVariant>? Variants
    {
        get => _variants.GetValue(InlineErrors);
        set => _variants.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _width.SetAccessPath(parentChainPath, validateHasBeenSet);
        _height.SetAccessPath(parentChainPath, validateHasBeenSet);
        _variants.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

