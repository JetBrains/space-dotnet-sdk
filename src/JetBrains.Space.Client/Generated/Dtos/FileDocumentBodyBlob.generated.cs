// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class FileDocumentBodyBlob
     : FileDocumentBody, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public override string? ClassName => "FileDocumentBody.Blob";
    
    public FileDocumentBodyBlob() { }
    
    public FileDocumentBodyBlob(string versionId, string mediaType, long fileSize)
    {
        VersionId = versionId;
        MediaType = mediaType;
        FileSize = fileSize;
    }
    
    private PropertyValue<string> _versionId = new PropertyValue<string>(nameof(FileDocumentBodyBlob), nameof(VersionId));
    
    [Required]
    [JsonPropertyName("versionId")]
    public string VersionId
    {
        get => _versionId.GetValue();
        set => _versionId.SetValue(value);
    }

    private PropertyValue<string> _mediaType = new PropertyValue<string>(nameof(FileDocumentBodyBlob), nameof(MediaType));
    
    [Required]
    [JsonPropertyName("mediaType")]
    public string MediaType
    {
        get => _mediaType.GetValue();
        set => _mediaType.SetValue(value);
    }

    private PropertyValue<long> _fileSize = new PropertyValue<long>(nameof(FileDocumentBodyBlob), nameof(FileSize));
    
    [Required]
    [JsonPropertyName("fileSize")]
    public long FileSize
    {
        get => _fileSize.GetValue();
        set => _fileSize.SetValue(value);
    }

    public override void SetAccessPath(string path, bool validateHasBeenSet)
    {
        _versionId.SetAccessPath(path, validateHasBeenSet);
        _mediaType.SetAccessPath(path, validateHasBeenSet);
        _fileSize.SetAccessPath(path, validateHasBeenSet);
    }

}

