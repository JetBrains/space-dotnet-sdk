// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class CodeReviewParticipantCodeOwnerSlot
         : CodeReviewParticipantSlotBase, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        [JsonPropertyName("className")]
        public override string? ClassName => "CodeReviewParticipantCodeOwnerSlot";
        
        public CodeReviewParticipantCodeOwnerSlot() { }
        
        public CodeReviewParticipantCodeOwnerSlot(string pattern, List<string>? rule = null)
        {
            Rule = rule;
            Pattern = pattern;
        }
        
        private PropertyValue<List<string>?> _rule = new PropertyValue<List<string>?>(nameof(CodeReviewParticipantCodeOwnerSlot), nameof(Rule));
        
        [JsonPropertyName("rule")]
        public List<string>? Rule
        {
            get => _rule.GetValue();
            set => _rule.SetValue(value);
        }
    
        private PropertyValue<string> _pattern = new PropertyValue<string>(nameof(CodeReviewParticipantCodeOwnerSlot), nameof(Pattern));
        
        [Required]
        [JsonPropertyName("pattern")]
        public string Pattern
        {
            get => _pattern.GetValue();
            set => _pattern.SetValue(value);
        }
    
        public override void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _rule.SetAccessPath(path, validateHasBeenSet);
            _pattern.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
