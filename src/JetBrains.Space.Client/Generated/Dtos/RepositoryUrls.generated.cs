// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class RepositoryUrls
         : IPropagatePropertyAccessPath
    {
        public RepositoryUrls() { }
        
        public RepositoryUrls(string? httpUrl = null, string? sshUrl = null, string? sshHost = null)
        {
            HttpUrl = httpUrl;
            SshUrl = sshUrl;
            SshHost = sshHost;
        }
        
        private PropertyValue<string?> _httpUrl = new PropertyValue<string?>(nameof(RepositoryUrls), nameof(HttpUrl));
        
        [JsonPropertyName("httpUrl")]
        public string? HttpUrl
        {
            get => _httpUrl.GetValue();
            set => _httpUrl.SetValue(value);
        }
    
        private PropertyValue<string?> _sshUrl = new PropertyValue<string?>(nameof(RepositoryUrls), nameof(SshUrl));
        
        [JsonPropertyName("sshUrl")]
        public string? SshUrl
        {
            get => _sshUrl.GetValue();
            set => _sshUrl.SetValue(value);
        }
    
        private PropertyValue<string?> _sshHost = new PropertyValue<string?>(nameof(RepositoryUrls), nameof(SshHost));
        
        [JsonPropertyName("sshHost")]
        public string? SshHost
        {
            get => _sshHost.GetValue();
            set => _sshHost.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _httpUrl.SetAccessPath(path, validateHasBeenSet);
            _sshUrl.SetAccessPath(path, validateHasBeenSet);
            _sshHost.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
