// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CodeIssuesFeedbackForFile
     : IPropagatePropertyAccessPath
{
    public CodeIssuesFeedbackForFile() { }
    
    public CodeIssuesFeedbackForFile(string filePath, List<CodeIssueFeedback> issues)
    {
        FilePath = filePath;
        Issues = issues;
    }
    
    private PropertyValue<string> _filePath = new PropertyValue<string>(nameof(CodeIssuesFeedbackForFile), nameof(FilePath), "filePath");
    
    [Required]
    [JsonPropertyName("filePath")]
    public string FilePath
    {
        get => _filePath.GetValue(InlineErrors);
        set => _filePath.SetValue(value);
    }

    private PropertyValue<List<CodeIssueFeedback>> _issues = new PropertyValue<List<CodeIssueFeedback>>(nameof(CodeIssuesFeedbackForFile), nameof(Issues), "issues", new List<CodeIssueFeedback>());
    
    [Required]
    [JsonPropertyName("issues")]
    public List<CodeIssueFeedback> Issues
    {
        get => _issues.GetValue(InlineErrors);
        set => _issues.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _filePath.SetAccessPath(parentChainPath, validateHasBeenSet);
        _issues.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

