// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ApplicationUnfurlQueueItem
     : IPropagatePropertyAccessPath
{
    public ApplicationUnfurlQueueItem() { }
    
    public ApplicationUnfurlQueueItem(string id, string target, long etag, ApplicationUnfurlContext? context = null, ProfileIdentifier? authorUserId = null)
    {
        Id = id;
        Target = target;
        Context = context;
        AuthorUserId = authorUserId;
        Etag = etag;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(ApplicationUnfurlQueueItem), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _target = new PropertyValue<string>(nameof(ApplicationUnfurlQueueItem), nameof(Target), "target");
    
    /// <summary>
    /// External url that the preview is being provided for
    /// </summary>
    [Required]
    [JsonPropertyName("target")]
    public string Target
    {
        get => _target.GetValue(InlineErrors);
        set => _target.SetValue(value);
    }

    private PropertyValue<ApplicationUnfurlContext?> _context = new PropertyValue<ApplicationUnfurlContext?>(nameof(ApplicationUnfurlQueueItem), nameof(Context), "context");
    
    /// <summary>
    /// Describes the context in which this link appears in Space
    /// </summary>
    [JsonPropertyName("context")]
    public ApplicationUnfurlContext? Context
    {
        get => _context.GetValue(InlineErrors);
        set => _context.SetValue(value);
    }

    private PropertyValue<ProfileIdentifier?> _authorUserId = new PropertyValue<ProfileIdentifier?>(nameof(ApplicationUnfurlQueueItem), nameof(AuthorUserId), "authorUserId");
    
    /// <summary>
    /// Space user that has posted the link
    /// </summary>
    [JsonPropertyName("authorUserId")]
    public ProfileIdentifier? AuthorUserId
    {
        get => _authorUserId.GetValue(InlineErrors);
        set => _authorUserId.SetValue(value);
    }

    private PropertyValue<long> _etag = new PropertyValue<long>(nameof(ApplicationUnfurlQueueItem), nameof(Etag), "etag");
    
    /// <summary>
    /// Monotonically increasing counter that should be used by the application to fetch unprocessed queue items only
    /// </summary>
    [Required]
    [JsonPropertyName("etag")]
    public long Etag
    {
        get => _etag.GetValue(InlineErrors);
        set => _etag.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _target.SetAccessPath(parentChainPath, validateHasBeenSet);
        _context.SetAccessPath(parentChainPath, validateHasBeenSet);
        _authorUserId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _etag.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

