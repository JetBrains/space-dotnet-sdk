// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public class ProjectsForProjectPlanningChecklistsForChecklistIdPatchRequest
         : IPropagatePropertyAccessPath
    {
        public ProjectsForProjectPlanningChecklistsForChecklistIdPatchRequest() { }
        
        public ProjectsForProjectPlanningChecklistsForChecklistIdPatchRequest(string? name = null, string? description = null, string? owner = null, string? tag = null)
        {
            Name = (name ?? string.Empty);
            Description = description;
            Owner = owner;
            Tag = tag;
        }
        
        private PropertyValue<string> _name = new PropertyValue<string>(nameof(ProjectsForProjectPlanningChecklistsForChecklistIdPatchRequest), nameof(Name), string.Empty);
        
        [JsonPropertyName("name")]
        public string Name
        {
            get => _name.GetValue();
            set => _name.SetValue(value);
        }
    
        private PropertyValue<string?> _description = new PropertyValue<string?>(nameof(ProjectsForProjectPlanningChecklistsForChecklistIdPatchRequest), nameof(Description));
        
        [JsonPropertyName("description")]
        public string? Description
        {
            get => _description.GetValue();
            set => _description.SetValue(value);
        }
    
        private PropertyValue<string?> _owner = new PropertyValue<string?>(nameof(ProjectsForProjectPlanningChecklistsForChecklistIdPatchRequest), nameof(Owner));
        
        [JsonPropertyName("owner")]
        public string? Owner
        {
            get => _owner.GetValue();
            set => _owner.SetValue(value);
        }
    
        private PropertyValue<string?> _tag = new PropertyValue<string?>(nameof(ProjectsForProjectPlanningChecklistsForChecklistIdPatchRequest), nameof(Tag));
        
        [JsonPropertyName("tag")]
        public string? Tag
        {
            get => _tag.GetValue();
            set => _tag.SetValue(value);
        }
    
        public virtual void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _name.SetAccessPath(path, validateHasBeenSet);
            _description.SetAccessPath(path, validateHasBeenSet);
            _owner.SetAccessPath(path, validateHasBeenSet);
            _tag.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
