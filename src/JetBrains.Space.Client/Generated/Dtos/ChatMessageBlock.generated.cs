// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ChatMessageBlock
     : ChatMessage, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public override string? ClassName => "ChatMessage.Block";
    
    public ChatMessageBlock() { }
    
    public ChatMessageBlock(List<MessageSectionElement> sections, MessageStyle? style = null, MessageOutlineBase? outline = null, string? messageData = null)
    {
        Style = style;
        Outline = outline;
        Sections = sections;
        MessageData = messageData;
    }
    
    private PropertyValue<MessageStyle?> _style = new PropertyValue<MessageStyle?>(nameof(ChatMessageBlock), nameof(Style), "style");
    
    [JsonPropertyName("style")]
    public MessageStyle? Style
    {
        get => _style.GetValue(InlineErrors);
        set => _style.SetValue(value);
    }

    private PropertyValue<MessageOutlineBase?> _outline = new PropertyValue<MessageOutlineBase?>(nameof(ChatMessageBlock), nameof(Outline), "outline");
    
    [JsonPropertyName("outline")]
    public MessageOutlineBase? Outline
    {
        get => _outline.GetValue(InlineErrors);
        set => _outline.SetValue(value);
    }

    private PropertyValue<List<MessageSectionElement>> _sections = new PropertyValue<List<MessageSectionElement>>(nameof(ChatMessageBlock), nameof(Sections), "sections", new List<MessageSectionElement>());
    
    [Required]
    [JsonPropertyName("sections")]
    public List<MessageSectionElement> Sections
    {
        get => _sections.GetValue(InlineErrors);
        set => _sections.SetValue(value);
    }

    private PropertyValue<string?> _messageData = new PropertyValue<string?>(nameof(ChatMessageBlock), nameof(MessageData), "messageData");
    
    [JsonPropertyName("messageData")]
    public string? MessageData
    {
        get => _messageData.GetValue(InlineErrors);
        set => _messageData.SetValue(value);
    }

    public override void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _style.SetAccessPath(parentChainPath, validateHasBeenSet);
        _outline.SetAccessPath(parentChainPath, validateHasBeenSet);
        _sections.SetAccessPath(parentChainPath, validateHasBeenSet);
        _messageData.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

