// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

internal class ProjectsForProjectRepositoriesForRepositoryHeadPostRequest
     : IPropagatePropertyAccessPath
{
    public ProjectsForProjectRepositoriesForRepositoryHeadPostRequest() { }
    
    public ProjectsForProjectRepositoriesForRepositoryHeadPostRequest(string head, string target, string? source = null)
    {
        Head = head;
        Target = target;
        Source = source;
    }
    
    private PropertyValue<string> _head = new PropertyValue<string>(nameof(ProjectsForProjectRepositoriesForRepositoryHeadPostRequest), nameof(Head), "head");
    
    [Required]
    [JsonPropertyName("head")]
    public string Head
    {
        get => _head.GetValue(InlineErrors);
        set => _head.SetValue(value);
    }

    private PropertyValue<string> _target = new PropertyValue<string>(nameof(ProjectsForProjectRepositoriesForRepositoryHeadPostRequest), nameof(Target), "target");
    
    [Required]
    [JsonPropertyName("target")]
    public string Target
    {
        get => _target.GetValue(InlineErrors);
        set => _target.SetValue(value);
    }

    private PropertyValue<string?> _source = new PropertyValue<string?>(nameof(ProjectsForProjectRepositoriesForRepositoryHeadPostRequest), nameof(Source), "source");
    
    /// <summary>
    /// If specified, the head should point to given commit before updating
    /// </summary>
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("source")]
    public string? Source
    {
        get => _source.GetValue(InlineErrors);
        set => _source.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _head.SetAccessPath(parentChainPath, validateHasBeenSet);
        _target.SetAccessPath(parentChainPath, validateHasBeenSet);
        _source.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

