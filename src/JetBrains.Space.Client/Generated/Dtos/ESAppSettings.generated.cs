// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ESAppSettings
     : IPropagatePropertyAccessPath
{
    public ESAppSettings() { }
    
    public ESAppSettings(bool? clientCredentialsFlowEnabled = null, bool? codeFlowEnabled = null, string? codeFlowRedirectURIs = null, bool? pkceRequired = null, bool? implicitFlowEnabled = null, string? implicitFlowRedirectURIs = null, EndpointDTO? endpoint = null, EndpointAuthDTO? endpointAuth = null, string? externalIssueTrackerDomain = null)
    {
        IsClientCredentialsFlowEnabled = clientCredentialsFlowEnabled;
        IsCodeFlowEnabled = codeFlowEnabled;
        CodeFlowRedirectURIs = codeFlowRedirectURIs;
        IsPkceRequired = pkceRequired;
        IsImplicitFlowEnabled = implicitFlowEnabled;
        ImplicitFlowRedirectURIs = implicitFlowRedirectURIs;
        Endpoint = endpoint;
        EndpointAuth = endpointAuth;
        ExternalIssueTrackerDomain = externalIssueTrackerDomain;
    }
    
    private PropertyValue<bool?> _clientCredentialsFlowEnabled = new PropertyValue<bool?>(nameof(ESAppSettings), nameof(IsClientCredentialsFlowEnabled), "clientCredentialsFlowEnabled");
    
    [JsonPropertyName("clientCredentialsFlowEnabled")]
    public bool? IsClientCredentialsFlowEnabled
    {
        get => _clientCredentialsFlowEnabled.GetValue(InlineErrors);
        set => _clientCredentialsFlowEnabled.SetValue(value);
    }

    private PropertyValue<bool?> _codeFlowEnabled = new PropertyValue<bool?>(nameof(ESAppSettings), nameof(IsCodeFlowEnabled), "codeFlowEnabled");
    
    [JsonPropertyName("codeFlowEnabled")]
    public bool? IsCodeFlowEnabled
    {
        get => _codeFlowEnabled.GetValue(InlineErrors);
        set => _codeFlowEnabled.SetValue(value);
    }

    private PropertyValue<string?> _codeFlowRedirectURIs = new PropertyValue<string?>(nameof(ESAppSettings), nameof(CodeFlowRedirectURIs), "codeFlowRedirectURIs");
    
    [JsonPropertyName("codeFlowRedirectURIs")]
    public string? CodeFlowRedirectURIs
    {
        get => _codeFlowRedirectURIs.GetValue(InlineErrors);
        set => _codeFlowRedirectURIs.SetValue(value);
    }

    private PropertyValue<bool?> _pkceRequired = new PropertyValue<bool?>(nameof(ESAppSettings), nameof(IsPkceRequired), "pkceRequired");
    
    [JsonPropertyName("pkceRequired")]
    public bool? IsPkceRequired
    {
        get => _pkceRequired.GetValue(InlineErrors);
        set => _pkceRequired.SetValue(value);
    }

    private PropertyValue<bool?> _implicitFlowEnabled = new PropertyValue<bool?>(nameof(ESAppSettings), nameof(IsImplicitFlowEnabled), "implicitFlowEnabled");
    
    [JsonPropertyName("implicitFlowEnabled")]
    public bool? IsImplicitFlowEnabled
    {
        get => _implicitFlowEnabled.GetValue(InlineErrors);
        set => _implicitFlowEnabled.SetValue(value);
    }

    private PropertyValue<string?> _implicitFlowRedirectURIs = new PropertyValue<string?>(nameof(ESAppSettings), nameof(ImplicitFlowRedirectURIs), "implicitFlowRedirectURIs");
    
    [JsonPropertyName("implicitFlowRedirectURIs")]
    public string? ImplicitFlowRedirectURIs
    {
        get => _implicitFlowRedirectURIs.GetValue(InlineErrors);
        set => _implicitFlowRedirectURIs.SetValue(value);
    }

    private PropertyValue<EndpointDTO?> _endpoint = new PropertyValue<EndpointDTO?>(nameof(ESAppSettings), nameof(Endpoint), "endpoint");
    
    [JsonPropertyName("endpoint")]
    public EndpointDTO? Endpoint
    {
        get => _endpoint.GetValue(InlineErrors);
        set => _endpoint.SetValue(value);
    }

    private PropertyValue<EndpointAuthDTO?> _endpointAuth = new PropertyValue<EndpointAuthDTO?>(nameof(ESAppSettings), nameof(EndpointAuth), "endpointAuth");
    
    [JsonPropertyName("endpointAuth")]
    public EndpointAuthDTO? EndpointAuth
    {
        get => _endpointAuth.GetValue(InlineErrors);
        set => _endpointAuth.SetValue(value);
    }

    private PropertyValue<string?> _externalIssueTrackerDomain = new PropertyValue<string?>(nameof(ESAppSettings), nameof(ExternalIssueTrackerDomain), "externalIssueTrackerDomain");
    
    [JsonPropertyName("externalIssueTrackerDomain")]
    public string? ExternalIssueTrackerDomain
    {
        get => _externalIssueTrackerDomain.GetValue(InlineErrors);
        set => _externalIssueTrackerDomain.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _clientCredentialsFlowEnabled.SetAccessPath(parentChainPath, validateHasBeenSet);
        _codeFlowEnabled.SetAccessPath(parentChainPath, validateHasBeenSet);
        _codeFlowRedirectURIs.SetAccessPath(parentChainPath, validateHasBeenSet);
        _pkceRequired.SetAccessPath(parentChainPath, validateHasBeenSet);
        _implicitFlowEnabled.SetAccessPath(parentChainPath, validateHasBeenSet);
        _implicitFlowRedirectURIs.SetAccessPath(parentChainPath, validateHasBeenSet);
        _endpoint.SetAccessPath(parentChainPath, validateHasBeenSet);
        _endpointAuth.SetAccessPath(parentChainPath, validateHasBeenSet);
        _externalIssueTrackerDomain.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

