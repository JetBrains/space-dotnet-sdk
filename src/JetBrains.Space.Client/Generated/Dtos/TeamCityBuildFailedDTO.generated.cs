// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class TeamCityBuildFailedDTO
     : IPropagatePropertyAccessPath
{
    public TeamCityBuildFailedDTO() { }
    
    public TeamCityBuildFailedDTO(string name, string message, int failedTestsCount, List<TeamCityFailedTestDTO> failedTests, string? url = null)
    {
        Name = name;
        Url = url;
        Message = message;
        FailedTestsCount = failedTestsCount;
        FailedTests = failedTests;
    }
    
    private PropertyValue<string> _name = new PropertyValue<string>(nameof(TeamCityBuildFailedDTO), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string?> _url = new PropertyValue<string?>(nameof(TeamCityBuildFailedDTO), nameof(Url), "url");
    
    [JsonPropertyName("url")]
    public string? Url
    {
        get => _url.GetValue(InlineErrors);
        set => _url.SetValue(value);
    }

    private PropertyValue<string> _message = new PropertyValue<string>(nameof(TeamCityBuildFailedDTO), nameof(Message), "message");
    
    [Required]
    [JsonPropertyName("message")]
    public string Message
    {
        get => _message.GetValue(InlineErrors);
        set => _message.SetValue(value);
    }

    private PropertyValue<int> _failedTestsCount = new PropertyValue<int>(nameof(TeamCityBuildFailedDTO), nameof(FailedTestsCount), "failedTestsCount");
    
    [Required]
    [JsonPropertyName("failedTestsCount")]
    public int FailedTestsCount
    {
        get => _failedTestsCount.GetValue(InlineErrors);
        set => _failedTestsCount.SetValue(value);
    }

    private PropertyValue<List<TeamCityFailedTestDTO>> _failedTests = new PropertyValue<List<TeamCityFailedTestDTO>>(nameof(TeamCityBuildFailedDTO), nameof(FailedTests), "failedTests", new List<TeamCityFailedTestDTO>());
    
    [Required]
    [JsonPropertyName("failedTests")]
    public List<TeamCityFailedTestDTO> FailedTests
    {
        get => _failedTests.GetValue(InlineErrors);
        set => _failedTests.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _url.SetAccessPath(parentChainPath, validateHasBeenSet);
        _message.SetAccessPath(parentChainPath, validateHasBeenSet);
        _failedTestsCount.SetAccessPath(parentChainPath, validateHasBeenSet);
        _failedTests.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

