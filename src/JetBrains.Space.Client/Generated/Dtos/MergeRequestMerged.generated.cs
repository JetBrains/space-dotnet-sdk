// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class MergeRequestMerged
     : CompactFeedEvent, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "MergeRequestMerged";
    
    public MergeRequestMerged() { }
    
    public MergeRequestMerged(string sourceBranch, string targetBranch, bool? isSourceBranchDeleted = null, bool? mergeDetected = null)
    {
        SourceBranch = sourceBranch;
        TargetBranch = targetBranch;
        IsSourceBranchDeleted = isSourceBranchDeleted;
        IsMergeDetected = mergeDetected;
    }
    
    private PropertyValue<string> _sourceBranch = new PropertyValue<string>(nameof(MergeRequestMerged), nameof(SourceBranch), "sourceBranch");
    
    [Required]
    [JsonPropertyName("sourceBranch")]
    public string SourceBranch
    {
        get => _sourceBranch.GetValue(InlineErrors);
        set => _sourceBranch.SetValue(value);
    }

    private PropertyValue<string> _targetBranch = new PropertyValue<string>(nameof(MergeRequestMerged), nameof(TargetBranch), "targetBranch");
    
    [Required]
    [JsonPropertyName("targetBranch")]
    public string TargetBranch
    {
        get => _targetBranch.GetValue(InlineErrors);
        set => _targetBranch.SetValue(value);
    }

    private PropertyValue<bool?> _isSourceBranchDeleted = new PropertyValue<bool?>(nameof(MergeRequestMerged), nameof(IsSourceBranchDeleted), "isSourceBranchDeleted");
    
    [JsonPropertyName("isSourceBranchDeleted")]
    public bool? IsSourceBranchDeleted
    {
        get => _isSourceBranchDeleted.GetValue(InlineErrors);
        set => _isSourceBranchDeleted.SetValue(value);
    }

    private PropertyValue<bool?> _mergeDetected = new PropertyValue<bool?>(nameof(MergeRequestMerged), nameof(IsMergeDetected), "mergeDetected");
    
    [JsonPropertyName("mergeDetected")]
    public bool? IsMergeDetected
    {
        get => _mergeDetected.GetValue(InlineErrors);
        set => _mergeDetected.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _sourceBranch.SetAccessPath(parentChainPath, validateHasBeenSet);
        _targetBranch.SetAccessPath(parentChainPath, validateHasBeenSet);
        _isSourceBranchDeleted.SetAccessPath(parentChainPath, validateHasBeenSet);
        _mergeDetected.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

