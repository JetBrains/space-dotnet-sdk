// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class FeatureFlag
     : IPropagatePropertyAccessPath
{
    public FeatureFlag() { }
    
    public FeatureFlag(string name, string description, FeatureFlagStatus status, string owner, FeatureFlagDate? since = null, int? issueNumber = null)
    {
        Name = name;
        Description = description;
        Status = status;
        Owner = owner;
        Since = since;
        IssueNumber = issueNumber;
    }
    
    private PropertyValue<string> _name = new PropertyValue<string>(nameof(FeatureFlag), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<string> _description = new PropertyValue<string>(nameof(FeatureFlag), nameof(Description), "description");
    
    [Required]
    [JsonPropertyName("description")]
    public string Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<FeatureFlagStatus> _status = new PropertyValue<FeatureFlagStatus>(nameof(FeatureFlag), nameof(Status), "status");
    
    [Required]
    [JsonPropertyName("status")]
    public FeatureFlagStatus Status
    {
        get => _status.GetValue(InlineErrors);
        set => _status.SetValue(value);
    }

    private PropertyValue<string> _owner = new PropertyValue<string>(nameof(FeatureFlag), nameof(Owner), "owner");
    
    [Required]
    [JsonPropertyName("owner")]
    public string Owner
    {
        get => _owner.GetValue(InlineErrors);
        set => _owner.SetValue(value);
    }

    private PropertyValue<FeatureFlagDate?> _since = new PropertyValue<FeatureFlagDate?>(nameof(FeatureFlag), nameof(Since), "since");
    
    [JsonPropertyName("since")]
    public FeatureFlagDate? Since
    {
        get => _since.GetValue(InlineErrors);
        set => _since.SetValue(value);
    }

    private PropertyValue<int?> _issueNumber = new PropertyValue<int?>(nameof(FeatureFlag), nameof(IssueNumber), "issueNumber");
    
    [JsonPropertyName("issueNumber")]
    public int? IssueNumber
    {
        get => _issueNumber.GetValue(InlineErrors);
        set => _issueNumber.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _status.SetAccessPath(parentChainPath, validateHasBeenSet);
        _owner.SetAccessPath(parentChainPath, validateHasBeenSet);
        _since.SetAccessPath(parentChainPath, validateHasBeenSet);
        _issueNumber.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

