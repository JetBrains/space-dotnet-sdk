// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Client.Internal;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public class TeamDirectoryMembershipsForMembershipIdPatchRequest
         : IPropagatePropertyAccessPath
    {
        public TeamDirectoryMembershipsForMembershipIdPatchRequest() { }
        
        public TeamDirectoryMembershipsForMembershipIdPatchRequest(bool requiresApproval = false, string? teamId = null, string? roleId = null, bool? lead = null, ProfileIdentifier? manager = null, DateTime? activeSince = null, DateTime? activeTill = null, List<CustomFieldValue>? customFieldValues = null)
        {
            TeamId = teamId;
            RoleId = roleId;
            IsLead = lead;
            Manager = manager;
            ActiveSince = activeSince;
            ActiveTill = activeTill;
            IsRequiresApproval = requiresApproval;
            CustomFieldValues = customFieldValues;
        }
        
        private PropertyValue<string?> _teamId = new PropertyValue<string?>(nameof(TeamDirectoryMembershipsForMembershipIdPatchRequest), nameof(TeamId));
        
        [JsonPropertyName("teamId")]
        public string? TeamId
        {
            get => _teamId.GetValue();
            set => _teamId.SetValue(value);
        }
    
        private PropertyValue<string?> _roleId = new PropertyValue<string?>(nameof(TeamDirectoryMembershipsForMembershipIdPatchRequest), nameof(RoleId));
        
        [JsonPropertyName("roleId")]
        public string? RoleId
        {
            get => _roleId.GetValue();
            set => _roleId.SetValue(value);
        }
    
        private PropertyValue<bool?> _lead = new PropertyValue<bool?>(nameof(TeamDirectoryMembershipsForMembershipIdPatchRequest), nameof(IsLead));
        
        [JsonPropertyName("lead")]
        public bool? IsLead
        {
            get => _lead.GetValue();
            set => _lead.SetValue(value);
        }
    
        private PropertyValue<ProfileIdentifier?> _manager = new PropertyValue<ProfileIdentifier?>(nameof(TeamDirectoryMembershipsForMembershipIdPatchRequest), nameof(Manager));
        
        [JsonPropertyName("manager")]
        public ProfileIdentifier? Manager
        {
            get => _manager.GetValue();
            set => _manager.SetValue(value);
        }
    
        private PropertyValue<DateTime?> _activeSince = new PropertyValue<DateTime?>(nameof(TeamDirectoryMembershipsForMembershipIdPatchRequest), nameof(ActiveSince));
        
        [JsonPropertyName("activeSince")]
        [JsonConverter(typeof(SpaceDateTimeConverter))]
        public DateTime? ActiveSince
        {
            get => _activeSince.GetValue();
            set => _activeSince.SetValue(value);
        }
    
        private PropertyValue<DateTime?> _activeTill = new PropertyValue<DateTime?>(nameof(TeamDirectoryMembershipsForMembershipIdPatchRequest), nameof(ActiveTill));
        
        [JsonPropertyName("activeTill")]
        [JsonConverter(typeof(SpaceDateTimeConverter))]
        public DateTime? ActiveTill
        {
            get => _activeTill.GetValue();
            set => _activeTill.SetValue(value);
        }
    
        private PropertyValue<bool> _requiresApproval = new PropertyValue<bool>(nameof(TeamDirectoryMembershipsForMembershipIdPatchRequest), nameof(IsRequiresApproval));
        
        [JsonPropertyName("requiresApproval")]
        public bool IsRequiresApproval
        {
            get => _requiresApproval.GetValue();
            set => _requiresApproval.SetValue(value);
        }
    
        private PropertyValue<List<CustomFieldValue>?> _customFieldValues = new PropertyValue<List<CustomFieldValue>?>(nameof(TeamDirectoryMembershipsForMembershipIdPatchRequest), nameof(CustomFieldValues));
        
        [JsonPropertyName("customFieldValues")]
        public List<CustomFieldValue>? CustomFieldValues
        {
            get => _customFieldValues.GetValue();
            set => _customFieldValues.SetValue(value);
        }
    
        public virtual void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _teamId.SetAccessPath(path, validateHasBeenSet);
            _roleId.SetAccessPath(path, validateHasBeenSet);
            _lead.SetAccessPath(path, validateHasBeenSet);
            _manager.SetAccessPath(path, validateHasBeenSet);
            _activeSince.SetAccessPath(path, validateHasBeenSet);
            _activeTill.SetAccessPath(path, validateHasBeenSet);
            _requiresApproval.SetAccessPath(path, validateHasBeenSet);
            _customFieldValues.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
