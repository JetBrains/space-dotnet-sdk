// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class CodeReviewDiscussionCounter
         : IPropagatePropertyAccessPath
    {
        public CodeReviewDiscussionCounter() { }
        
        public CodeReviewDiscussionCounter(string id, Counter discussionCounter)
        {
            Id = id;
            DiscussionCounter = discussionCounter;
        }
        
        private PropertyValue<string> _id = new PropertyValue<string>(nameof(CodeReviewDiscussionCounter), nameof(Id));
        
        [Required]
        [JsonPropertyName("id")]
        public string Id
        {
            get => _id.GetValue();
            set => _id.SetValue(value);
        }
    
        private PropertyValue<Counter> _discussionCounter = new PropertyValue<Counter>(nameof(CodeReviewDiscussionCounter), nameof(DiscussionCounter));
        
        [Required]
        [JsonPropertyName("discussionCounter")]
        public Counter DiscussionCounter
        {
            get => _discussionCounter.GetValue();
            set => _discussionCounter.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _id.SetAccessPath(path, validateHasBeenSet);
            _discussionCounter.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
