// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class BasicCRDiscussionContactRecord
     : IPropagatePropertyAccessPath
{
    public BasicCRDiscussionContactRecord() { }
    
    public BasicCRDiscussionContactRecord(string id, MessageInfo threadMessage, string channelType, string contactKey, bool archived)
    {
        Id = id;
        ThreadMessage = threadMessage;
        ChannelType = channelType;
        ContactKey = contactKey;
        IsArchived = archived;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(BasicCRDiscussionContactRecord), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<MessageInfo> _threadMessage = new PropertyValue<MessageInfo>(nameof(BasicCRDiscussionContactRecord), nameof(ThreadMessage), "threadMessage");
    
    [Required]
    [JsonPropertyName("threadMessage")]
    public MessageInfo ThreadMessage
    {
        get => _threadMessage.GetValue(InlineErrors);
        set => _threadMessage.SetValue(value);
    }

    private PropertyValue<string> _channelType = new PropertyValue<string>(nameof(BasicCRDiscussionContactRecord), nameof(ChannelType), "channelType");
    
    [Required]
    [JsonPropertyName("channelType")]
    public string ChannelType
    {
        get => _channelType.GetValue(InlineErrors);
        set => _channelType.SetValue(value);
    }

    private PropertyValue<string> _contactKey = new PropertyValue<string>(nameof(BasicCRDiscussionContactRecord), nameof(ContactKey), "contactKey");
    
    [Required]
    [JsonPropertyName("contactKey")]
    public string ContactKey
    {
        get => _contactKey.GetValue(InlineErrors);
        set => _contactKey.SetValue(value);
    }

    private PropertyValue<bool> _archived = new PropertyValue<bool>(nameof(BasicCRDiscussionContactRecord), nameof(IsArchived), "archived");
    
    [Required]
    [JsonPropertyName("archived")]
    public bool IsArchived
    {
        get => _archived.GetValue(InlineErrors);
        set => _archived.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _threadMessage.SetAccessPath(parentChainPath, validateHasBeenSet);
        _channelType.SetAccessPath(parentChainPath, validateHasBeenSet);
        _contactKey.SetAccessPath(parentChainPath, validateHasBeenSet);
        _archived.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

