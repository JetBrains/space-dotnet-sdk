// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class CheckoutRevisionDTO
     : IPropagatePropertyAccessPath
{
    public CheckoutRevisionDTO() { }
    
    public CheckoutRevisionDTO(string repoName, Branch branch, string? cloneDir = null, string? commit = null)
    {
        RepoName = repoName;
        CloneDir = cloneDir;
        Branch = branch;
        Commit = commit;
    }
    
    private PropertyValue<string> _repoName = new PropertyValue<string>(nameof(CheckoutRevisionDTO), nameof(RepoName), "repoName");
    
    [Required]
    [JsonPropertyName("repoName")]
    public string RepoName
    {
        get => _repoName.GetValue(InlineErrors);
        set => _repoName.SetValue(value);
    }

    private PropertyValue<string?> _cloneDir = new PropertyValue<string?>(nameof(CheckoutRevisionDTO), nameof(CloneDir), "cloneDir");
    
    [JsonPropertyName("cloneDir")]
    public string? CloneDir
    {
        get => _cloneDir.GetValue(InlineErrors);
        set => _cloneDir.SetValue(value);
    }

    private PropertyValue<Branch> _branch = new PropertyValue<Branch>(nameof(CheckoutRevisionDTO), nameof(Branch), "branch");
    
    [Required]
    [JsonPropertyName("branch")]
    public Branch Branch
    {
        get => _branch.GetValue(InlineErrors);
        set => _branch.SetValue(value);
    }

    private PropertyValue<string?> _commit = new PropertyValue<string?>(nameof(CheckoutRevisionDTO), nameof(Commit), "commit");
    
    [JsonPropertyName("commit")]
    public string? Commit
    {
        get => _commit.GetValue(InlineErrors);
        set => _commit.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _repoName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _cloneDir.SetAccessPath(parentChainPath, validateHasBeenSet);
        _branch.SetAccessPath(parentChainPath, validateHasBeenSet);
        _commit.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

