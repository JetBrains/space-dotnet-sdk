// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class M2TaskExecutionSucceedItemContent
     : M2ItemContentDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "M2TaskExecutionSucceedItemContent";
    
    public M2TaskExecutionSucceedItemContent() { }
    
    public M2TaskExecutionSucceedItemContent(string taskExecutionId, string taskExecutionName, string repoName, string branchName, string commit, string shortCommitMessage, ProjectKey project, long finishDateTime, string triggerInfo, string details)
    {
        TaskExecutionId = taskExecutionId;
        TaskExecutionName = taskExecutionName;
        RepoName = repoName;
        BranchName = branchName;
        Commit = commit;
        ShortCommitMessage = shortCommitMessage;
        Project = project;
        FinishDateTime = finishDateTime;
        TriggerInfo = triggerInfo;
        Details = details;
    }
    
    private PropertyValue<string> _taskExecutionId = new PropertyValue<string>(nameof(M2TaskExecutionSucceedItemContent), nameof(TaskExecutionId), "taskExecutionId");
    
    [Required]
    [JsonPropertyName("taskExecutionId")]
    public string TaskExecutionId
    {
        get => _taskExecutionId.GetValue(InlineErrors);
        set => _taskExecutionId.SetValue(value);
    }

    private PropertyValue<string> _taskExecutionName = new PropertyValue<string>(nameof(M2TaskExecutionSucceedItemContent), nameof(TaskExecutionName), "taskExecutionName");
    
    [Required]
    [JsonPropertyName("taskExecutionName")]
    public string TaskExecutionName
    {
        get => _taskExecutionName.GetValue(InlineErrors);
        set => _taskExecutionName.SetValue(value);
    }

    private PropertyValue<string> _repoName = new PropertyValue<string>(nameof(M2TaskExecutionSucceedItemContent), nameof(RepoName), "repoName");
    
    [Required]
    [JsonPropertyName("repoName")]
    public string RepoName
    {
        get => _repoName.GetValue(InlineErrors);
        set => _repoName.SetValue(value);
    }

    private PropertyValue<string> _branchName = new PropertyValue<string>(nameof(M2TaskExecutionSucceedItemContent), nameof(BranchName), "branchName");
    
    [Required]
    [JsonPropertyName("branchName")]
    public string BranchName
    {
        get => _branchName.GetValue(InlineErrors);
        set => _branchName.SetValue(value);
    }

    private PropertyValue<string> _commit = new PropertyValue<string>(nameof(M2TaskExecutionSucceedItemContent), nameof(Commit), "commit");
    
    [Required]
    [JsonPropertyName("commit")]
    public string Commit
    {
        get => _commit.GetValue(InlineErrors);
        set => _commit.SetValue(value);
    }

    private PropertyValue<string> _shortCommitMessage = new PropertyValue<string>(nameof(M2TaskExecutionSucceedItemContent), nameof(ShortCommitMessage), "shortCommitMessage");
    
    [Required]
    [JsonPropertyName("shortCommitMessage")]
    public string ShortCommitMessage
    {
        get => _shortCommitMessage.GetValue(InlineErrors);
        set => _shortCommitMessage.SetValue(value);
    }

    private PropertyValue<ProjectKey> _project = new PropertyValue<ProjectKey>(nameof(M2TaskExecutionSucceedItemContent), nameof(Project), "project");
    
    [Required]
    [JsonPropertyName("project")]
    public ProjectKey Project
    {
        get => _project.GetValue(InlineErrors);
        set => _project.SetValue(value);
    }

    private PropertyValue<long> _finishDateTime = new PropertyValue<long>(nameof(M2TaskExecutionSucceedItemContent), nameof(FinishDateTime), "finishDateTime");
    
    [Required]
    [JsonPropertyName("finishDateTime")]
    public long FinishDateTime
    {
        get => _finishDateTime.GetValue(InlineErrors);
        set => _finishDateTime.SetValue(value);
    }

    private PropertyValue<string> _triggerInfo = new PropertyValue<string>(nameof(M2TaskExecutionSucceedItemContent), nameof(TriggerInfo), "triggerInfo");
    
    [Required]
    [JsonPropertyName("triggerInfo")]
    public string TriggerInfo
    {
        get => _triggerInfo.GetValue(InlineErrors);
        set => _triggerInfo.SetValue(value);
    }

    private PropertyValue<string> _details = new PropertyValue<string>(nameof(M2TaskExecutionSucceedItemContent), nameof(Details), "details");
    
    [Required]
    [JsonPropertyName("details")]
    public string Details
    {
        get => _details.GetValue(InlineErrors);
        set => _details.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _taskExecutionId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _taskExecutionName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _repoName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _branchName.SetAccessPath(parentChainPath, validateHasBeenSet);
        _commit.SetAccessPath(parentChainPath, validateHasBeenSet);
        _shortCommitMessage.SetAccessPath(parentChainPath, validateHasBeenSet);
        _project.SetAccessPath(parentChainPath, validateHasBeenSet);
        _finishDateTime.SetAccessPath(parentChainPath, validateHasBeenSet);
        _triggerInfo.SetAccessPath(parentChainPath, validateHasBeenSet);
        _details.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

