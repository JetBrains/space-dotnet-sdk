// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class PackageRepositoryConnectionRemote
     : PackageRepositoryConnection, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public override string? ClassName => "PackageRepositoryConnection.Remote";
    
    public PackageRepositoryConnectionRemote() { }
    
    public PackageRepositoryConnectionRemote(string id, bool enableCaching, bool enablePublishing, string url, PackageRepositoryCredentials credentials, List<string>? packageNameFilters = null, string? secretId = null, string? secretValue = null, PackageRepositoryConnectionSettings? settings = null)
    {
        Id = id;
        IsEnableCaching = enableCaching;
        IsEnablePublishing = enablePublishing;
        PackageNameFilters = packageNameFilters;
        Url = url;
        Credentials = credentials;
        SecretId = secretId;
        SecretValue = secretValue;
        Settings = settings;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(PackageRepositoryConnectionRemote), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<bool> _enableCaching = new PropertyValue<bool>(nameof(PackageRepositoryConnectionRemote), nameof(IsEnableCaching), "enableCaching");
    
    [Required]
    [JsonPropertyName("enableCaching")]
    public bool IsEnableCaching
    {
        get => _enableCaching.GetValue(InlineErrors);
        set => _enableCaching.SetValue(value);
    }

    private PropertyValue<bool> _enablePublishing = new PropertyValue<bool>(nameof(PackageRepositoryConnectionRemote), nameof(IsEnablePublishing), "enablePublishing");
    
    [Required]
    [JsonPropertyName("enablePublishing")]
    public bool IsEnablePublishing
    {
        get => _enablePublishing.GetValue(InlineErrors);
        set => _enablePublishing.SetValue(value);
    }

    private PropertyValue<List<string>?> _packageNameFilters = new PropertyValue<List<string>?>(nameof(PackageRepositoryConnectionRemote), nameof(PackageNameFilters), "packageNameFilters");
    
    [JsonPropertyName("packageNameFilters")]
    public List<string>? PackageNameFilters
    {
        get => _packageNameFilters.GetValue(InlineErrors);
        set => _packageNameFilters.SetValue(value);
    }

    private PropertyValue<string> _url = new PropertyValue<string>(nameof(PackageRepositoryConnectionRemote), nameof(Url), "url");
    
    [Required]
    [JsonPropertyName("url")]
    public string Url
    {
        get => _url.GetValue(InlineErrors);
        set => _url.SetValue(value);
    }

    private PropertyValue<PackageRepositoryCredentials> _credentials = new PropertyValue<PackageRepositoryCredentials>(nameof(PackageRepositoryConnectionRemote), nameof(Credentials), "credentials");
    
    [Required]
    [JsonPropertyName("credentials")]
    public PackageRepositoryCredentials Credentials
    {
        get => _credentials.GetValue(InlineErrors);
        set => _credentials.SetValue(value);
    }

    private PropertyValue<string?> _secretId = new PropertyValue<string?>(nameof(PackageRepositoryConnectionRemote), nameof(SecretId), "secretId");
    
    [JsonPropertyName("secretId")]
    public string? SecretId
    {
        get => _secretId.GetValue(InlineErrors);
        set => _secretId.SetValue(value);
    }

    private PropertyValue<string?> _secretValue = new PropertyValue<string?>(nameof(PackageRepositoryConnectionRemote), nameof(SecretValue), "secretValue");
    
    [JsonPropertyName("secretValue")]
    public string? SecretValue
    {
        get => _secretValue.GetValue(InlineErrors);
        set => _secretValue.SetValue(value);
    }

    private PropertyValue<PackageRepositoryConnectionSettings?> _settings = new PropertyValue<PackageRepositoryConnectionSettings?>(nameof(PackageRepositoryConnectionRemote), nameof(Settings), "settings");
    
    [JsonPropertyName("settings")]
    public PackageRepositoryConnectionSettings? Settings
    {
        get => _settings.GetValue(InlineErrors);
        set => _settings.SetValue(value);
    }

    public override void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _enableCaching.SetAccessPath(parentChainPath, validateHasBeenSet);
        _enablePublishing.SetAccessPath(parentChainPath, validateHasBeenSet);
        _packageNameFilters.SetAccessPath(parentChainPath, validateHasBeenSet);
        _url.SetAccessPath(parentChainPath, validateHasBeenSet);
        _credentials.SetAccessPath(parentChainPath, validateHasBeenSet);
        _secretId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _secretValue.SetAccessPath(parentChainPath, validateHasBeenSet);
        _settings.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

