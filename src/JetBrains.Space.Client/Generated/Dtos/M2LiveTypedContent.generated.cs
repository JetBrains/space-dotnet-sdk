// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class M2LiveTypedContent
     : M2ItemContentDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "M2LiveTypedContent";
    
    public M2LiveTypedContent() { }
    
    public M2LiveTypedContent(string session, string message, string? completedText = null, string? failed = null, string? trace = null)
    {
        Session = session;
        Message = message;
        CompletedText = completedText;
        Failed = failed;
        Trace = trace;
    }
    
    private PropertyValue<string> _session = new PropertyValue<string>(nameof(M2LiveTypedContent), nameof(Session), "session");
    
    [Required]
    [JsonPropertyName("session")]
    public string Session
    {
        get => _session.GetValue(InlineErrors);
        set => _session.SetValue(value);
    }

    private PropertyValue<string> _message = new PropertyValue<string>(nameof(M2LiveTypedContent), nameof(Message), "message");
    
    [Required]
    [JsonPropertyName("message")]
    public string Message
    {
        get => _message.GetValue(InlineErrors);
        set => _message.SetValue(value);
    }

    private PropertyValue<string?> _completedText = new PropertyValue<string?>(nameof(M2LiveTypedContent), nameof(CompletedText), "completedText");
    
    [JsonPropertyName("completedText")]
    public string? CompletedText
    {
        get => _completedText.GetValue(InlineErrors);
        set => _completedText.SetValue(value);
    }

    private PropertyValue<string?> _failed = new PropertyValue<string?>(nameof(M2LiveTypedContent), nameof(Failed), "failed");
    
    [JsonPropertyName("failed")]
    public string? Failed
    {
        get => _failed.GetValue(InlineErrors);
        set => _failed.SetValue(value);
    }

    private PropertyValue<string?> _trace = new PropertyValue<string?>(nameof(M2LiveTypedContent), nameof(Trace), "trace");
    
    [JsonPropertyName("trace")]
    public string? Trace
    {
        get => _trace.GetValue(InlineErrors);
        set => _trace.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _session.SetAccessPath(parentChainPath, validateHasBeenSet);
        _message.SetAccessPath(parentChainPath, validateHasBeenSet);
        _completedText.SetAccessPath(parentChainPath, validateHasBeenSet);
        _failed.SetAccessPath(parentChainPath, validateHasBeenSet);
        _trace.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

