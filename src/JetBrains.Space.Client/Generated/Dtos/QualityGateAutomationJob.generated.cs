// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class QualityGateAutomationJob
     : IPropagatePropertyAccessPath
{
    public QualityGateAutomationJob() { }
    
    public QualityGateAutomationJob(string id, string name, bool actual, bool? passed = null)
    {
        Id = id;
        Name = name;
        IsActual = actual;
        IsPassed = passed;
    }
    
    private PropertyValue<string> _id = new PropertyValue<string>(nameof(QualityGateAutomationJob), nameof(Id), "id");
    
    [Required]
    [JsonPropertyName("id")]
    public string Id
    {
        get => _id.GetValue(InlineErrors);
        set => _id.SetValue(value);
    }

    private PropertyValue<string> _name = new PropertyValue<string>(nameof(QualityGateAutomationJob), nameof(Name), "name");
    
    [Required]
    [JsonPropertyName("name")]
    public string Name
    {
        get => _name.GetValue(InlineErrors);
        set => _name.SetValue(value);
    }

    private PropertyValue<bool> _actual = new PropertyValue<bool>(nameof(QualityGateAutomationJob), nameof(IsActual), "actual");
    
    [Required]
    [JsonPropertyName("actual")]
    public bool IsActual
    {
        get => _actual.GetValue(InlineErrors);
        set => _actual.SetValue(value);
    }

    private PropertyValue<bool?> _passed = new PropertyValue<bool?>(nameof(QualityGateAutomationJob), nameof(IsPassed), "passed");
    
    [JsonPropertyName("passed")]
    public bool? IsPassed
    {
        get => _passed.GetValue(InlineErrors);
        set => _passed.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _id.SetAccessPath(parentChainPath, validateHasBeenSet);
        _name.SetAccessPath(parentChainPath, validateHasBeenSet);
        _actual.SetAccessPath(parentChainPath, validateHasBeenSet);
        _passed.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

