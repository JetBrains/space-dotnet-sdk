// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class TierFeatureLimits
     : IPropagatePropertyAccessPath
{
    public TierFeatureLimits() { }
    
    public TierFeatureLimits(Tier tier, TierEntityUsage applications, int searchHistoryLimit, long? storageLimit = null, Tier? trueTier = null, bool? hasCardVerifiedAdmin = null, List<AvailableTrial>? availableTrials = null)
    {
        Tier = tier;
        StorageLimit = storageLimit;
        TrueTier = trueTier;
        IsHasCardVerifiedAdmin = hasCardVerifiedAdmin;
        Applications = applications;
        SearchHistoryLimit = searchHistoryLimit;
        AvailableTrials = availableTrials;
    }
    
    private PropertyValue<Tier> _tier = new PropertyValue<Tier>(nameof(TierFeatureLimits), nameof(Tier), "tier");
    
    [Required]
    [JsonPropertyName("tier")]
    public Tier Tier
    {
        get => _tier.GetValue(InlineErrors);
        set => _tier.SetValue(value);
    }

    private PropertyValue<long?> _storageLimit = new PropertyValue<long?>(nameof(TierFeatureLimits), nameof(StorageLimit), "storageLimit");
    
    [JsonPropertyName("storageLimit")]
    public long? StorageLimit
    {
        get => _storageLimit.GetValue(InlineErrors);
        set => _storageLimit.SetValue(value);
    }

    private PropertyValue<Tier?> _trueTier = new PropertyValue<Tier?>(nameof(TierFeatureLimits), nameof(TrueTier), "trueTier");
    
    [JsonPropertyName("trueTier")]
    public Tier? TrueTier
    {
        get => _trueTier.GetValue(InlineErrors);
        set => _trueTier.SetValue(value);
    }

    private PropertyValue<bool?> _hasCardVerifiedAdmin = new PropertyValue<bool?>(nameof(TierFeatureLimits), nameof(IsHasCardVerifiedAdmin), "hasCardVerifiedAdmin");
    
    [JsonPropertyName("hasCardVerifiedAdmin")]
    public bool? IsHasCardVerifiedAdmin
    {
        get => _hasCardVerifiedAdmin.GetValue(InlineErrors);
        set => _hasCardVerifiedAdmin.SetValue(value);
    }

    private PropertyValue<TierEntityUsage> _applications = new PropertyValue<TierEntityUsage>(nameof(TierFeatureLimits), nameof(Applications), "applications");
    
    [Required]
    [JsonPropertyName("applications")]
    public TierEntityUsage Applications
    {
        get => _applications.GetValue(InlineErrors);
        set => _applications.SetValue(value);
    }

    private PropertyValue<int> _searchHistoryLimit = new PropertyValue<int>(nameof(TierFeatureLimits), nameof(SearchHistoryLimit), "searchHistoryLimit");
    
    [Required]
    [JsonPropertyName("searchHistoryLimit")]
    public int SearchHistoryLimit
    {
        get => _searchHistoryLimit.GetValue(InlineErrors);
        set => _searchHistoryLimit.SetValue(value);
    }

    private PropertyValue<List<AvailableTrial>?> _availableTrials = new PropertyValue<List<AvailableTrial>?>(nameof(TierFeatureLimits), nameof(AvailableTrials), "availableTrials");
    
    [JsonPropertyName("availableTrials")]
    public List<AvailableTrial>? AvailableTrials
    {
        get => _availableTrials.GetValue(InlineErrors);
        set => _availableTrials.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _tier.SetAccessPath(parentChainPath, validateHasBeenSet);
        _storageLimit.SetAccessPath(parentChainPath, validateHasBeenSet);
        _trueTier.SetAccessPath(parentChainPath, validateHasBeenSet);
        _hasCardVerifiedAdmin.SetAccessPath(parentChainPath, validateHasBeenSet);
        _applications.SetAccessPath(parentChainPath, validateHasBeenSet);
        _searchHistoryLimit.SetAccessPath(parentChainPath, validateHasBeenSet);
        _availableTrials.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

