// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class GitUpdatedHead
     : IPropagatePropertyAccessPath
{
    public GitUpdatedHead() { }
    
    public GitUpdatedHead(string head, bool force, string? oldId = null, string? newId = null)
    {
        Head = head;
        OldId = oldId;
        NewId = newId;
        IsForce = force;
    }
    
    private PropertyValue<string> _head = new PropertyValue<string>(nameof(GitUpdatedHead), nameof(Head), "head");
    
    [Required]
    [JsonPropertyName("head")]
    public string Head
    {
        get => _head.GetValue(InlineErrors);
        set => _head.SetValue(value);
    }

    private PropertyValue<string?> _oldId = new PropertyValue<string?>(nameof(GitUpdatedHead), nameof(OldId), "oldId");
    
    [JsonPropertyName("oldId")]
    public string? OldId
    {
        get => _oldId.GetValue(InlineErrors);
        set => _oldId.SetValue(value);
    }

    private PropertyValue<string?> _newId = new PropertyValue<string?>(nameof(GitUpdatedHead), nameof(NewId), "newId");
    
    [JsonPropertyName("newId")]
    public string? NewId
    {
        get => _newId.GetValue(InlineErrors);
        set => _newId.SetValue(value);
    }

    private PropertyValue<bool> _force = new PropertyValue<bool>(nameof(GitUpdatedHead), nameof(IsForce), "force");
    
    [Required]
    [JsonPropertyName("force")]
    public bool IsForce
    {
        get => _force.GetValue(InlineErrors);
        set => _force.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _head.SetAccessPath(parentChainPath, validateHasBeenSet);
        _oldId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _newId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _force.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

