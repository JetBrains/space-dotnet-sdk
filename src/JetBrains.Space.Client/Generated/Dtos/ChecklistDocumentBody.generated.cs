// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class ChecklistDocumentBody
     : DocumentBodyInfo, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "ChecklistDocumentBody";
    
    public ChecklistDocumentBody() { }
    
    public ChecklistDocumentBody(bool canConvertItemsToIssues, Checklist? checklist = null, string? checklistId = null, int? totalItemsCount = null, int? doneItemsCount = null, string? checklistArenaId = null)
    {
        Checklist = checklist;
        CanConvertItemsToIssues = canConvertItemsToIssues;
        ChecklistId = checklistId;
        TotalItemsCount = totalItemsCount;
        DoneItemsCount = doneItemsCount;
        ChecklistArenaId = checklistArenaId;
    }
    
    private PropertyValue<Checklist?> _checklist = new PropertyValue<Checklist?>(nameof(ChecklistDocumentBody), nameof(Checklist), "checklist");
    
    [JsonPropertyName("checklist")]
    public Checklist? Checklist
    {
        get => _checklist.GetValue(InlineErrors);
        set => _checklist.SetValue(value);
    }

    private PropertyValue<bool> _canConvertItemsToIssues = new PropertyValue<bool>(nameof(ChecklistDocumentBody), nameof(CanConvertItemsToIssues), "canConvertItemsToIssues");
    
    [Required]
    [JsonPropertyName("canConvertItemsToIssues")]
    public bool CanConvertItemsToIssues
    {
        get => _canConvertItemsToIssues.GetValue(InlineErrors);
        set => _canConvertItemsToIssues.SetValue(value);
    }

    private PropertyValue<string?> _checklistId = new PropertyValue<string?>(nameof(ChecklistDocumentBody), nameof(ChecklistId), "checklistId");
    
    [JsonPropertyName("checklistId")]
    public string? ChecklistId
    {
        get => _checklistId.GetValue(InlineErrors);
        set => _checklistId.SetValue(value);
    }

    private PropertyValue<int?> _totalItemsCount = new PropertyValue<int?>(nameof(ChecklistDocumentBody), nameof(TotalItemsCount), "totalItemsCount");
    
    [JsonPropertyName("totalItemsCount")]
    public int? TotalItemsCount
    {
        get => _totalItemsCount.GetValue(InlineErrors);
        set => _totalItemsCount.SetValue(value);
    }

    private PropertyValue<int?> _doneItemsCount = new PropertyValue<int?>(nameof(ChecklistDocumentBody), nameof(DoneItemsCount), "doneItemsCount");
    
    [JsonPropertyName("doneItemsCount")]
    public int? DoneItemsCount
    {
        get => _doneItemsCount.GetValue(InlineErrors);
        set => _doneItemsCount.SetValue(value);
    }

    private PropertyValue<string?> _checklistArenaId = new PropertyValue<string?>(nameof(ChecklistDocumentBody), nameof(ChecklistArenaId), "checklistArenaId");
    
    [JsonPropertyName("checklistArenaId")]
    public string? ChecklistArenaId
    {
        get => _checklistArenaId.GetValue(InlineErrors);
        set => _checklistArenaId.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _checklist.SetAccessPath(parentChainPath, validateHasBeenSet);
        _canConvertItemsToIssues.SetAccessPath(parentChainPath, validateHasBeenSet);
        _checklistId.SetAccessPath(parentChainPath, validateHasBeenSet);
        _totalItemsCount.SetAccessPath(parentChainPath, validateHasBeenSet);
        _doneItemsCount.SetAccessPath(parentChainPath, validateHasBeenSet);
        _checklistArenaId.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

