// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public interface ExternalIssueEvent
     : IClassNameConvertible, IPropagatePropertyAccessPath
{
    public static CodeReviewLinkedExternalIssuesChanged CodeReviewLinkedExternalIssuesChanged(CodeReviewRecord review, List<ExternalIssueIdOut> issues)
        => new CodeReviewLinkedExternalIssuesChanged(review: review, issues: issues);
    
    public static CommitLinkedExternalIssuesChanged CommitLinkedExternalIssuesChanged(PRProject project, string repositoryId, string commitId, List<ExternalIssueIdOut> issues, string? repositoryName = null, GitCommitInfo? commit = null, GitCommitChanges? changes = null, string? url = null)
        => new CommitLinkedExternalIssuesChanged(project: project, repositoryId: repositoryId, commitId: commitId, issues: issues, repositoryName: repositoryName, commit: commit, changes: changes, url: url);
    
    public static ExternalIssueLinkedCodeReviewsChanged ExternalIssueLinkedCodeReviewsChanged(string issuePrefix, string issueId, List<CodeReviewRecord> reviews)
        => new ExternalIssueLinkedCodeReviewsChanged(issuePrefix: issuePrefix, issueId: issueId, reviews: reviews);
    
    public static ExternalIssueLinkedCommitsChanged ExternalIssueLinkedCommitsChanged(string issuePrefix, string issueId, List<ExternalIssueLinkedCommitsForRepo> repositories)
        => new ExternalIssueLinkedCommitsChanged(issuePrefix: issuePrefix, issueId: issueId, repositories: repositories);
    
    public static IssueCodeReviewLinkRemoved IssueCodeReviewLinkRemoved(CodeReviewRecord review, string issuePrefix, string issueId)
        => new IssueCodeReviewLinkRemoved(review: review, issuePrefix: issuePrefix, issueId: issueId);
    
    public static IssueCommitLinkRemoved IssueCommitLinkRemoved(PRProject project, string repositoryId, string commitId, string issuePrefix, string issueId)
        => new IssueCommitLinkRemoved(project: project, repositoryId: repositoryId, commitId: commitId, issuePrefix: issuePrefix, issueId: issueId);
    
    public static IssueLinkedToCodeReview IssueLinkedToCodeReview(CodeReviewRecord review, string issuePrefix, string issueId)
        => new IssueLinkedToCodeReview(review: review, issuePrefix: issuePrefix, issueId: issueId);
    
    public static IssueLinkedToCommit IssueLinkedToCommit(PRProject project, string repositoryId, string repositoryName, GitCommitInfo commit, string commitUrl, string issuePrefix, string issueId, GitCommitChanges? commitChanges = null)
        => new IssueLinkedToCommit(project: project, repositoryId: repositoryId, repositoryName: repositoryName, commit: commit, commitUrl: commitUrl, issuePrefix: issuePrefix, issueId: issueId, commitChanges: commitChanges);
    
    public static ProvideExternalIssueData ProvideExternalIssueData(string issuePrefix, string issueId)
        => new ProvideExternalIssueData(issuePrefix: issuePrefix, issueId: issueId);
    
    public static UpdateIssueStatusOnMergeRequestMerge UpdateIssueStatusOnMergeRequestMerge(MergeRequestRecord review, string issuePrefix, string issueId, string? newStatus = null)
        => new UpdateIssueStatusOnMergeRequestMerge(review: review, issuePrefix: issuePrefix, issueId: issueId, newStatus: newStatus);
    
}

