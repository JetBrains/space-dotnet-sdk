// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class HAModel
     : IPropagatePropertyAccessPath
{
    public HAModel() { }
    
    public HAModel(List<HADto> dto, List<HAEnum> enums, List<HAIdentifier> urlParams, List<HAResource> resources, List<HAResource> allResources, List<HAMenuId> menuIds, List<HAFeatureFlag>? featureFlags = null)
    {
        Dto = dto;
        Enums = enums;
        UrlParams = urlParams;
        Resources = resources;
        AllResources = allResources;
        MenuIds = menuIds;
        FeatureFlags = featureFlags;
    }
    
    private PropertyValue<List<HADto>> _dto = new PropertyValue<List<HADto>>(nameof(HAModel), nameof(Dto), "dto", new List<HADto>());
    
    [Required]
    [JsonPropertyName("dto")]
    public List<HADto> Dto
    {
        get => _dto.GetValue(InlineErrors);
        set => _dto.SetValue(value);
    }

    private PropertyValue<List<HAEnum>> _enums = new PropertyValue<List<HAEnum>>(nameof(HAModel), nameof(Enums), "enums", new List<HAEnum>());
    
    [Required]
    [JsonPropertyName("enums")]
    public List<HAEnum> Enums
    {
        get => _enums.GetValue(InlineErrors);
        set => _enums.SetValue(value);
    }

    private PropertyValue<List<HAIdentifier>> _urlParams = new PropertyValue<List<HAIdentifier>>(nameof(HAModel), nameof(UrlParams), "urlParams", new List<HAIdentifier>());
    
    [Required]
    [JsonPropertyName("urlParams")]
    public List<HAIdentifier> UrlParams
    {
        get => _urlParams.GetValue(InlineErrors);
        set => _urlParams.SetValue(value);
    }

    private PropertyValue<List<HAResource>> _resources = new PropertyValue<List<HAResource>>(nameof(HAModel), nameof(Resources), "resources", new List<HAResource>());
    
    [Required]
    [JsonPropertyName("resources")]
    public List<HAResource> Resources
    {
        get => _resources.GetValue(InlineErrors);
        set => _resources.SetValue(value);
    }

    private PropertyValue<List<HAResource>> _allResources = new PropertyValue<List<HAResource>>(nameof(HAModel), nameof(AllResources), "allResources", new List<HAResource>());
    
    [Required]
    [JsonPropertyName("allResources")]
    public List<HAResource> AllResources
    {
        get => _allResources.GetValue(InlineErrors);
        set => _allResources.SetValue(value);
    }

    private PropertyValue<List<HAMenuId>> _menuIds = new PropertyValue<List<HAMenuId>>(nameof(HAModel), nameof(MenuIds), "menuIds", new List<HAMenuId>());
    
    [Required]
    [JsonPropertyName("menuIds")]
    public List<HAMenuId> MenuIds
    {
        get => _menuIds.GetValue(InlineErrors);
        set => _menuIds.SetValue(value);
    }

    private PropertyValue<List<HAFeatureFlag>?> _featureFlags = new PropertyValue<List<HAFeatureFlag>?>(nameof(HAModel), nameof(FeatureFlags), "featureFlags");
    
    [JsonPropertyName("featureFlags")]
    public List<HAFeatureFlag>? FeatureFlags
    {
        get => _featureFlags.GetValue(InlineErrors);
        set => _featureFlags.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _dto.SetAccessPath(parentChainPath, validateHasBeenSet);
        _enums.SetAccessPath(parentChainPath, validateHasBeenSet);
        _urlParams.SetAccessPath(parentChainPath, validateHasBeenSet);
        _resources.SetAccessPath(parentChainPath, validateHasBeenSet);
        _allResources.SetAccessPath(parentChainPath, validateHasBeenSet);
        _menuIds.SetAccessPath(parentChainPath, validateHasBeenSet);
        _featureFlags.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

