// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class HAUrlParameterOptionVar
         : HAUrlParameterOption, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        [JsonPropertyName("className")]
        public override string? ClassName => "HA_UrlParameterOption.Var";
        
        public HAUrlParameterOptionVar() { }
        
        public HAUrlParameterOptionVar(HAField parameter, List<HAField> parameters, bool prefixRequired, string optionName, HADeprecation? deprecation = null)
        {
            Parameter = parameter;
            Parameters = parameters;
            IsPrefixRequired = prefixRequired;
            OptionName = optionName;
            Deprecation = deprecation;
        }
        
        private PropertyValue<HAField> _parameter = new PropertyValue<HAField>(nameof(HAUrlParameterOptionVar), nameof(Parameter));
        
        [Required]
        [Obsolete("Use 'parameters' (since 2021-08-17)")]
        [JsonPropertyName("parameter")]
        public HAField Parameter
        {
            get => _parameter.GetValue();
            set => _parameter.SetValue(value);
        }
    
        private PropertyValue<List<HAField>> _parameters = new PropertyValue<List<HAField>>(nameof(HAUrlParameterOptionVar), nameof(Parameters), new List<HAField>());
        
        [Required]
        [JsonPropertyName("parameters")]
        public List<HAField> Parameters
        {
            get => _parameters.GetValue();
            set => _parameters.SetValue(value);
        }
    
        private PropertyValue<bool> _prefixRequired = new PropertyValue<bool>(nameof(HAUrlParameterOptionVar), nameof(IsPrefixRequired));
        
        [Required]
        [JsonPropertyName("prefixRequired")]
        public bool IsPrefixRequired
        {
            get => _prefixRequired.GetValue();
            set => _prefixRequired.SetValue(value);
        }
    
        private PropertyValue<string> _optionName = new PropertyValue<string>(nameof(HAUrlParameterOptionVar), nameof(OptionName));
        
        [Required]
        [JsonPropertyName("optionName")]
        public string OptionName
        {
            get => _optionName.GetValue();
            set => _optionName.SetValue(value);
        }
    
        private PropertyValue<HADeprecation?> _deprecation = new PropertyValue<HADeprecation?>(nameof(HAUrlParameterOptionVar), nameof(Deprecation));
        
        [JsonPropertyName("deprecation")]
        public HADeprecation? Deprecation
        {
            get => _deprecation.GetValue();
            set => _deprecation.SetValue(value);
        }
    
        public override void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _parameter.SetAccessPath(path, validateHasBeenSet);
            _parameters.SetAccessPath(path, validateHasBeenSet);
            _prefixRequired.SetAccessPath(path, validateHasBeenSet);
            _optionName.SetAccessPath(path, validateHasBeenSet);
            _deprecation.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
