// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class BlogWebhookEvent
     : WebhookEvent, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "BlogWebhookEvent";
    
    public BlogWebhookEvent() { }
    
    public BlogWebhookEvent(KMetaMod meta, ArticleRecord article, bool textChanged, string? action = null, Modification<TDMemberProfile>? author = null, Modification<DateTime>? created = null, Modification<string>? title = null, Modification<bool>? unpublished = null, Modification<List<TDTeam>>? teams = null, Modification<List<TDLocation>>? locations = null, Modification<long>? externalEntityInfo = null)
    {
        Meta = meta;
        Article = article;
        Action = action;
        Author = author;
        Created = created;
        Title = title;
        IsTextChanged = textChanged;
        Unpublished = unpublished;
        Teams = teams;
        Locations = locations;
        ExternalEntityInfo = externalEntityInfo;
    }
    
    private PropertyValue<KMetaMod> _meta = new PropertyValue<KMetaMod>(nameof(BlogWebhookEvent), nameof(Meta), "meta");
    
    [Required]
    [JsonPropertyName("meta")]
    public KMetaMod Meta
    {
        get => _meta.GetValue(InlineErrors);
        set => _meta.SetValue(value);
    }

    private PropertyValue<ArticleRecord> _article = new PropertyValue<ArticleRecord>(nameof(BlogWebhookEvent), nameof(Article), "article");
    
    [Required]
    [JsonPropertyName("article")]
    public ArticleRecord Article
    {
        get => _article.GetValue(InlineErrors);
        set => _article.SetValue(value);
    }

    private PropertyValue<string?> _action = new PropertyValue<string?>(nameof(BlogWebhookEvent), nameof(Action), "action");
    
    [JsonPropertyName("action")]
    public string? Action
    {
        get => _action.GetValue(InlineErrors);
        set => _action.SetValue(value);
    }

    private PropertyValue<Modification<TDMemberProfile>?> _author = new PropertyValue<Modification<TDMemberProfile>?>(nameof(BlogWebhookEvent), nameof(Author), "author");
    
    [JsonPropertyName("author")]
    public Modification<TDMemberProfile>? Author
    {
        get => _author.GetValue(InlineErrors);
        set => _author.SetValue(value);
    }

    private PropertyValue<Modification<DateTime>?> _created = new PropertyValue<Modification<DateTime>?>(nameof(BlogWebhookEvent), nameof(Created), "created");
    
    [JsonPropertyName("created")]
    public Modification<DateTime>? Created
    {
        get => _created.GetValue(InlineErrors);
        set => _created.SetValue(value);
    }

    private PropertyValue<Modification<string>?> _title = new PropertyValue<Modification<string>?>(nameof(BlogWebhookEvent), nameof(Title), "title");
    
    [JsonPropertyName("title")]
    public Modification<string>? Title
    {
        get => _title.GetValue(InlineErrors);
        set => _title.SetValue(value);
    }

    private PropertyValue<bool> _textChanged = new PropertyValue<bool>(nameof(BlogWebhookEvent), nameof(IsTextChanged), "textChanged");
    
    [Required]
    [JsonPropertyName("textChanged")]
    public bool IsTextChanged
    {
        get => _textChanged.GetValue(InlineErrors);
        set => _textChanged.SetValue(value);
    }

    private PropertyValue<Modification<bool>?> _unpublished = new PropertyValue<Modification<bool>?>(nameof(BlogWebhookEvent), nameof(Unpublished), "unpublished");
    
    [JsonPropertyName("unpublished")]
    public Modification<bool>? Unpublished
    {
        get => _unpublished.GetValue(InlineErrors);
        set => _unpublished.SetValue(value);
    }

    private PropertyValue<Modification<List<TDTeam>>?> _teams = new PropertyValue<Modification<List<TDTeam>>?>(nameof(BlogWebhookEvent), nameof(Teams), "teams");
    
    [JsonPropertyName("teams")]
    public Modification<List<TDTeam>>? Teams
    {
        get => _teams.GetValue(InlineErrors);
        set => _teams.SetValue(value);
    }

    private PropertyValue<Modification<List<TDLocation>>?> _locations = new PropertyValue<Modification<List<TDLocation>>?>(nameof(BlogWebhookEvent), nameof(Locations), "locations");
    
    [JsonPropertyName("locations")]
    public Modification<List<TDLocation>>? Locations
    {
        get => _locations.GetValue(InlineErrors);
        set => _locations.SetValue(value);
    }

    private PropertyValue<Modification<long>?> _externalEntityInfo = new PropertyValue<Modification<long>?>(nameof(BlogWebhookEvent), nameof(ExternalEntityInfo), "externalEntityInfo");
    
    [JsonPropertyName("externalEntityInfo")]
    public Modification<long>? ExternalEntityInfo
    {
        get => _externalEntityInfo.GetValue(InlineErrors);
        set => _externalEntityInfo.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _meta.SetAccessPath(parentChainPath, validateHasBeenSet);
        _article.SetAccessPath(parentChainPath, validateHasBeenSet);
        _action.SetAccessPath(parentChainPath, validateHasBeenSet);
        _author.SetAccessPath(parentChainPath, validateHasBeenSet);
        _created.SetAccessPath(parentChainPath, validateHasBeenSet);
        _title.SetAccessPath(parentChainPath, validateHasBeenSet);
        _textChanged.SetAccessPath(parentChainPath, validateHasBeenSet);
        _unpublished.SetAccessPath(parentChainPath, validateHasBeenSet);
        _teams.SetAccessPath(parentChainPath, validateHasBeenSet);
        _locations.SetAccessPath(parentChainPath, validateHasBeenSet);
        _externalEntityInfo.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

