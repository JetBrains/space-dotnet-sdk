// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

internal class AbsencesPostRequest
     : IPropagatePropertyAccessPath
{
    public AbsencesPostRequest() { }
    
    public AbsencesPostRequest(string member, string reason, string description, DateTime since, DateTime till, string icon, bool available = false, string? location = null, List<CustomFieldInputValue>? customFieldValues = null)
    {
        Member = member;
        Reason = reason;
        Description = description;
        Location = location;
        Since = since;
        Till = till;
        IsAvailable = available;
        Icon = icon;
        CustomFieldValues = customFieldValues;
    }
    
    private PropertyValue<string> _member = new PropertyValue<string>(nameof(AbsencesPostRequest), nameof(Member), "member");
    
    [Required]
    [JsonPropertyName("member")]
    public string Member
    {
        get => _member.GetValue(InlineErrors);
        set => _member.SetValue(value);
    }

    private PropertyValue<string> _reason = new PropertyValue<string>(nameof(AbsencesPostRequest), nameof(Reason), "reason");
    
    [Required]
    [JsonPropertyName("reason")]
    public string Reason
    {
        get => _reason.GetValue(InlineErrors);
        set => _reason.SetValue(value);
    }

    private PropertyValue<string> _description = new PropertyValue<string>(nameof(AbsencesPostRequest), nameof(Description), "description");
    
    [Required]
    [JsonPropertyName("description")]
    public string Description
    {
        get => _description.GetValue(InlineErrors);
        set => _description.SetValue(value);
    }

    private PropertyValue<string?> _location = new PropertyValue<string?>(nameof(AbsencesPostRequest), nameof(Location), "location");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("location")]
    public string? Location
    {
        get => _location.GetValue(InlineErrors);
        set => _location.SetValue(value);
    }

    private PropertyValue<DateTime> _since = new PropertyValue<DateTime>(nameof(AbsencesPostRequest), nameof(Since), "since");
    
    [Required]
    [JsonPropertyName("since")]
    [JsonConverter(typeof(SpaceDateConverter))]
    public DateTime Since
    {
        get => _since.GetValue(InlineErrors);
        set => _since.SetValue(value);
    }

    private PropertyValue<DateTime> _till = new PropertyValue<DateTime>(nameof(AbsencesPostRequest), nameof(Till), "till");
    
    [Required]
    [JsonPropertyName("till")]
    [JsonConverter(typeof(SpaceDateConverter))]
    public DateTime Till
    {
        get => _till.GetValue(InlineErrors);
        set => _till.SetValue(value);
    }

    private PropertyValue<bool> _available = new PropertyValue<bool>(nameof(AbsencesPostRequest), nameof(IsAvailable), "available");
    
    [JsonPropertyName("available")]
    public bool IsAvailable
    {
        get => _available.GetValue(InlineErrors);
        set => _available.SetValue(value);
    }

    private PropertyValue<string> _icon = new PropertyValue<string>(nameof(AbsencesPostRequest), nameof(Icon), "icon");
    
    [Required]
    [JsonPropertyName("icon")]
    public string Icon
    {
        get => _icon.GetValue(InlineErrors);
        set => _icon.SetValue(value);
    }

    private PropertyValue<List<CustomFieldInputValue>?> _customFieldValues = new PropertyValue<List<CustomFieldInputValue>?>(nameof(AbsencesPostRequest), nameof(CustomFieldValues), "customFieldValues");
    
#if NET6_0_OR_GREATER
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
#endif
    [JsonPropertyName("customFieldValues")]
    public List<CustomFieldInputValue>? CustomFieldValues
    {
        get => _customFieldValues.GetValue(InlineErrors);
        set => _customFieldValues.SetValue(value);
    }

    public virtual void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _member.SetAccessPath(parentChainPath, validateHasBeenSet);
        _reason.SetAccessPath(parentChainPath, validateHasBeenSet);
        _description.SetAccessPath(parentChainPath, validateHasBeenSet);
        _location.SetAccessPath(parentChainPath, validateHasBeenSet);
        _since.SetAccessPath(parentChainPath, validateHasBeenSet);
        _till.SetAccessPath(parentChainPath, validateHasBeenSet);
        _available.SetAccessPath(parentChainPath, validateHasBeenSet);
        _icon.SetAccessPath(parentChainPath, validateHasBeenSet);
        _customFieldValues.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

