// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public sealed class UnfurlDetailsCodeReview
         : UnfurlDetails, IClassNameConvertible, IPropagatePropertyAccessPath
    {
        [JsonPropertyName("className")]
        public  string? ClassName => "UnfurlDetailsCodeReview";
        
        public UnfurlDetailsCodeReview() { }
        
        public UnfurlDetailsCodeReview(CodeReviewRecord review, bool? withBranchPair = null, string? defaultBranchInRepo = null, CodeReviewState? reviewState = null, bool? isMerged = null)
        {
            Review = review;
            IsWithBranchPair = withBranchPair;
            DefaultBranchInRepo = defaultBranchInRepo;
            ReviewState = reviewState;
            IsMerged = isMerged;
        }
        
        private PropertyValue<CodeReviewRecord> _review = new PropertyValue<CodeReviewRecord>(nameof(UnfurlDetailsCodeReview), nameof(Review));
        
        [Required]
        [JsonPropertyName("review")]
        public CodeReviewRecord Review
        {
            get => _review.GetValue();
            set => _review.SetValue(value);
        }
    
        private PropertyValue<bool?> _withBranchPair = new PropertyValue<bool?>(nameof(UnfurlDetailsCodeReview), nameof(IsWithBranchPair));
        
        [JsonPropertyName("withBranchPair")]
        public bool? IsWithBranchPair
        {
            get => _withBranchPair.GetValue();
            set => _withBranchPair.SetValue(value);
        }
    
        private PropertyValue<string?> _defaultBranchInRepo = new PropertyValue<string?>(nameof(UnfurlDetailsCodeReview), nameof(DefaultBranchInRepo));
        
        [JsonPropertyName("defaultBranchInRepo")]
        public string? DefaultBranchInRepo
        {
            get => _defaultBranchInRepo.GetValue();
            set => _defaultBranchInRepo.SetValue(value);
        }
    
        private PropertyValue<CodeReviewState?> _reviewState = new PropertyValue<CodeReviewState?>(nameof(UnfurlDetailsCodeReview), nameof(ReviewState));
        
        [JsonPropertyName("reviewState")]
        public CodeReviewState? ReviewState
        {
            get => _reviewState.GetValue();
            set => _reviewState.SetValue(value);
        }
    
        private PropertyValue<bool?> _isMerged = new PropertyValue<bool?>(nameof(UnfurlDetailsCodeReview), nameof(IsMerged));
        
        [JsonPropertyName("isMerged")]
        public bool? IsMerged
        {
            get => _isMerged.GetValue();
            set => _isMerged.SetValue(value);
        }
    
        public  void SetAccessPath(string path, bool validateHasBeenSet)
        {
            _review.SetAccessPath(path, validateHasBeenSet);
            _withBranchPair.SetAccessPath(path, validateHasBeenSet);
            _defaultBranchInRepo.SetAccessPath(path, validateHasBeenSet);
            _reviewState.SetAccessPath(path, validateHasBeenSet);
            _isMerged.SetAccessPath(path, validateHasBeenSet);
        }
    
    }
    
}
