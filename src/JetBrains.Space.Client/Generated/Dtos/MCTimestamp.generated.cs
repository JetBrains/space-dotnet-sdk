// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class MCTimestamp
     : MCInlineElementDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "MCTimestamp";
    
    public MCTimestamp() { }
    
    public MCTimestamp(long ts, bool strikethrough, MessageStyle? style = null, MessageTimestampFormat? format = null)
    {
        Ts = ts;
        Style = style;
        Format = format;
        IsStrikethrough = strikethrough;
    }
    
    private PropertyValue<long> _ts = new PropertyValue<long>(nameof(MCTimestamp), nameof(Ts), "ts");
    
    [Required]
    [JsonPropertyName("ts")]
    public long Ts
    {
        get => _ts.GetValue(InlineErrors);
        set => _ts.SetValue(value);
    }

    private PropertyValue<MessageStyle?> _style = new PropertyValue<MessageStyle?>(nameof(MCTimestamp), nameof(Style), "style");
    
    [JsonPropertyName("style")]
    public MessageStyle? Style
    {
        get => _style.GetValue(InlineErrors);
        set => _style.SetValue(value);
    }

    private PropertyValue<MessageTimestampFormat?> _format = new PropertyValue<MessageTimestampFormat?>(nameof(MCTimestamp), nameof(Format), "format");
    
    [JsonPropertyName("format")]
    public MessageTimestampFormat? Format
    {
        get => _format.GetValue(InlineErrors);
        set => _format.SetValue(value);
    }

    private PropertyValue<bool> _strikethrough = new PropertyValue<bool>(nameof(MCTimestamp), nameof(IsStrikethrough), "strikethrough");
    
    [Required]
    [JsonPropertyName("strikethrough")]
    public bool IsStrikethrough
    {
        get => _strikethrough.GetValue(InlineErrors);
        set => _strikethrough.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _ts.SetAccessPath(parentChainPath, validateHasBeenSet);
        _style.SetAccessPath(parentChainPath, validateHasBeenSet);
        _format.SetAccessPath(parentChainPath, validateHasBeenSet);
        _strikethrough.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

