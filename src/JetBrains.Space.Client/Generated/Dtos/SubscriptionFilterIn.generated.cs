// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client
{
    public interface SubscriptionFilterIn
         : IClassNameConvertible, IPropagatePropertyAccessPath
    {
        public static AbsenceCommonSubscriptionFilterIn AbsenceCommon(List<string> reasons)
            => new AbsenceCommonSubscriptionFilterIn(reasons: reasons);
        
        public static ApplicationsSubscriptionFilterIn Applications(string? application = null)
            => new ApplicationsSubscriptionFilterIn(application: application);
        
        public static AutomationJobSubscriptionFilterIn AutomationJob(List<string>? projects = null, string? repositoryName = null, List<string>? branchSpec = null, List<string>? jobs = null)
            => new AutomationJobSubscriptionFilterIn(projects: projects, repositoryName: repositoryName, branchSpec: branchSpec, jobs: jobs);
        
        public static BlogCommonSubscriptionFilterIn BlogCommon(List<string> teams, List<string> locations, List<string> authors)
            => new BlogCommonSubscriptionFilterIn(teams: teams, locations: locations, authors: authors);
        
        public static CodeReviewSubscriptionFilterIn CodeReview(List<string> authors, List<string> participants, List<string> branchSpec, List<string> pathSpec, string titleRegex, string? project = null, string? repository = null)
            => new CodeReviewSubscriptionFilterIn(authors: authors, participants: participants, branchSpec: branchSpec, pathSpec: pathSpec, titleRegex: titleRegex, project: project, repository: repository);
        
        public static DocumentCustomSubscriptionFilterIn DocumentCustom(List<string> documents, string? project = null, List<string>? books = null, List<string>? folders = null)
            => new DocumentCustomSubscriptionFilterIn(documents: documents, project: project, books: books, folders: folders);
        
        public static MemberCommonSubscriptionFilterIn MemberCommon(List<string> teams, List<string> locations)
            => new MemberCommonSubscriptionFilterIn(teams: teams, locations: locations);
        
        public static ProjectCommonSubscriptionFilterIn ProjectCommon(string? project = null)
            => new ProjectCommonSubscriptionFilterIn(project: project);
        
        public static RepoCommitsSubscriptionFilterIn RepoCommits(List<string> projects, string repository, RepoCommitsSubscriptionFilterSpec spec)
            => new RepoCommitsSubscriptionFilterIn(projects: projects, repository: repository, spec: spec);
        
        public static RepoHeadsSubscriptionFilterIn RepoHeads(List<string> projects, string repository)
            => new RepoHeadsSubscriptionFilterIn(projects: projects, repository: repository);
        
    }
    
}
