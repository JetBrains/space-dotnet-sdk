// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS0108
#pragma warning disable 618

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using JetBrains.Space.Common;
using JetBrains.Space.Common.Json.Serialization;
using JetBrains.Space.Common.Json.Serialization.Polymorphism;
using JetBrains.Space.Common.Types;

namespace JetBrains.Space.Client;

public sealed class SafeMergeLiveStatusDTO
     : M2ItemContentDetails, IClassNameConvertible, IPropagatePropertyAccessPath
{
    [JsonPropertyName("className")]
    public  string? ClassName => "SafeMergeLiveStatusDTO";
    
    public SafeMergeLiveStatusDTO() { }
    
    public SafeMergeLiveStatusDTO(bool dryRun, SafeMergeState? state = null, int? attempt = null, int? totalAttempts = null, bool? canRetry = null)
    {
        IsDryRun = dryRun;
        State = state;
        Attempt = attempt;
        TotalAttempts = totalAttempts;
        CanRetry = canRetry;
    }
    
    private PropertyValue<bool> _dryRun = new PropertyValue<bool>(nameof(SafeMergeLiveStatusDTO), nameof(IsDryRun), "dryRun");
    
    [Required]
    [JsonPropertyName("dryRun")]
    public bool IsDryRun
    {
        get => _dryRun.GetValue(InlineErrors);
        set => _dryRun.SetValue(value);
    }

    private PropertyValue<SafeMergeState?> _state = new PropertyValue<SafeMergeState?>(nameof(SafeMergeLiveStatusDTO), nameof(State), "state");
    
    [JsonPropertyName("state")]
    public SafeMergeState? State
    {
        get => _state.GetValue(InlineErrors);
        set => _state.SetValue(value);
    }

    private PropertyValue<int?> _attempt = new PropertyValue<int?>(nameof(SafeMergeLiveStatusDTO), nameof(Attempt), "attempt");
    
    [JsonPropertyName("attempt")]
    public int? Attempt
    {
        get => _attempt.GetValue(InlineErrors);
        set => _attempt.SetValue(value);
    }

    private PropertyValue<int?> _totalAttempts = new PropertyValue<int?>(nameof(SafeMergeLiveStatusDTO), nameof(TotalAttempts), "totalAttempts");
    
    [JsonPropertyName("totalAttempts")]
    public int? TotalAttempts
    {
        get => _totalAttempts.GetValue(InlineErrors);
        set => _totalAttempts.SetValue(value);
    }

    private PropertyValue<bool?> _canRetry = new PropertyValue<bool?>(nameof(SafeMergeLiveStatusDTO), nameof(CanRetry), "canRetry");
    
    [JsonPropertyName("canRetry")]
    public bool? CanRetry
    {
        get => _canRetry.GetValue(InlineErrors);
        set => _canRetry.SetValue(value);
    }

    public  void SetAccessPath(string parentChainPath, bool validateHasBeenSet)
    {
        _dryRun.SetAccessPath(parentChainPath, validateHasBeenSet);
        _state.SetAccessPath(parentChainPath, validateHasBeenSet);
        _attempt.SetAccessPath(parentChainPath, validateHasBeenSet);
        _totalAttempts.SetAccessPath(parentChainPath, validateHasBeenSet);
        _canRetry.SetAccessPath(parentChainPath, validateHasBeenSet);
    }
    
    /// <inheritdoc />
    [JsonPropertyName("$errors")]
    public List<ApiInlineError> InlineErrors { get; set; } = new();

}

